{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\PC\\\\VirtualNAU\\\\client\\\\src\\\\WorkshopsAdm\\\\deliverTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from 'react';\nimport { ModalOpener } from '../modalOpener';\nimport { Request, TaskRequest } from '../textInputs';\nimport Form from 'react-bootstrap/Form';\nimport image from './Images/DeliverTask.svg';\nimport moment from 'moment';\nimport Axios from 'axios';\nimport Table from 'react-bootstrap/Table';\nimport FormControl from 'react-bootstrap/FormControl';\nimport { ModalPrototype } from '../modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  error: true,\n  errors: [true, true],\n  showObsModal: false,\n  task: '',\n  name: '',\n  quantity: '',\n  money: '',\n  weight: '',\n  threads: '',\n  price: '',\n  faulty: '',\n  completed: false,\n  calification: '',\n  observation: ''\n};\nexport class DeliverTaskButton extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = initialState;\n    this.form = /*#__PURE__*/React.createRef();\n\n    this.resetState = () => {\n      this.setState(initialState);\n    };\n\n    this.updateError = (index, error) => {\n      let errors = [...this.state.errors];\n      errors[index] = error;\n      this.setState({\n        errors\n      });\n      let aux = false;\n      errors.map((e, key) => aux = aux && key === index ? error : e);\n      this.setState({\n        error: aux\n      });\n    };\n\n    this.handleEnter = event => {\n      if (event.key.toLowerCase() !== 'enter') return;\n      const form = this.form.current;\n      const index = [...form].indexOf(event.target);\n      if (form.elements[index + 1]) form.elements[index + 1].focus();\n    };\n\n    this.myForm = () => {\n      return /*#__PURE__*/_jsxDEV(Form, {\n        id: \"toPrint\",\n        ref: this.form,\n        onSubmit: e => e.preventDefault(),\n        children: [/*#__PURE__*/_jsxDEV(Request, {\n          toShow: \"name\",\n          handleEnter: this.handleEnter,\n          onChange: (value, error) => {\n            this.setState({\n              name: value\n            });\n            this.updateError(0, error);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: this.state.name,\n          onChange: (data, price, faulty, task, completed) => {\n            this.setState({\n              task,\n              quantity: data.quantity,\n              money: data.money,\n              weight: data.weight,\n              threads: data.threads,\n              completed,\n              price,\n              faulty\n            });\n            this.updateError(1, false);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.post = () => {\n      let aux = this.state;\n      let paid = false; //TODO: Debe ser true si y sólo si se pagó por completo a la tarea\n\n      if (!aux.completed) this.resetState();\n      Axios.post('http://localhost:3001/getTasks', {\n        id: aux.task\n      }).then(response => {\n        Axios.put('http://localhost:3001/payWorkshop', {\n          name: response.data[0].name,\n          money: aux.money - aux.quantity * aux.price\n        });\n      });\n      Axios.post('http://localhost:3001/newPart', {\n        name: aux.name,\n        task: aux.task,\n        date: moment(new Date()).format('DD/MM/YYYY'),\n        quantity: aux.quantity,\n        weight: Number(aux.weight).toFixed(1),\n        money: Number(aux.money).toFixed(1),\n        threads: aux.threads,\n        paid\n      }).then(() => {\n        if (aux.completed) this.setState({\n          showObsModal: true\n        });\n      });\n    };\n\n    this.completelyReturned = () => {\n      console.log(this.state);\n      Axios.put('http://localhost:3001/printObs', {\n        id: this.state.task,\n        observations: this.state.observation,\n        calification: this.state.calification,\n        faulty: this.state.faulty\n      });\n    };\n\n    this.print = () => {\n      if (this.state.error) {\n        alert('Error. No se puede imprimir una boleta inválida.');\n        return;\n      }\n\n      var printContents = document.getElementById('toPrint').innerHTML;\n      var originalContents = document.body.innerHTML;\n      document.body.innerHTML = printContents;\n      window.print();\n      document.body.innerHTML = originalContents;\n    };\n\n    this.sendObs = () => {\n      this.completelyReturned();\n      this.resetState();\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ModalOpener, {\n        buttonText: \"Recibir tarea\",\n        children: this.myForm(),\n        logo: image,\n        className: \"title\",\n        footer: {\n          label: 'Imprimir',\n          func: this.print,\n          show: !!document.getElementById(\"taskTable\")\n        },\n        title: \"Ingreso de tarea\",\n        post: this.post,\n        error: this.state.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalPrototype, {\n        title: \"Calificar\",\n        show: this.state.showObsModal,\n        post: this.sendObs,\n        handleClose: this.sendObs,\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Request, {\n            toShow: \"observation\",\n            onChange: e => this.setState({\n              observation: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Request, {\n            toShow: \"calification\",\n            onChange: e => this.setState({\n              calification: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\nexport const Input = _ref => {\n  _s();\n\n  let {\n    onChange,\n    name\n  } = _ref;\n  const [title, setTitle] = useState('Elegir tarea');\n  const [tasks, setTasks] = useState([]);\n  const [parts, setParts] = useState([]);\n  const [input, setInput] = useState({\n    quantity: 0,\n    weight: 0,\n    money: 0,\n    threads: 0\n  });\n  const [selectedTask, setSelectedTask] = useState('');\n  const [refund, setRefund] = useState(false);\n  const [completed, setCompleted] = useState(false);\n  const [account, setAccount] = useState('');\n  const [quantityBackUp, setQuantityBackUp] = useState('');\n  useEffect(() => {\n    setInput({\n      quantity: 0,\n      weight: 0,\n      money: 0,\n      threads: 0\n    });\n    Axios.post('http://localhost:3001/getParts', {\n      task: selectedTask.id\n    }).then(response => setParts(response.data));\n    if (name) Axios.post('http://localhost:3001/getAccount', {\n      name\n    }).then(response => setAccount(response.data[0].money));\n  }, [selectedTask]);\n  useEffect(() => {\n    let delivered = input.quantity;\n    let totalMoney = selectedTask.quantity * selectedTask.price - account;\n    parts.map(part => delivered += part.quantity);\n\n    if (quantityBackUp !== input.quantity) {\n      input.money = input.quantity * selectedTask.price;\n      if (input.money > totalMoney) input.money = totalMoney;\n      setQuantityBackUp(input.quantity);\n    }\n\n    onChange(input, selectedTask.price, selectedTask.quantity - delivered, selectedTask.id, delivered === selectedTask.quantity || completed);\n  }, [input, completed, refund]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const inputField = (property, total) => {\n    return /*#__PURE__*/_jsxDEV(FormControl, {\n      value: input[property],\n      onChange: e => {\n        if (isNaN(e.target.value) || total[property] < e.target.value && property !== 'money') return;\n        let aux = { ...input\n        };\n        aux[property] = e.target.value;\n        aux[property] = refund ? -Math.abs(aux[property]) : aux[property] < 0 ? 0 : aux[property];\n        if (property === 'quantity' || property === 'threads') aux[property] = Math.round(aux[property]);\n        setInput({ ...aux\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this);\n  };\n\n  const getTable = () => {\n    let total = {\n      quantity: selectedTask.quantity,\n      weight: selectedTask.weight,\n      money: selectedTask.quantity * selectedTask.price - account,\n      threads: selectedTask.threads\n    };\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [parts.map((part, index) => {\n        total = {\n          quantity: total.quantity - part.quantity,\n          weight: total.weight - part.weight,\n          money: total.money - part.money,\n          threads: total.threads - part.threads\n        };\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: part.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: part.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: total.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: Number(part.weight).toFixed(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: Number(total.weight).toFixed(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: part.threads\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: total.threads\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: '$' + Number(part.money).toFixed(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: '$' + Number(total.money).toFixed(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: moment(new Date()).format('DD/MM/YYYY')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: inputField('quantity', total)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: total.quantity - input.quantity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: inputField('weight', total)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: (total.weight - input.weight).toFixed(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: inputField('threads', total)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: total.threads - input.threads\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: inputField('money', total)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: '$' + (total.money - input.money).toFixed(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  };\n\n  const getExceeded = () => {\n    //Devuelve true si se excedió la fecha de entrega\n    if (!selectedTask.deadline) return;\n    let today = new Date();\n    today.setHours(0, 0, 0, 0);\n    var dateParts = selectedTask.deadline.split('/');\n    var deadline = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\n    return today > deadline;\n  };\n\n  if (name !== '') {\n    Axios.post('http://localhost:3001/getUnpaidTasks', {\n      name\n    }).then(response => {\n      if (response.data.length === 0) return;\n      setTasks(response.data);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        'justifyContent': 'space-between',\n        'display': 'flex',\n        'alignItems': 'baseline'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TaskRequest, {\n        setSelectedTask: setSelectedTask,\n        tasks: tasks,\n        title: title,\n        setTitle: setTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          'color': getExceeded() ? 'red' : 'green'\n        },\n        children: selectedTask === '' ? null : selectedTask.deadline\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }, this), title === 'Elegir tarea' ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n        onChange: () => {\n          setRefund(!refund);\n          input.money = -input.money;\n          input.quantity = -input.quantity;\n          input.threads = -input.threads;\n          input.weight = -input.weight;\n        },\n        label: \"Devoluci\\xF3n o correcci\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n        onChange: () => setCompleted(!completed),\n        label: \"Tarea cerrada\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        id: \"taskTable\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Fecha\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Cantidad entregada por el taller\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Cantidad total de la tarea\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Peso entregado por el taller\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Peso total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Hilos devueltos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Hilos totales\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Dinero entregado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Dinero total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              'backgroundColor': 'green'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: selectedTask.exitDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: selectedTask.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: selectedTask.weight\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: selectedTask.threads\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: '$' + account + ' (A CTA)'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: '$' + selectedTask.price * selectedTask.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 29\n          }, this), getTable()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_s(Input, \"BmUiLrZJWQkCwSvh2OvKe1WBWv4=\");\n\n_c = Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["D:/Users/PC/VirtualNAU/client/src/WorkshopsAdm/deliverTask.js"],"names":["React","Component","useState","useEffect","ModalOpener","Request","TaskRequest","Form","image","moment","Axios","Table","FormControl","ModalPrototype","initialState","error","errors","showObsModal","task","name","quantity","money","weight","threads","price","faulty","completed","calification","observation","DeliverTaskButton","state","form","createRef","resetState","setState","updateError","index","aux","map","e","key","handleEnter","event","toLowerCase","current","indexOf","target","elements","focus","myForm","preventDefault","value","data","post","paid","id","then","response","put","date","Date","format","Number","toFixed","completelyReturned","console","log","observations","print","alert","printContents","document","getElementById","innerHTML","originalContents","body","window","sendObs","render","label","func","show","Input","onChange","title","setTitle","tasks","setTasks","parts","setParts","input","setInput","selectedTask","setSelectedTask","refund","setRefund","setCompleted","account","setAccount","quantityBackUp","setQuantityBackUp","delivered","totalMoney","part","inputField","property","total","isNaN","Math","abs","round","getTable","getExceeded","deadline","today","setHours","dateParts","split","length","exitDate"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,eAArC;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,SAASC,cAAT,QAA+B,UAA/B;;;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,IADU;AAEjBC,EAAAA,MAAM,EAAE,CAAC,IAAD,EAAO,IAAP,CAFS;AAGjBC,EAAAA,YAAY,EAAE,KAHG;AAIjBC,EAAAA,IAAI,EAAE,EAJW;AAKjBC,EAAAA,IAAI,EAAE,EALW;AAMjBC,EAAAA,QAAQ,EAAE,EANO;AAOjBC,EAAAA,KAAK,EAAE,EAPU;AAQjBC,EAAAA,MAAM,EAAE,EARS;AASjBC,EAAAA,OAAO,EAAE,EATQ;AAUjBC,EAAAA,KAAK,EAAE,EAVU;AAWjBC,EAAAA,MAAM,EAAE,EAXS;AAYjBC,EAAAA,SAAS,EAAE,KAZM;AAajBC,EAAAA,YAAY,EAAE,EAbG;AAcjBC,EAAAA,WAAW,EAAE;AAdI,CAArB;AAiBA,OAAO,MAAMC,iBAAN,SAAgC5B,SAAhC,CAA0C;AAAA;AAAA;AAAA,SAE7C6B,KAF6C,GAErChB,YAFqC;AAAA,SAG7CiB,IAH6C,gBAGtC/B,KAAK,CAACgC,SAAN,EAHsC;;AAAA,SAK7CC,UAL6C,GAKhC,MAAM;AACf,WAAKC,QAAL,CAAcpB,YAAd;AACH,KAP4C;;AAAA,SAS7CqB,WAT6C,GAS/B,CAACC,KAAD,EAAQrB,KAAR,KAAkB;AAC5B,UAAIC,MAAM,GAAG,CAAC,GAAG,KAAKc,KAAL,CAAWd,MAAf,CAAb;AACAA,MAAAA,MAAM,CAACoB,KAAD,CAAN,GAAgBrB,KAAhB;AACA,WAAKmB,QAAL,CAAc;AAAElB,QAAAA;AAAF,OAAd;AAEA,UAAIqB,GAAG,GAAG,KAAV;AACArB,MAAAA,MAAM,CAACsB,GAAP,CAAW,CAACC,CAAD,EAAIC,GAAJ,KACPH,GAAG,GAAGA,GAAG,IAAKG,GAAG,KAAKJ,KAAhB,GAAyBrB,KAAzB,GAAiCwB,CAD3C;AAGA,WAAKL,QAAL,CAAc;AAAEnB,QAAAA,KAAK,EAAEsB;AAAT,OAAd;AACH,KAnB4C;;AAAA,SAqB7CI,WArB6C,GAqB9BC,KAAD,IAAW;AACrB,UAAIA,KAAK,CAACF,GAAN,CAAUG,WAAV,OAA4B,OAAhC,EACI;AACJ,YAAMZ,IAAI,GAAG,KAAKA,IAAL,CAAUa,OAAvB;AACA,YAAMR,KAAK,GAAG,CAAC,GAAGL,IAAJ,EAAUc,OAAV,CAAkBH,KAAK,CAACI,MAAxB,CAAd;AACA,UAAIf,IAAI,CAACgB,QAAL,CAAcX,KAAK,GAAG,CAAtB,CAAJ,EACIL,IAAI,CAACgB,QAAL,CAAcX,KAAK,GAAG,CAAtB,EAAyBY,KAAzB;AACP,KA5B4C;;AAAA,SA8B7CC,MA9B6C,GA8BpC,MAAM;AACX,0BACI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,SAAT;AAAmB,QAAA,GAAG,EAAE,KAAKlB,IAA7B;AAAmC,QAAA,QAAQ,EAAEQ,CAAC,IAAIA,CAAC,CAACW,cAAF,EAAlD;AAAA,gCACI,QAAC,OAAD;AAAS,UAAA,MAAM,EAAC,MAAhB;AAAuB,UAAA,WAAW,EAAE,KAAKT,WAAzC;AAAsD,UAAA,QAAQ,EAAE,CAACU,KAAD,EAAQpC,KAAR,KAAkB;AAC9E,iBAAKmB,QAAL,CAAc;AAAEf,cAAAA,IAAI,EAAEgC;AAAR,aAAd;AACA,iBAAKhB,WAAL,CAAiB,CAAjB,EAAoBpB,KAApB;AACH;AAHD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAE,KAAKe,KAAL,CAAWX,IAAxB;AAA8B,UAAA,QAAQ,EAAE,CAACiC,IAAD,EAAO5B,KAAP,EAAcC,MAAd,EAAsBP,IAAtB,EAA4BQ,SAA5B,KAA0C;AAC9E,iBAAKQ,QAAL,CAAc;AACVhB,cAAAA,IADU;AACJE,cAAAA,QAAQ,EAAEgC,IAAI,CAAChC,QADX;AACqBC,cAAAA,KAAK,EAAE+B,IAAI,CAAC/B,KADjC;AACwCC,cAAAA,MAAM,EAAE8B,IAAI,CAAC9B,MADrD;AAEVC,cAAAA,OAAO,EAAE6B,IAAI,CAAC7B,OAFJ;AAEaG,cAAAA,SAFb;AAEwBF,cAAAA,KAFxB;AAE+BC,cAAAA;AAF/B,aAAd;AAIA,iBAAKU,WAAL,CAAiB,CAAjB,EAAoB,KAApB;AACH;AAND;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAeH,KA9C4C;;AAAA,SAgD7CkB,IAhD6C,GAgDtC,MAAM;AACT,UAAIhB,GAAG,GAAG,KAAKP,KAAf;AACA,UAAIwB,IAAI,GAAG,KAAX,CAFS,CAEQ;;AACjB,UAAI,CAACjB,GAAG,CAACX,SAAT,EACI,KAAKO,UAAL;AACJvB,MAAAA,KAAK,CAAC2C,IAAN,CAAW,gCAAX,EAA6C;AAAEE,QAAAA,EAAE,EAAElB,GAAG,CAACnB;AAAV,OAA7C,EAA+DsC,IAA/D,CAAqEC,QAAD,IAAc;AAC9E/C,QAAAA,KAAK,CAACgD,GAAN,CAAU,mCAAV,EACI;AAAEvC,UAAAA,IAAI,EAAEsC,QAAQ,CAACL,IAAT,CAAc,CAAd,EAAiBjC,IAAzB;AAA+BE,UAAAA,KAAK,EAAEgB,GAAG,CAAChB,KAAJ,GAAYgB,GAAG,CAACjB,QAAJ,GAAeiB,GAAG,CAACb;AAArE,SADJ;AAEH,OAHD;AAIAd,MAAAA,KAAK,CAAC2C,IAAN,CAAW,+BAAX,EACI;AACIlC,QAAAA,IAAI,EAAEkB,GAAG,CAAClB,IADd;AACoBD,QAAAA,IAAI,EAAEmB,GAAG,CAACnB,IAD9B;AACoCyC,QAAAA,IAAI,EAAElD,MAAM,CAAC,IAAImD,IAAJ,EAAD,CAAN,CAAmBC,MAAnB,CAA0B,YAA1B,CAD1C;AACmFzC,QAAAA,QAAQ,EAAEiB,GAAG,CAACjB,QADjG;AAEIE,QAAAA,MAAM,EAAEwC,MAAM,CAACzB,GAAG,CAACf,MAAL,CAAN,CAAmByC,OAAnB,CAA2B,CAA3B,CAFZ;AAE2C1C,QAAAA,KAAK,EAAEyC,MAAM,CAACzB,GAAG,CAAChB,KAAL,CAAN,CAAkB0C,OAAlB,CAA0B,CAA1B,CAFlD;AAEgFxC,QAAAA,OAAO,EAAEc,GAAG,CAACd,OAF7F;AAEsG+B,QAAAA;AAFtG,OADJ,EAIOE,IAJP,CAIY,MAAM;AACV,YAAInB,GAAG,CAACX,SAAR,EACI,KAAKQ,QAAL,CAAc;AAAEjB,UAAAA,YAAY,EAAE;AAAhB,SAAd;AACP,OAPL;AAQH,KAjE4C;;AAAA,SAmE7C+C,kBAnE6C,GAmExB,MAAM;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpC,KAAjB;AACApB,MAAAA,KAAK,CAACgD,GAAN,CAAU,gCAAV,EACI;AACIH,QAAAA,EAAE,EAAE,KAAKzB,KAAL,CAAWZ,IADnB;AACyBiD,QAAAA,YAAY,EAAE,KAAKrC,KAAL,CAAWF,WADlD;AAC+DD,QAAAA,YAAY,EAAE,KAAKG,KAAL,CAAWH,YADxF;AAEIF,QAAAA,MAAM,EAAE,KAAKK,KAAL,CAAWL;AAFvB,OADJ;AAKH,KA1E4C;;AAAA,SA4E7C2C,KA5E6C,GA4ErC,MAAM;AACV,UAAI,KAAKtC,KAAL,CAAWf,KAAf,EAAsB;AAClBsD,QAAAA,KAAK,CAAC,kDAAD,CAAL;AACA;AACH;;AACD,UAAIC,aAAa,GAAGC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,SAAvD;AACA,UAAIC,gBAAgB,GAAGH,QAAQ,CAACI,IAAT,CAAcF,SAArC;AACAF,MAAAA,QAAQ,CAACI,IAAT,CAAcF,SAAd,GAA0BH,aAA1B;AACAM,MAAAA,MAAM,CAACR,KAAP;AACAG,MAAAA,QAAQ,CAACI,IAAT,CAAcF,SAAd,GAA0BC,gBAA1B;AACH,KAtF4C;;AAAA,SAwF7CG,OAxF6C,GAwFnC,MAAM;AACZ,WAAKb,kBAAL;AACA,WAAK/B,UAAL;AACH,KA3F4C;AAAA;;AA6F7C6C,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI,QAAC,WAAD;AAAa,QAAA,UAAU,EAAC,eAAxB;AAAwC,QAAA,QAAQ,EAAE,KAAK7B,MAAL,EAAlD;AAAiE,QAAA,IAAI,EAAEzC,KAAvE;AAA8E,QAAA,SAAS,EAAC,OAAxF;AACI,QAAA,MAAM,EAAE;AAAEuE,UAAAA,KAAK,EAAE,UAAT;AAAqBC,UAAAA,IAAI,EAAE,KAAKZ,KAAhC;AAAuCa,UAAAA,IAAI,EAAE,CAAC,CAACV,QAAQ,CAACC,cAAT,CAAwB,WAAxB;AAA/C,SADZ;AAEI,QAAA,KAAK,EAAC,kBAFV;AAE6B,QAAA,IAAI,EAAE,KAAKnB,IAFxC;AAE8C,QAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWf;AAFhE;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI,QAAC,cAAD;AAAgB,QAAA,KAAK,EAAC,WAAtB;AAAkC,QAAA,IAAI,EAAE,KAAKe,KAAL,CAAWb,YAAnD;AAAiE,QAAA,IAAI,EAAE,KAAK4D,OAA5E;AAAqF,QAAA,WAAW,EAAE,KAAKA,OAAvG;AAAA,+BACI;AAAA,kCACI,QAAC,OAAD;AAAS,YAAA,MAAM,EAAC,aAAhB;AAA8B,YAAA,QAAQ,EAAGtC,CAAD,IAAO,KAAKL,QAAL,CAAc;AAAEN,cAAAA,WAAW,EAAEW,CAAC,CAACO,MAAF,CAASK;AAAxB,aAAd;AAA/C;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,OAAD;AAAS,YAAA,MAAM,EAAC,cAAhB;AAA+B,YAAA,QAAQ,EAAGZ,CAAD,IAAO,KAAKL,QAAL,CAAc;AAAEP,cAAAA,YAAY,EAAEY,CAAC,CAACO,MAAF,CAASK;AAAzB,aAAd;AAAhD;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA,oBADJ;AAeH;;AA7G4C;AAgHjD,OAAO,MAAM+B,KAAK,GAAG,QAAwB;AAAA;;AAAA,MAAvB;AAAEC,IAAAA,QAAF;AAAYhE,IAAAA;AAAZ,GAAuB;AAEzC,QAAM,CAACiE,KAAD,EAAQC,QAAR,IAAoBnF,QAAQ,CAAC,cAAD,CAAlC;AACA,QAAM,CAACoF,KAAD,EAAQC,QAAR,IAAoBrF,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACsF,KAAD,EAAQC,QAAR,IAAoBvF,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACwF,KAAD,EAAQC,QAAR,IAAoBzF,QAAQ,CAAC;AAAEkB,IAAAA,QAAQ,EAAE,CAAZ;AAAeE,IAAAA,MAAM,EAAE,CAAvB;AAA0BD,IAAAA,KAAK,EAAE,CAAjC;AAAoCE,IAAAA,OAAO,EAAE;AAA7C,GAAD,CAAlC;AACA,QAAM,CAACqE,YAAD,EAAeC,eAAf,IAAkC3F,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAAC4F,MAAD,EAASC,SAAT,IAAsB7F,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACwB,SAAD,EAAYsE,YAAZ,IAA4B9F,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAAC+F,OAAD,EAAUC,UAAV,IAAwBhG,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACiG,cAAD,EAAiBC,iBAAjB,IAAsClG,QAAQ,CAAC,EAAD,CAApD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZwF,IAAAA,QAAQ,CAAC;AAAEvE,MAAAA,QAAQ,EAAE,CAAZ;AAAeE,MAAAA,MAAM,EAAE,CAAvB;AAA0BD,MAAAA,KAAK,EAAE,CAAjC;AAAoCE,MAAAA,OAAO,EAAE;AAA7C,KAAD,CAAR;AACAb,IAAAA,KAAK,CAAC2C,IAAN,CAAW,gCAAX,EAA6C;AAAEnC,MAAAA,IAAI,EAAE0E,YAAY,CAACrC;AAArB,KAA7C,EAAwEC,IAAxE,CAA6EC,QAAQ,IAAIgC,QAAQ,CAAChC,QAAQ,CAACL,IAAV,CAAjG;AACA,QAAIjC,IAAJ,EACIT,KAAK,CAAC2C,IAAN,CAAW,kCAAX,EAA+C;AAAElC,MAAAA;AAAF,KAA/C,EAAyDqC,IAAzD,CAA8DC,QAAQ,IAAIyC,UAAU,CAACzC,QAAQ,CAACL,IAAT,CAAc,CAAd,EAAiB/B,KAAlB,CAApF;AACP,GALQ,EAKN,CAACuE,YAAD,CALM,CAAT;AAOAzF,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIkG,SAAS,GAAGX,KAAK,CAACtE,QAAtB;AACA,QAAIkF,UAAU,GAAGV,YAAY,CAACxE,QAAb,GAAwBwE,YAAY,CAACpE,KAArC,GAA6CyE,OAA9D;AACAT,IAAAA,KAAK,CAAClD,GAAN,CAAUiE,IAAI,IAAIF,SAAS,IAAIE,IAAI,CAACnF,QAApC;;AAEA,QAAI+E,cAAc,KAAKT,KAAK,CAACtE,QAA7B,EAAuC;AACnCsE,MAAAA,KAAK,CAACrE,KAAN,GAAcqE,KAAK,CAACtE,QAAN,GAAiBwE,YAAY,CAACpE,KAA5C;AACA,UAAIkE,KAAK,CAACrE,KAAN,GAAciF,UAAlB,EACIZ,KAAK,CAACrE,KAAN,GAAciF,UAAd;AACJF,MAAAA,iBAAiB,CAACV,KAAK,CAACtE,QAAP,CAAjB;AACH;;AACD+D,IAAAA,QAAQ,CAACO,KAAD,EAAQE,YAAY,CAACpE,KAArB,EAA4BoE,YAAY,CAACxE,QAAb,GAAwBiF,SAApD,EAA+DT,YAAY,CAACrC,EAA5E,EAAiF8C,SAAS,KAAKT,YAAY,CAACxE,QAA3B,IAAuCM,SAAxH,CAAR;AACH,GAZQ,EAYN,CAACgE,KAAD,EAAQhE,SAAR,EAAmBoE,MAAnB,CAZM,CAAT,CAnByC,CA+BT;;AAEhC,QAAMU,UAAU,GAAG,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACpC,wBACI,QAAC,WAAD;AAAa,MAAA,KAAK,EAAEhB,KAAK,CAACe,QAAD,CAAzB;AACI,MAAA,QAAQ,EAAGlE,CAAD,IAAO;AACb,YAAIoE,KAAK,CAACpE,CAAC,CAACO,MAAF,CAASK,KAAV,CAAL,IAA0BuD,KAAK,CAACD,QAAD,CAAL,GAAkBlE,CAAC,CAACO,MAAF,CAASK,KAA3B,IAAoCsD,QAAQ,KAAK,OAA/E,EACI;AACJ,YAAIpE,GAAG,GAAG,EAAE,GAAGqD;AAAL,SAAV;AACArD,QAAAA,GAAG,CAACoE,QAAD,CAAH,GAAgBlE,CAAC,CAACO,MAAF,CAASK,KAAzB;AACAd,QAAAA,GAAG,CAACoE,QAAD,CAAH,GAAiBX,MAAD,GACZ,CAACc,IAAI,CAACC,GAAL,CAASxE,GAAG,CAACoE,QAAD,CAAZ,CADW,GAEXpE,GAAG,CAACoE,QAAD,CAAH,GAAgB,CAAjB,GAAsB,CAAtB,GAA0BpE,GAAG,CAACoE,QAAD,CAFjC;AAGA,YAAIA,QAAQ,KAAK,UAAb,IAA2BA,QAAQ,KAAK,SAA5C,EACIpE,GAAG,CAACoE,QAAD,CAAH,GAAgBG,IAAI,CAACE,KAAL,CAAWzE,GAAG,CAACoE,QAAD,CAAd,CAAhB;AACJd,QAAAA,QAAQ,CAAC,EAAE,GAAGtD;AAAL,SAAD,CAAR;AACH;AAZL;AAAA;AAAA;AAAA;AAAA,YADJ;AAeH,GAhBD;;AAkBA,QAAM0E,QAAQ,GAAG,MAAM;AAEnB,QAAIL,KAAK,GAAG;AACRtF,MAAAA,QAAQ,EAAEwE,YAAY,CAACxE,QADf;AAERE,MAAAA,MAAM,EAAEsE,YAAY,CAACtE,MAFb;AAGRD,MAAAA,KAAK,EAAEuE,YAAY,CAACxE,QAAb,GAAwBwE,YAAY,CAACpE,KAArC,GAA6CyE,OAH5C;AAIR1E,MAAAA,OAAO,EAAEqE,YAAY,CAACrE;AAJd,KAAZ;AAMA,wBACI;AAAA,iBACKiE,KAAK,CAAClD,GAAN,CAAU,CAACiE,IAAD,EAAOnE,KAAP,KAAiB;AACxBsE,QAAAA,KAAK,GAAG;AACJtF,UAAAA,QAAQ,EAAEsF,KAAK,CAACtF,QAAN,GAAiBmF,IAAI,CAACnF,QAD5B;AAEJE,UAAAA,MAAM,EAAEoF,KAAK,CAACpF,MAAN,GAAeiF,IAAI,CAACjF,MAFxB;AAGJD,UAAAA,KAAK,EAAEqF,KAAK,CAACrF,KAAN,GAAckF,IAAI,CAAClF,KAHtB;AAIJE,UAAAA,OAAO,EAAEmF,KAAK,CAACnF,OAAN,GAAgBgF,IAAI,CAAChF;AAJ1B,SAAR;AAMA,4BACI;AAAA,kCACI;AAAA,sBAAKgF,IAAI,CAAC5C;AAAV;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBAAK4C,IAAI,CAACnF;AAAV;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,sBAAKsF,KAAK,CAACtF;AAAX;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA,sBAAK0C,MAAM,CAACyC,IAAI,CAACjF,MAAN,CAAN,CAAoByC,OAApB,CAA4B,CAA5B;AAAL;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAA,sBAAKD,MAAM,CAAC4C,KAAK,CAACpF,MAAP,CAAN,CAAqByC,OAArB,CAA6B,CAA7B;AAAL;AAAA;AAAA;AAAA;AAAA,kBALJ,eAMI;AAAA,sBAAKwC,IAAI,CAAChF;AAAV;AAAA;AAAA;AAAA;AAAA,kBANJ,eAOI;AAAA,sBAAKmF,KAAK,CAACnF;AAAX;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAQI;AAAA,sBAAK,MAAMuC,MAAM,CAACyC,IAAI,CAAClF,KAAN,CAAN,CAAmB0C,OAAnB,CAA2B,CAA3B;AAAX;AAAA;AAAA;AAAA;AAAA,kBARJ,eASI;AAAA,sBAAK,MAAMD,MAAM,CAAC4C,KAAK,CAACrF,KAAP,CAAN,CAAoB0C,OAApB,CAA4B,CAA5B;AAAX;AAAA;AAAA;AAAA;AAAA,kBATJ;AAAA,WAAS3B,KAAT;AAAA;AAAA;AAAA;AAAA,gBADJ;AAaH,OApBA,CADL,eAsBI;AAAA,gCACI;AAAA,oBAAK3B,MAAM,CAAC,IAAImD,IAAJ,EAAD,CAAN,CAAmBC,MAAnB,CAA0B,YAA1B;AAAL;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAK2C,UAAU,CAAC,UAAD,EAAaE,KAAb;AAAf;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA,oBAAKA,KAAK,CAACtF,QAAN,GAAiBsE,KAAK,CAACtE;AAA5B;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA,oBAAKoF,UAAU,CAAC,QAAD,EAAWE,KAAX;AAAf;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAA,oBAAK,CAACA,KAAK,CAACpF,MAAN,GAAeoE,KAAK,CAACpE,MAAtB,EAA8ByC,OAA9B,CAAsC,CAAtC;AAAL;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI;AAAA,oBAAKyC,UAAU,CAAC,SAAD,EAAYE,KAAZ;AAAf;AAAA;AAAA;AAAA;AAAA,gBANJ,eAOI;AAAA,oBAAKA,KAAK,CAACnF,OAAN,GAAgBmE,KAAK,CAACnE;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAQI;AAAA,oBAAKiF,UAAU,CAAC,OAAD,EAAUE,KAAV;AAAf;AAAA;AAAA;AAAA;AAAA,gBARJ,eASI;AAAA,oBAAK,MAAM,CAACA,KAAK,CAACrF,KAAN,GAAcqE,KAAK,CAACrE,KAArB,EAA4B0C,OAA5B,CAAoC,CAApC;AAAX;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBJ;AAAA,oBADJ;AAoCH,GA5CD;;AA8CA,QAAMiD,WAAW,GAAG,MAAM;AAAC;AACvB,QAAI,CAACpB,YAAY,CAACqB,QAAlB,EACI;AACJ,QAAIC,KAAK,GAAG,IAAItD,IAAJ,EAAZ;AACAsD,IAAAA,KAAK,CAACC,QAAN,CAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB;AACA,QAAIC,SAAS,GAAGxB,YAAY,CAACqB,QAAb,CAAsBI,KAAtB,CAA4B,GAA5B,CAAhB;AACA,QAAIJ,QAAQ,GAAG,IAAIrD,IAAJ,CAAS,CAACwD,SAAS,CAAC,CAAD,CAAnB,EAAwBA,SAAS,CAAC,CAAD,CAAT,GAAe,CAAvC,EAA0C,CAACA,SAAS,CAAC,CAAD,CAApD,CAAf;AACA,WAAOF,KAAK,GAAGD,QAAf;AACH,GARD;;AAUA,MAAI9F,IAAI,KAAK,EAAb,EAAiB;AACbT,IAAAA,KAAK,CAAC2C,IAAN,CAAW,sCAAX,EAAmD;AAAElC,MAAAA;AAAF,KAAnD,EAA6DqC,IAA7D,CAAmEC,QAAD,IAAc;AAC5E,UAAIA,QAAQ,CAACL,IAAT,CAAckE,MAAd,KAAyB,CAA7B,EACI;AACJ/B,MAAAA,QAAQ,CAAC9B,QAAQ,CAACL,IAAV,CAAR;AACH,KAJD;AAKH;;AAED,sBACI;AAAA,4BACI;AAAK,MAAA,KAAK,EAAE;AAAE,0BAAkB,eAApB;AAAqC,mBAAW,MAAhD;AAAwD,sBAAc;AAAtE,OAAZ;AAAA,8BACI,QAAC,WAAD;AAAa,QAAA,eAAe,EAAEyC,eAA9B;AAA+C,QAAA,KAAK,EAAEP,KAAtD;AAA6D,QAAA,KAAK,EAAEF,KAApE;AAA2E,QAAA,QAAQ,EAAEC;AAArF;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAI,QAAA,KAAK,EAAE;AAAE,mBAAS2B,WAAW,KAAK,KAAL,GAAa;AAAnC,SAAX;AAAA,kBACMpB,YAAY,KAAK,EAAlB,GAAwB,IAAxB,GAA+BA,YAAY,CAACqB;AADjD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAOK7B,KAAK,KAAK,cAAV,gBAA2B,qCAA3B,gBACG;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,QAAQ,EAAE,MAAM;AACxBW,UAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACAJ,UAAAA,KAAK,CAACrE,KAAN,GAAc,CAACqE,KAAK,CAACrE,KAArB;AACAqE,UAAAA,KAAK,CAACtE,QAAN,GAAiB,CAACsE,KAAK,CAACtE,QAAxB;AACAsE,UAAAA,KAAK,CAACnE,OAAN,GAAgB,CAACmE,KAAK,CAACnE,OAAvB;AACAmE,UAAAA,KAAK,CAACpE,MAAN,GAAe,CAACoE,KAAK,CAACpE,MAAtB;AACH,SAND;AAMG,QAAA,KAAK,EAAC;AANT;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,QAAQ,EAAE,MAAM0E,YAAY,CAAC,CAACtE,SAAF,CAAxC;AAAsD,QAAA,KAAK,EAAC;AAA5D;AAAA;AAAA;AAAA;AAAA,cARJ,eASI,QAAC,KAAD;AAAO,QAAA,OAAO,MAAd;AAAe,QAAA,QAAQ,MAAvB;AAAwB,QAAA,EAAE,EAAC,WAA3B;AAAA,gCACI;AAAA,iCACI;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAcI;AAAA,kCACI;AAAI,YAAA,KAAK,EAAE;AAAE,iCAAmB;AAArB,aAAX;AAAA,oCACI;AAAA,wBAAKkE,YAAY,CAAC2B;AAAlB;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA,wBAAK3B,YAAY,CAACxE;AAAlB;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI;AAAA,wBAAKwE,YAAY,CAACtE;AAAlB;AAAA;AAAA;AAAA;AAAA,oBALJ,eAMI;AAAA;AAAA;AAAA;AAAA,oBANJ,eAOI;AAAA,wBAAKsE,YAAY,CAACrE;AAAlB;AAAA;AAAA;AAAA;AAAA,oBAPJ,eAQI;AAAA,wBAAK,MAAM0E,OAAN,GAAgB;AAArB;AAAA;AAAA;AAAA;AAAA,oBARJ,eASI;AAAA,wBAAK,MAAML,YAAY,CAACpE,KAAb,GAAqBoE,YAAY,CAACxE;AAA7C;AAAA;AAAA;AAAA;AAAA,oBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAYK2F,QAAQ,EAZb;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA,oBARR;AAAA,kBADJ;AAmDH,CAtKM;;GAAM7B,K;;KAAAA,K","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\r\nimport { ModalOpener } from '../modalOpener';\r\nimport { Request, TaskRequest } from '../textInputs';\r\nimport Form from 'react-bootstrap/Form';\r\nimport image from './Images/DeliverTask.svg';\r\nimport moment from 'moment';\r\nimport Axios from 'axios';\r\nimport Table from 'react-bootstrap/Table';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport { ModalPrototype } from '../modal';\r\n\r\nconst initialState = {\r\n    error: true,\r\n    errors: [true, true],\r\n    showObsModal: false,\r\n    task: '',\r\n    name: '',\r\n    quantity: '',\r\n    money: '',\r\n    weight: '',\r\n    threads: '',\r\n    price: '',\r\n    faulty: '',\r\n    completed: false,\r\n    calification: '',\r\n    observation: ''\r\n}\r\n\r\nexport class DeliverTaskButton extends Component {\r\n\r\n    state = initialState;\r\n    form = React.createRef();\r\n\r\n    resetState = () => {\r\n        this.setState(initialState);\r\n    }\r\n\r\n    updateError = (index, error) => {\r\n        let errors = [...this.state.errors];\r\n        errors[index] = error;\r\n        this.setState({ errors });\r\n\r\n        let aux = false;\r\n        errors.map((e, key) => \r\n            aux = aux && (key === index) ? error : e\r\n        );\r\n        this.setState({ error: aux });\r\n    }\r\n\r\n    handleEnter = (event) => {\r\n        if (event.key.toLowerCase() !== 'enter')\r\n            return;\r\n        const form = this.form.current;\r\n        const index = [...form].indexOf(event.target);\r\n        if (form.elements[index + 1])\r\n            form.elements[index + 1].focus();\r\n    };\r\n\r\n    myForm = () => {\r\n        return (\r\n            <Form id='toPrint' ref={this.form} onSubmit={e => e.preventDefault()}>\r\n                <Request toShow='name' handleEnter={this.handleEnter} onChange={(value, error) => {\r\n                    this.setState({ name: value });\r\n                    this.updateError(0, error);\r\n                }} />\r\n                <Input name={this.state.name} onChange={(data, price, faulty, task, completed) => {\r\n                    this.setState({\r\n                        task, quantity: data.quantity, money: data.money, weight: data.weight,\r\n                        threads: data.threads, completed, price, faulty\r\n                    });\r\n                    this.updateError(1, false);\r\n                }} />\r\n            </Form>\r\n        );\r\n    }\r\n\r\n    post = () => {\r\n        let aux = this.state;\r\n        let paid = false;//TODO: Debe ser true si y sólo si se pagó por completo a la tarea\r\n        if (!aux.completed)\r\n            this.resetState();\r\n        Axios.post('http://localhost:3001/getTasks', { id: aux.task }).then((response) => {\r\n            Axios.put('http://localhost:3001/payWorkshop',\r\n                { name: response.data[0].name, money: aux.money - aux.quantity * aux.price })\r\n        });\r\n        Axios.post('http://localhost:3001/newPart',\r\n            {\r\n                name: aux.name, task: aux.task, date: moment(new Date()).format('DD/MM/YYYY'), quantity: aux.quantity,\r\n                weight: Number(aux.weight).toFixed(1), money: Number(aux.money).toFixed(1), threads: aux.threads, paid\r\n            }).then(() => {\r\n                if (aux.completed)\r\n                    this.setState({ showObsModal: true });\r\n            });\r\n    }\r\n\r\n    completelyReturned = () => {\r\n        console.log(this.state);\r\n        Axios.put('http://localhost:3001/printObs',\r\n            {\r\n                id: this.state.task, observations: this.state.observation, calification: this.state.calification,\r\n                faulty: this.state.faulty\r\n            });\r\n    }\r\n\r\n    print = () => {\r\n        if (this.state.error) {\r\n            alert('Error. No se puede imprimir una boleta inválida.');\r\n            return;\r\n        }\r\n        var printContents = document.getElementById('toPrint').innerHTML;\r\n        var originalContents = document.body.innerHTML;\r\n        document.body.innerHTML = printContents;\r\n        window.print();\r\n        document.body.innerHTML = originalContents;\r\n    }\r\n\r\n    sendObs = () => {\r\n        this.completelyReturned();\r\n        this.resetState();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <ModalOpener buttonText=\"Recibir tarea\" children={this.myForm()} logo={image} className=\"title\"\r\n                    footer={{ label: 'Imprimir', func: this.print, show: !!document.getElementById(\"taskTable\") }}\r\n                    title=\"Ingreso de tarea\" post={this.post} error={this.state.error} />\r\n                {/*Crea un botón que abre a un modal en el que aparecerá lo devuelto en this.myForm*/}\r\n\r\n                <ModalPrototype title=\"Calificar\" show={this.state.showObsModal} post={this.sendObs} handleClose={this.sendObs}>\r\n                    <>\r\n                        <Request toShow=\"observation\" onChange={(e) => this.setState({ observation: e.target.value })} />\r\n                        <Request toShow=\"calification\" onChange={(e) => this.setState({ calification: e.target.value })} />\r\n                    </>\r\n                </ModalPrototype>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport const Input = ({ onChange, name }) => {\r\n\r\n    const [title, setTitle] = useState('Elegir tarea');\r\n    const [tasks, setTasks] = useState([]);\r\n    const [parts, setParts] = useState([]);\r\n    const [input, setInput] = useState({ quantity: 0, weight: 0, money: 0, threads: 0 });\r\n    const [selectedTask, setSelectedTask] = useState('');\r\n    const [refund, setRefund] = useState(false);\r\n    const [completed, setCompleted] = useState(false);\r\n    const [account, setAccount] = useState('');\r\n    const [quantityBackUp, setQuantityBackUp] = useState('');\r\n\r\n    useEffect(() => {\r\n        setInput({ quantity: 0, weight: 0, money: 0, threads: 0 });\r\n        Axios.post('http://localhost:3001/getParts', { task: selectedTask.id }).then(response => setParts(response.data));\r\n        if (name)\r\n            Axios.post('http://localhost:3001/getAccount', { name }).then(response => setAccount(response.data[0].money));\r\n    }, [selectedTask]);\r\n\r\n    useEffect(() => {\r\n        let delivered = input.quantity;\r\n        let totalMoney = selectedTask.quantity * selectedTask.price - account;\r\n        parts.map(part => delivered += part.quantity);\r\n\r\n        if (quantityBackUp !== input.quantity) {\r\n            input.money = input.quantity * selectedTask.price;\r\n            if (input.money > totalMoney)\r\n                input.money = totalMoney;\r\n            setQuantityBackUp(input.quantity);\r\n        }\r\n        onChange(input, selectedTask.price, selectedTask.quantity - delivered, selectedTask.id, (delivered === selectedTask.quantity || completed));\r\n    }, [input, completed, refund]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const inputField = (property, total) => {\r\n        return (\r\n            <FormControl value={input[property]}\r\n                onChange={(e) => {\r\n                    if (isNaN(e.target.value) || (total[property] < e.target.value && property !== 'money'))\r\n                        return;\r\n                    let aux = { ...input };\r\n                    aux[property] = e.target.value;\r\n                    aux[property] = (refund) ?\r\n                        -Math.abs(aux[property]) :\r\n                        (aux[property] < 0) ? 0 : aux[property];\r\n                    if (property === 'quantity' || property === 'threads')\r\n                        aux[property] = Math.round(aux[property]);\r\n                    setInput({ ...aux });\r\n                }} />\r\n        );\r\n    }\r\n\r\n    const getTable = () => {\r\n\r\n        let total = {\r\n            quantity: selectedTask.quantity,\r\n            weight: selectedTask.weight,\r\n            money: selectedTask.quantity * selectedTask.price - account,\r\n            threads: selectedTask.threads\r\n        };\r\n        return (\r\n            <>\r\n                {parts.map((part, index) => {\r\n                    total = {\r\n                        quantity: total.quantity - part.quantity,\r\n                        weight: total.weight - part.weight,\r\n                        money: total.money - part.money,\r\n                        threads: total.threads - part.threads,\r\n                    };\r\n                    return (\r\n                        <tr key={index}>{/*Muestra el medio*/}\r\n                            <td>{part.date}</td>\r\n                            <td>{part.quantity}</td>\r\n                            <td>{total.quantity}</td>\r\n                            <td>{Number(part.weight).toFixed(1)}</td>\r\n                            <td>{Number(total.weight).toFixed(1)}</td>\r\n                            <td>{part.threads}</td>\r\n                            <td>{total.threads}</td>\r\n                            <td>{'$' + Number(part.money).toFixed(1)}</td>\r\n                            <td>{'$' + Number(total.money).toFixed(1)}</td>\r\n                        </tr>\r\n                    );\r\n                })}\r\n                <tr>{/*Muestra la última fila*/}\r\n                    <td>{moment(new Date()).format('DD/MM/YYYY')}</td>\r\n                    <td>{inputField('quantity', total)}</td>\r\n                    <td>{total.quantity - input.quantity}</td>\r\n                    <td>{inputField('weight', total)}</td>\r\n                    <td>{(total.weight - input.weight).toFixed(1)}</td>\r\n                    <td>{inputField('threads', total)}</td>\r\n                    <td>{total.threads - input.threads}</td>\r\n                    <td>{inputField('money', total)}</td>\r\n                    <td>{'$' + (total.money - input.money).toFixed(1)}</td>\r\n                </tr>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const getExceeded = () => {//Devuelve true si se excedió la fecha de entrega\r\n        if (!selectedTask.deadline)\r\n            return;\r\n        let today = new Date();\r\n        today.setHours(0, 0, 0, 0);\r\n        var dateParts = selectedTask.deadline.split('/');\r\n        var deadline = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        return today > deadline;\r\n    }\r\n\r\n    if (name !== '') {\r\n        Axios.post('http://localhost:3001/getUnpaidTasks', { name }).then((response) => {\r\n            if (response.data.length === 0)\r\n                return;\r\n            setTasks(response.data);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={{ 'justifyContent': 'space-between', 'display': 'flex', 'alignItems': 'baseline' }}>\r\n                <TaskRequest setSelectedTask={setSelectedTask} tasks={tasks} title={title} setTitle={setTitle} />\r\n                <h4 style={{ 'color': getExceeded() ? 'red' : 'green' }}>\r\n                    {(selectedTask === '') ? null : selectedTask.deadline}\r\n                </h4>\r\n            </div>\r\n            {title === 'Elegir tarea' ? <></> :\r\n                <>\r\n                    <Form.Check onChange={() => {\r\n                        setRefund(!refund);\r\n                        input.money = -input.money;\r\n                        input.quantity = -input.quantity;\r\n                        input.threads = -input.threads;\r\n                        input.weight = -input.weight;\r\n                    }} label=\"Devolución o corrección\" />\r\n                    <Form.Check onChange={() => setCompleted(!completed)} label=\"Tarea cerrada\" />\r\n                    <Table striped bordered id=\"taskTable\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Fecha</th>\r\n                                <th>Cantidad entregada por el taller</th>\r\n                                <th>Cantidad total de la tarea</th>\r\n                                <th>Peso entregado por el taller</th>\r\n                                <th>Peso total</th>\r\n                                <th>Hilos devueltos</th>\r\n                                <th>Hilos totales</th>\r\n                                <th>Dinero entregado</th>\r\n                                <th>Dinero total</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr style={{ 'backgroundColor': 'green' }}>{/*Muestra el primero*/}\r\n                                <td>{selectedTask.exitDate}</td>\r\n                                <td></td>\r\n                                <td>{selectedTask.quantity}</td>\r\n                                <td></td>\r\n                                <td>{selectedTask.weight}</td>\r\n                                <td></td>\r\n                                <td>{selectedTask.threads}</td>\r\n                                <td>{'$' + account + ' (A CTA)'}</td>\r\n                                <td>{'$' + selectedTask.price * selectedTask.quantity}</td>\r\n                            </tr>\r\n                            {getTable()}\r\n                        </tbody>\r\n                    </Table>\r\n                </>\r\n            }\r\n        </>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}
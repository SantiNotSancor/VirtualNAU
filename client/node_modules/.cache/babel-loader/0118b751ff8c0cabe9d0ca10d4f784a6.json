{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\OneDrive\\\\Escritorio\\\\fabrica\\\\client\\\\src\\\\Menu\\\\RegistrationDrop\\\\modals.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { ModalPrototype } from '../../modal';\nimport { Request } from '../../textInputs';\nimport PropTypes from 'prop-types';\nimport Form from 'react-bootstrap/Form';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ModalArt = _ref => {\n  _s();\n\n  let {\n    handleClose,\n    show,\n    registration\n  } = _ref;\n  //Se encargará de los forms para dar de alta/baja a los artículos\n  const [id, setId] = useState('');\n  const [price, setPrice] = useState('');\n  const [description, setDescription] = useState('');\n\n  const post = () => {\n    if (registration) Axios.post('http://localhost:3001/regArticle', {\n      id,\n      price,\n      description\n    }).then(() => {\n      console.log('Artículos>Alta');\n    });else Axios.delete('http://localhost:3001/dropArticle/' + id).then(response => {\n      console.log('Artículos>Baja');\n    });\n  };\n\n  const myForm = () => {\n    if (registration) {\n      //de ser true, se está dando el alta, de lo contrario, la baja\n      return /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Request, {\n          toShow: \"article\",\n          onChange: event => {\n            setId(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Request, {\n          toShow: \"price\",\n          onChange: event => {\n            setPrice(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Request, {\n          toShow: \"description\",\n          onChange: event => {\n            setDescription(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this);\n    } else return /*#__PURE__*/_jsxDEV(Form, {\n      children: /*#__PURE__*/_jsxDEV(Request, {\n        toShow: \"article\",\n        onChange: event => {\n          setId(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ModalPrototype, {\n    show: show,\n    handleClose: handleClose,\n    children: myForm(),\n    title: (registration ? 'Alta' : 'Baja') + ' de artículo',\n    post: post\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this) //El modal debe mostrar el form especificado en Article\n  ;\n};\n\n_s(ModalArt, \"3eKn0r14hb8SC+BYk+GbZkoEQ/8=\");\n\n_c = ModalArt;\nModalArt.propTypes = {\n  handleClose: PropTypes.func.isRequired,\n  //Función que cierra el modal\n  show: PropTypes.bool.isRequired,\n  //True si y sólo si se debe o no ver el modal\n  registration: PropTypes.bool.isRequired //True si y sólo si se da un alta\n\n};\nexport const ModalWork = _ref2 => {\n  _s2();\n\n  let {\n    handleClose,\n    show,\n    registration\n  } = _ref2;\n  //Se encargará de los forms para dar de alta/baja a los talleres\n  const [name, setName] = useState('');\n  const [contact, setContact] = useState('');\n\n  const post = () => {\n    if (registration) {\n      let error;\n      Axios.get('http://localhost:3001/getNamesWhere', {\n        name\n      }).then(response => {\n        if (response.data === []) Axios.post('http://localhost:3001/regWorkshop', {\n          name,\n          contact\n        });else console.log(\"ERROR\");\n      });\n    } else Axios.post('http://localhost:3001/create', {\n      name\n    });\n  };\n\n  const myForm = () => {\n    if (registration) //de ser true, se está dando el alta, de lo contrario, la baja\n      return /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Request, {\n          toShow: \"regName\",\n          onChange: element => {\n            setName(element.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Datos de contacto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            height: \"500px\",\n            placeholder: \"Ingrese datos de contacto del tallerista\\u2026\",\n            onChange: event => {\n              setContact(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this);else return /*#__PURE__*/_jsxDEV(Request, {\n      toShow: \"name\",\n      onChange: element => {\n        setName(element);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ModalPrototype, {\n    show: show,\n    handleClose: handleClose,\n    children: myForm(),\n    title: (registration ? 'Alta' : 'Baja') + ' de taller',\n    post: post\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this) //El modal debe mostrar el form especificado en Workshop\n  ;\n};\n\n_s2(ModalWork, \"HhwiK1o0SpuFpY6reDMUNdBW26w=\");\n\n_c2 = ModalWork;\nModalWork.propTypes = ModalArt.propTypes;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ModalArt\");\n$RefreshReg$(_c2, \"ModalWork\");","map":{"version":3,"sources":["C:/Users/PC/OneDrive/Escritorio/fabrica/client/src/Menu/RegistrationDrop/modals.js"],"names":["React","useState","ModalPrototype","Request","PropTypes","Form","Axios","ModalArt","handleClose","show","registration","id","setId","price","setPrice","description","setDescription","post","then","console","log","delete","response","myForm","event","target","value","propTypes","func","isRequired","bool","ModalWork","name","setName","contact","setContact","error","get","data","element"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { ModalPrototype } from '../../modal';\r\nimport { Request } from '../../textInputs';\r\nimport PropTypes from 'prop-types';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Axios from 'axios';\r\n\r\nexport const ModalArt = ({ handleClose, show, registration }) => {//Se encargará de los forms para dar de alta/baja a los artículos\r\n\r\n    const [id, setId] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n    const post = () => {\r\n        if (registration)\r\n            Axios.post('http://localhost:3001/regArticle',\r\n                { id, price, description }).then(() => {\r\n                    console.log('Artículos>Alta');\r\n                });\r\n        else\r\n        Axios.delete('http://localhost:3001/dropArticle/' + id).then((response) => {\r\n                console.log('Artículos>Baja');\r\n            });\r\n    }\r\n\r\n    const myForm = () => {\r\n        if (registration) {//de ser true, se está dando el alta, de lo contrario, la baja\r\n            return (\r\n                <Form>\r\n                    <Request toShow=\"article\" onChange={(event) => {\r\n                        setId(event.target.value);\r\n                    }} />\r\n\r\n                    <Request toShow=\"price\" onChange={(event) => {\r\n                        setPrice(event.target.value);\r\n                    }} />\r\n\r\n                    <Request toShow=\"description\" onChange={(event) => {\r\n                        setDescription(event.target.value);\r\n                    }} />\r\n                </Form>\r\n            );\r\n        }\r\n        else\r\n            return (\r\n                <Form>\r\n                    <Request toShow=\"article\" onChange={(event) => {\r\n                        setId(event.target.value);\r\n                    }} />\r\n                </Form>\r\n            );\r\n    }\r\n\r\n    return (\r\n        <ModalPrototype show={show} handleClose={handleClose} children={myForm()}\r\n            title={((registration) ? 'Alta' : 'Baja') + ' de artículo'} post={post} />//El modal debe mostrar el form especificado en Article\r\n    );\r\n\r\n}\r\n\r\nModalArt.propTypes = {\r\n    handleClose: PropTypes.func.isRequired, //Función que cierra el modal\r\n    show: PropTypes.bool.isRequired, //True si y sólo si se debe o no ver el modal\r\n    registration: PropTypes.bool.isRequired //True si y sólo si se da un alta\r\n}\r\n\r\nexport const ModalWork = ({ handleClose, show, registration }) => {//Se encargará de los forms para dar de alta/baja a los talleres\r\n    const [name, setName] = useState('');\r\n    const [contact, setContact] = useState('');\r\n\r\n    const post = () => {\r\n        if (registration){\r\n            let error;\r\n            Axios.get('http://localhost:3001/getNamesWhere', {name}).then((response) => {\r\n                if(response.data === [])\r\n                    Axios.post('http://localhost:3001/regWorkshop', { name, contact })\r\n                else\r\n                    console.log(\"ERROR\");\r\n            });\r\n        }\r\n        else\r\n            Axios.post('http://localhost:3001/create',\r\n                { name });\r\n    }\r\n\r\n    const myForm = () => {\r\n        if (registration)//de ser true, se está dando el alta, de lo contrario, la baja\r\n            return (\r\n                <Form>\r\n                    <Request toShow=\"regName\" onChange={(element) => {\r\n                        setName(element.target.value);\r\n                    }} />\r\n\r\n                    <Form.Group className=\"mb-3\">\r\n                        <Form.Label>Datos de contacto</Form.Label>\r\n                        <Form.Control as=\"textarea\" height=\"500px\"\r\n                            placeholder=\"Ingrese datos de contacto del tallerista…\" onChange={(event) => {\r\n                                setContact(event.target.value);\r\n                            }} />\r\n                    </Form.Group>\r\n                </Form>\r\n            );\r\n        else\r\n            return (\r\n                <Request toShow=\"name\" onChange={(element) => {\r\n                    setName(element);\r\n                }} />\r\n            );\r\n    }\r\n\r\n    return (\r\n        <ModalPrototype show={show} handleClose={handleClose} children={myForm()}\r\n            title={((registration) ? 'Alta' : 'Baja') + ' de taller'} post={post} />//El modal debe mostrar el form especificado en Workshop\r\n    );\r\n}\r\n\r\nModalWork.propTypes = ModalArt.propTypes;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\OneDrive\\\\Escritorio\\\\fabrica\\\\client\\\\src\\\\textInputs.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Request = _ref => {\n  let {\n    onChange,\n    toShow,\n    label\n  } = _ref;\n  //Pedirá un dato con un input tipo text\n  let placeholder,\n      auxStorage = label;\n\n  switch (toShow) {\n    case 'name':\n      label = 'Nombre del taller';\n      placeholder = 'Ingrese el nombre del/la tallerista';\n      break;\n\n    case 'article':\n      label = 'Número de artículo';\n      placeholder = 'Ingrese el código único del artículo';\n      break;\n\n    case 'quantityArticle':\n      label = 'Cantidad asignada';\n      placeholder = 'Ingrese la cantidad de artículos';\n      break;\n\n    case 'task':\n      label = 'Número de tarea';\n      placeholder = 'Ingrese el número de tarea';\n      break;\n\n    case 'money':\n      label = 'Monto';\n      placeholder = 'Ingrese el monto a pagar';\n      break;\n\n    case 'price':\n      label = 'Precio';\n      placeholder = 'Ingrese el precio por unidad';\n      break;\n\n    case 'description':\n      label = 'Descripción';\n      placeholder = 'Ingrese una breve descripción del artículo';\n      break;\n\n    default:\n      console.log(\"ERROR, HA INGRESADO EL toShow \" + toShow + \" EN EL COMPONENTE TEXTINPUT\");\n  }\n\n  label = auxStorage ? auxStorage : label;\n  placeholder += '…';\n  return toShow === 'name' ? /*#__PURE__*/_jsxDEV(NameRequest, {\n    label: label,\n    placeholder: placeholder\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 35\n  }, this) : /*#__PURE__*/_jsxDEV(Form.Group, {\n    className: \"mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n      children: [toShow === 'money' ? /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n        children: \"$\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 41\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(FormControl, {\n        type: \"text\",\n        placeholder: placeholder,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), toShow === 'money' ? /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n        children: \".00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 41\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_c = Request;\nRequest.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  //Función a ejecutar cuando se modifica el input\n  toShow: PropTypes.string.isRequired,\n  label: PropTypes.string\n};\nexport const NameRequest = _ref2 => {\n  let {\n    label,\n    placeholder\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(Form.Group, {\n    className: \"mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n      children: /*#__PURE__*/_jsxDEV(DropdownWithFilter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_c2 = NameRequest;\nNameRequest.propTypes = {\n  label: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired\n};\n\nconst DropdownWithFilter = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [list, setList] = useState([]);\n  const [serverFetched, setServer] = useState(false);\n\n  if (!serverFetched) {\n    Axios.get('http://localhost:3001/dropdownNames').then(response => {\n      setList(response.data);\n    });\n  }\n\n  const CustomMenu = /*#__PURE__*/_s( /*#__PURE__*/React.forwardRef(_s((_ref3, ref) => {\n    _s();\n\n    let {\n      children\n    } = _ref3;\n    const [value, setValue] = useState('');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        onChange: e => {\n          setValue(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: React.Children.toArray(children).filter(child => !value || child.props.children.toLowerCase().startsWith(value.toLowerCase()))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }, this);\n  }, \"A2PXPeq8TepW328gUMM4+o8Xryo=\")), \"A2PXPeq8TepW328gUMM4+o8Xryo=\");\n\n  const CustomToggle = /*#__PURE__*/React.forwardRef((_ref4, ref) => {\n    let {\n      children,\n      onClick\n    } = _ref4;\n    return /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"\",\n      ref: ref,\n      onClick: e => {\n        e.preventDefault();\n        onClick(e);\n      },\n      children: [children, \"\\u25BC\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Dropdown, {\n      children: /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n        as: CustomMenu,\n        children: list.map((element, key) => {\n          return (\n            /*#__PURE__*/\n            //<Dropdown.Index key={key}>{element}</Dropdown.Index>\n            _jsxDEV(\"h4\", {\n              children: \"Hi\"\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 29\n            }, this)\n          );\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s2(DropdownWithFilter, \"0UEt4qVR+Equywacckm8XUupDx4=\");\n\n_c3 = DropdownWithFilter;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Request\");\n$RefreshReg$(_c2, \"NameRequest\");\n$RefreshReg$(_c3, \"DropdownWithFilter\");","map":{"version":3,"sources":["C:/Users/PC/OneDrive/Escritorio/fabrica/client/src/textInputs.js"],"names":["React","useState","PropTypes","Form","InputGroup","FormControl","Dropdown","Axios","Request","onChange","toShow","label","placeholder","auxStorage","console","log","propTypes","func","isRequired","string","NameRequest","DropdownWithFilter","list","setList","serverFetched","setServer","get","then","response","data","CustomMenu","forwardRef","ref","children","value","setValue","e","target","Children","toArray","filter","child","props","toLowerCase","startsWith","CustomToggle","onClick","preventDefault","map","element","key"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Form from 'react-bootstrap/Form';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Axios from 'axios';\r\n\r\nexport const Request = ({ onChange, toShow, label }) => {//Pedirá un dato con un input tipo text\r\n\r\n    let placeholder, auxStorage = label;\r\n\r\n    switch (toShow) {\r\n        case 'name':\r\n            label = 'Nombre del taller';\r\n            placeholder = 'Ingrese el nombre del/la tallerista';\r\n            break;\r\n        case 'article':\r\n            label = 'Número de artículo';\r\n            placeholder = 'Ingrese el código único del artículo';\r\n            break;\r\n        case 'quantityArticle':\r\n            label = 'Cantidad asignada';\r\n            placeholder = 'Ingrese la cantidad de artículos';\r\n            break;\r\n        case 'task':\r\n            label = 'Número de tarea';\r\n            placeholder = 'Ingrese el número de tarea';\r\n            break;\r\n        case 'money':\r\n            label = 'Monto';\r\n            placeholder = 'Ingrese el monto a pagar';\r\n            break;\r\n        case 'price':\r\n            label = 'Precio';\r\n            placeholder = 'Ingrese el precio por unidad';\r\n            break;\r\n        case 'description':\r\n            label = 'Descripción';\r\n            placeholder = 'Ingrese una breve descripción del artículo';\r\n            break;\r\n        default:\r\n            console.log(\"ERROR, HA INGRESADO EL toShow \" + toShow + \" EN EL COMPONENTE TEXTINPUT\");\r\n    }\r\n    label = (auxStorage) ? auxStorage : label;\r\n    placeholder += '…';\r\n    return ((toShow === 'name') ? <NameRequest label={label} placeholder={placeholder} /> :\r\n        <Form.Group className=\"mb-3\">\r\n            <Form.Label>{label}</Form.Label>\r\n            <InputGroup>\r\n                {(toShow === 'money') ? <InputGroup.Text>$</InputGroup.Text> : <></>}\r\n                <FormControl type=\"text\" placeholder={placeholder} onChange={onChange} />\r\n                {(toShow === 'money') ? <InputGroup.Text>.00</InputGroup.Text> : <></>}\r\n            </InputGroup>\r\n        </Form.Group>\r\n    );\r\n}\r\nRequest.propTypes = {\r\n    onChange: PropTypes.func.isRequired, //Función a ejecutar cuando se modifica el input\r\n    toShow: PropTypes.string.isRequired,\r\n    label: PropTypes.string\r\n}\r\n\r\nexport const NameRequest = ({ label, placeholder }) => {\r\n\r\n\r\n    return (\r\n        <Form.Group className=\"mb-3\">\r\n            <Form.Label>{label}</Form.Label>\r\n            <InputGroup>\r\n                <DropdownWithFilter />\r\n            </InputGroup>\r\n        </Form.Group>\r\n    );\r\n}\r\nNameRequest.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired\r\n}\r\n\r\n\r\nconst DropdownWithFilter = () => {\r\n    const [list, setList] = useState([]);\r\n    const [serverFetched, setServer] = useState(false);\r\n    if(!serverFetched) {\r\n        Axios.get('http://localhost:3001/dropdownNames').then((response) => {\r\n                setList(response.data);\r\n            });\r\n    }\r\n\r\n\r\n    const CustomMenu = React.forwardRef(\r\n        ({ children }, ref) => {\r\n            const [value, setValue] = useState('');\r\n            return (\r\n                <div>\r\n                    <FormControl\r\n                        onChange={(e) => {\r\n                            setValue(e.target.value)\r\n\r\n                        }}\r\n                    />\r\n                    <ul>\r\n                        {React.Children.toArray(children).filter(\r\n                            (child) =>\r\n                                !value || child.props.children.toLowerCase().startsWith(value.toLowerCase()),\r\n                        )}\r\n                    </ul>\r\n                </div>\r\n            );\r\n        },\r\n    );\r\n\r\n    const CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\r\n        <a\r\n            href=\"\"\r\n            ref={ref}\r\n            onClick={(e) => {\r\n                e.preventDefault();\r\n                onClick(e);\r\n            }}\r\n        >\r\n            {children}\r\n            &#x25bc;\r\n        </a>\r\n    ));\r\n\r\n    return (\r\n        <>\r\n            <Dropdown>\r\n                <Dropdown.Menu as={CustomMenu}>\r\n                    {list.map((element, key) => {\r\n                        return (\r\n                            //<Dropdown.Index key={key}>{element}</Dropdown.Index>\r\n                            <h4 key={key}>Hi</h4>\r\n                        );\r\n                    })}\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n        </>\r\n    );\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
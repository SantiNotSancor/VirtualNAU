{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lab2\\\\Documents\\\\GitHub\\\\VirtualNAU\\\\client\\\\src\\\\showData.js\";\nimport React, { Component } from 'react';\nimport Axios from 'axios';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Table from 'react-bootstrap/Table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  data: '',\n  //El nombre de la BD de la que sacamos los datos\n  table: [],\n  //La tabla de datos\n  actualTable: [],\n  //La tabla a mostrar\n  titles: [],\n  //Los atributos de la BD\n  headers: [],\n  //Los títulos que se mostrarán en la tabla\n  input: '',\n  //Ingreso de Inputbox para filtrar la tabla\n  filters: [],\n  //Lista que muestra el tipo de filtro\n  filterInputs: [] //Lista que contiene lo ingresado por el usuario en cada filtro\n\n};\nexport class ShowData extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = initialState;\n\n    this.resetState = () => this.setState(initialState);\n\n    this.setData = e => {\n      Axios.get('http://localhost:3307/get' + e.charAt(0).toUpperCase() + e.slice(1)).then(response => {\n        const res = response.data,\n              table = [],\n              titles = [];\n        console.log(res);\n        if (res) res.map(row => table.push(Object.values(row)));\n        Object.getOwnPropertyNames(res[0]).map(property => {\n          let header;\n\n          switch (property) {\n            case 'date':\n              header = 'Fecha';\n              break;\n\n            case 'id':\n              header = 'Código';\n              break;\n\n            case 'description':\n              header = 'Descripción';\n              break;\n\n            case 'name':\n              header = 'Nombre';\n              break;\n\n            case 'contact':\n              header = 'Contacto';\n              break;\n\n            case 'money':\n              header = this.state.data === 'Workshop' ? 'Cuenta corriente' : 'Saldo';\n              break;\n\n            case 'article_id':\n              header = 'Código de artículo';\n              break;\n\n            case 'article_description':\n              header = 'Descripción de artículo';\n              break;\n\n            case 'quantity':\n              header = 'Cantidad';\n              break;\n\n            case 'packages':\n              header = 'Bultos';\n              break;\n\n            case 'cutDate':\n              header = 'Fecha de corte';\n              break;\n\n            case 'fabrics':\n              header = 'Telas';\n              break;\n\n            case 'colors':\n              header = 'Colores';\n              break;\n\n            case 'responsable':\n              header = 'Responsable/s';\n              break;\n\n            case 'generalFeatures':\n              header = 'Detalles';\n              break;\n\n            case 'state':\n              header = 'Estado';\n              break;\n\n            case 'exitDate':\n              header = 'Fecha de salida';\n              break;\n\n            case 'deadline':\n              header = 'Fecha esperada';\n              break;\n\n            case 'weight':\n              header = 'Peso';\n              break;\n\n            case 'price':\n              header = 'Precio unitario';\n              break;\n\n            case 'threads':\n              header = 'Hilos entregados';\n              break;\n\n            case 'calification':\n              header = 'Calificación';\n              break;\n\n            case 'observations':\n              header = 'Observaciones';\n              break;\n\n            case 'faulty':\n              header = 'Fallados';\n              break;\n\n            case 'paid':\n              header = 'Pago';\n              break;\n          }\n\n          titles.push(header);\n        });\n        let filters = [];\n        let filterInputs = [];\n        titles.map(title => {\n          //TODO: \n          switch (title) {\n            case 'Descripción':\n            case 'Nombre':\n            case 'Contacto':\n            case 'Código de artículo':\n            case 'Descripción de artículo':\n            case 'Telas':\n            case 'Colores':\n            case 'Responsable/s':\n            case 'Detalles':\n            case 'Observaciones':\n              filters.push('input');\n              break;\n\n            case 'Saldo':\n            case 'Cantidad':\n            case 'Código':\n            case 'Bultos':\n            case 'Precio unitario':\n            case 'Peso':\n            case 'Hilos entregados':\n            case 'Calificación':\n            case 'Fallados':\n              filters.push('number');\n              break;\n\n            case 'Fecha':\n            case 'Fecha de corte':\n            case 'Fecha de salida':\n            case 'Fecha esperada':\n              filters.push('date');\n              break;\n\n            case 'Estado':\n              filters.push(['Todos', 'Asignado', 'No Asignado', 'Devuelto']);\n              break;\n\n            case 'Pago':\n              filters.push(['Todos', 'Pago', 'No Pago']);\n              break;\n\n            default:\n              filters.push('');\n              break;\n          }\n\n          filterInputs.push('');\n        });\n        console.log(filters);\n        this.setState({\n          titles,\n          table,\n          data: e,\n          filters,\n          filterInputs\n        });\n      });\n    };\n\n    this.compareTable = () => {\n      //Le asigna a actualTable una versión filtrada de table \n      const {\n        table,\n        filterInputs\n      } = this.state;\n      let actualTable = table;\n      console.log('hi'); //Filtrar actualTable\n\n      this.setState({\n        actualTable\n      });\n    };\n\n    this.table = (row, index, titles) => {\n      const {\n        data\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: row.map((e, i) => {\n          let cell = e;\n          return /*#__PURE__*/_jsxDEV(\"td\", {\n            children: cell\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 20\n          }, this);\n        })\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 16\n      }, this);\n    };\n  }\n\n  render() {\n    const {\n      table,\n      titles\n    } = this.state,\n          data = {\n      'articles': 'Artículos',\n      'workshops': 'Talleres',\n      'payments': 'Pagos',\n      'tasks': 'Tareas'\n    };\n    let title = 'Elegir datos a mostrar',\n        dropdownList = [];\n\n    for (const key in data) dropdownList.push(key);\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(DropdownButton, {\n        title: title,\n        onSelect: e => {\n          //Define la BD a mostrar\n          this.setData(e);\n          title = data.e;\n        },\n        children: dropdownList.map((e, index) => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          eventKey: e,\n          children: data[e]\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 53\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), titles && table ? /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: titles.map((title, i) => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: title\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 59\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: this.state.filters.map((filter, i) => {\n              switch (filter) {\n                case 'input':\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(FormControl, {\n                      onChange: e => {\n                        let aux = this.state.filterInputs;\n                        aux[i] = e.target.value;\n                        this.setState({\n                          filterInputs: aux\n                        });\n                        this.compareTable();\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 208,\n                      columnNumber: 60\n                    }, this)\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 48\n                  }, this);\n\n                case 'number':\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                      onChange: e => {\n                        let aux = this.state.filterInputs;\n                        if (aux[i] === '') aux[i] = ' ';\n                        let firstChar = aux[i][0];\n                        aux[i] = firstChar + e.target.value;\n                        this.setState({\n                          filterInputs: aux\n                        });\n                        this.compareTable();\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 215,\n                      columnNumber: 60\n                    }, this), /*#__PURE__*/_jsxDEV(DropdownButton, {\n                      onSelect: e => {\n                        let aux = this.state.filterInputs;\n                        if (aux[i] === '') aux[i] = e;else aux[i] = e + aux[i].substring(1);\n                        this.setState({\n                          filterInputs: aux\n                        });\n                        this.compareTable();\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                        eventKey: '>',\n                        children: \"Mayor\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 234,\n                        columnNumber: 45\n                      }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                        eventKey: '<',\n                        children: \"Menor\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 235,\n                        columnNumber: 45\n                      }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                        eventKey: '=',\n                        children: \"Igual\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 236,\n                        columnNumber: 45\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 225,\n                      columnNumber: 41\n                    }, this)]\n                  }, i, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 48\n                  }, this);\n\n                case 'date':\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: \"FALTA AGREGAR\"\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 48\n                  }, this);\n                //TODO: AGREGAR\n\n                default:\n                  if (!filter[0]) return /*#__PURE__*/_jsxDEV(\"td\", {}, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 52\n                  }, this);\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(DropdownButton, {\n                      onSelect: e => {\n                        let aux = this.state.filterInputs;\n                        aux[i] = e;\n                        this.setState({\n                          filterInputs: aux\n                        });\n                        this.compareTable();\n                      },\n                      children: filter.map((element, index) => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                        eventKey: element,\n                        children: element\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 251,\n                        columnNumber: 45\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 244,\n                      columnNumber: 41\n                    }, this)\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 48\n                  }, this);\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 29\n          }, this), table.map((row, i) => this.table(row, i, titles))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }, this) : null]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Lab2/Documents/GitHub/VirtualNAU/client/src/showData.js"],"names":["React","Component","Axios","Dropdown","DropdownButton","Form","FormControl","Table","initialState","data","table","actualTable","titles","headers","input","filters","filterInputs","ShowData","state","resetState","setState","setData","e","get","charAt","toUpperCase","slice","then","response","res","console","log","map","row","push","Object","values","getOwnPropertyNames","property","header","title","compareTable","index","i","cell","render","dropdownList","key","filter","aux","target","value","firstChar","substring","element"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Axios from 'axios';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Table from 'react-bootstrap/Table';\r\n\r\nconst initialState = {\r\n    data: '', //El nombre de la BD de la que sacamos los datos\r\n    table: [],//La tabla de datos\r\n    actualTable: [],//La tabla a mostrar\r\n    titles: [],//Los atributos de la BD\r\n    headers: [],//Los títulos que se mostrarán en la tabla\r\n    input: '',//Ingreso de Inputbox para filtrar la tabla\r\n    filters: [],//Lista que muestra el tipo de filtro\r\n    filterInputs: [] //Lista que contiene lo ingresado por el usuario en cada filtro\r\n};\r\n\r\nexport class ShowData extends Component {\r\n\r\n    state = initialState;\r\n\r\n    resetState = () => this.setState(initialState);\r\n\r\n    setData = e => {\r\n        Axios.get('http://localhost:3307/get' + e.charAt(0).toUpperCase() + e.slice(1)).then(response => {\r\n            const res = response.data, table = [], titles = [];\r\n            console.log(res);\r\n            if (res)\r\n                res.map(row => table.push(Object.values(row)));\r\n\r\n            Object.getOwnPropertyNames(res[0]).map(property => {\r\n                let header;\r\n                switch (property) {\r\n                    case 'date':\r\n                        header = 'Fecha';\r\n                        break;\r\n                    case 'id':\r\n                        header = 'Código';\r\n                        break;\r\n                    case 'description':\r\n                        header = 'Descripción';\r\n                        break;\r\n                    case 'name':\r\n                        header = 'Nombre';\r\n                        break;\r\n                    case 'contact':\r\n                        header = 'Contacto';\r\n                        break;\r\n                    case 'money':\r\n                        header = (this.state.data === 'Workshop') ? 'Cuenta corriente' : 'Saldo';\r\n                        break;\r\n                    case 'article_id':\r\n                        header = 'Código de artículo';\r\n                        break;\r\n                    case 'article_description':\r\n                        header = 'Descripción de artículo';\r\n                        break;\r\n                    case 'quantity':\r\n                        header = 'Cantidad';\r\n                        break;\r\n                    case 'packages':\r\n                        header = 'Bultos';\r\n                        break;\r\n                    case 'cutDate':\r\n                        header = 'Fecha de corte';\r\n                        break;\r\n                    case 'fabrics':\r\n                        header = 'Telas';\r\n                        break;\r\n                    case 'colors':\r\n                        header = 'Colores';\r\n                        break;\r\n                    case 'responsable':\r\n                        header = 'Responsable/s';\r\n                        break;\r\n                    case 'generalFeatures':\r\n                        header = 'Detalles';\r\n                        break;\r\n                    case 'state':\r\n                        header = 'Estado';\r\n                        break;\r\n                    case 'exitDate':\r\n                        header = 'Fecha de salida';\r\n                        break;\r\n                    case 'deadline':\r\n                        header = 'Fecha esperada';\r\n                        break;\r\n                    case 'weight':\r\n                        header = 'Peso';\r\n                        break;\r\n                    case 'price':\r\n                        header = 'Precio unitario';\r\n                        break;\r\n                    case 'threads':\r\n                        header = 'Hilos entregados';\r\n                        break;\r\n                    case 'calification':\r\n                        header = 'Calificación';\r\n                        break;\r\n                    case 'observations':\r\n                        header = 'Observaciones';\r\n                        break;\r\n                    case 'faulty':\r\n                        header = 'Fallados';\r\n                        break;\r\n                    case 'paid':\r\n                        header = 'Pago';\r\n                        break;\r\n                }\r\n                titles.push(header);\r\n            });\r\n            \r\n            let filters = [];\r\n            let filterInputs = [];\r\n            titles.map((title) => {//TODO: \r\n                switch(title){\r\n                    case 'Descripción':\r\n                    case 'Nombre':\r\n                    case 'Contacto':\r\n                    case 'Código de artículo':\r\n                    case 'Descripción de artículo':\r\n                    case 'Telas':\r\n                    case 'Colores':\r\n                    case 'Responsable/s':\r\n                    case 'Detalles':\r\n                    case 'Observaciones':\r\n                        filters.push('input');\r\n                        break;\r\n                    case 'Saldo':\r\n                    case 'Cantidad':\r\n                    case 'Código':\r\n                    case 'Bultos':\r\n                    case 'Precio unitario':\r\n                    case 'Peso':\r\n                    case 'Hilos entregados':\r\n                    case 'Calificación':\r\n                    case 'Fallados':\r\n                        filters.push('number');\r\n                        break;\r\n                    case 'Fecha':\r\n                    case 'Fecha de corte':\r\n                    case 'Fecha de salida':\r\n                    case 'Fecha esperada':\r\n                        filters.push('date');\r\n                        break;\r\n                    case 'Estado':\r\n                        filters.push(['Todos', 'Asignado', 'No Asignado', 'Devuelto']);\r\n                        break;\r\n                    case 'Pago':\r\n                        filters.push(['Todos', 'Pago', 'No Pago']);\r\n                        break;\r\n                    default:\r\n                        filters.push('');\r\n                        break;\r\n                }\r\n                filterInputs.push('');\r\n            })\r\n            console.log(filters);\r\n\r\n            this.setState({ titles, table, data: e, filters, filterInputs});\r\n        });\r\n    }\r\n\r\n    compareTable = () => {//Le asigna a actualTable una versión filtrada de table \r\n        const {table, filterInputs} = this.state;\r\n        let actualTable = table;\r\n        console.log('hi');\r\n\r\n        //Filtrar actualTable\r\n        this.setState({actualTable});\r\n    }\r\n\r\n    table = (row, index, titles) => {\r\n        const { data } = this.state;\r\n        return <tr key={index}>{row.map((e, i) => {\r\n            let cell = e;\r\n            return <td key={i}>{cell}</td>;\r\n        })}</tr>\r\n    }\r\n\r\n    render() {\r\n        const { table, titles } = this.state, data = { 'articles': 'Artículos', 'workshops': 'Talleres', 'payments': 'Pagos', 'tasks': 'Tareas' };\r\n        let title = 'Elegir datos a mostrar', dropdownList = [];\r\n        for (const key in data)\r\n            dropdownList.push(key);\r\n        return (\r\n            <>\r\n                <DropdownButton title={title} onSelect={e => {//Define la BD a mostrar\r\n                    this.setData(e);\r\n                    title = data.e;\r\n                }}>\r\n                    {dropdownList.map((e, index) => <Dropdown.Item key={index} eventKey={e}>{data[e]}</Dropdown.Item>)}\r\n                </DropdownButton>\r\n                {(titles && table) ?\r\n                    <Table striped bordered>\r\n                        <thead>\r\n                            <tr>\r\n                                {titles.map((title, i) => <th key={i}>{title}</th>)}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                            {this.state.filters.map((filter, i) => {\r\n                                switch (filter) {\r\n                                    case 'input':\r\n                                        return <td key={i}><FormControl onChange={(e) => {\r\n                                            let aux = this.state.filterInputs;\r\n                                            aux[i] = e.target.value;\r\n                                            this.setState({filterInputs: aux});\r\n                                            this.compareTable();\r\n                                        }}/></td>\r\n                                    case 'number':\r\n                                        return <td key={i}><FormControl onChange={(e) => {\r\n                                            let aux = this.state.filterInputs;\r\n                                            if(aux[i] === '')\r\n                                                aux[i] = ' ';\r\n                                            let firstChar = aux[i][0];\r\n                                            aux[i] = firstChar + e.target.value;\r\n                                            this.setState({filterInputs: aux});\r\n                                            this.compareTable();\r\n                                        }}/>\r\n                                        \r\n                                        <DropdownButton onSelect={(e) => {\r\n                                            let aux = this.state.filterInputs;\r\n                                            if(aux[i] === '')\r\n                                                aux[i] = e;\r\n                                            else\r\n                                                aux[i] = e + aux[i].substring(1);\r\n                                            this.setState({filterInputs: aux});\r\n                                            this.compareTable();\r\n                                        }}>\r\n                                            <Dropdown.Item eventKey={'>'}>Mayor</Dropdown.Item>\r\n                                            <Dropdown.Item eventKey={'<'}>Menor</Dropdown.Item>\r\n                                            <Dropdown.Item eventKey={'='}>Igual</Dropdown.Item>\r\n                                        </DropdownButton></td>\r\n                                    case 'date':\r\n                                        return <td key={i}>FALTA AGREGAR</td>//TODO: AGREGAR\r\n                                    default:\r\n                                        if(!filter[0])\r\n                                            return <td key={i}></td>;\r\n                                        return <td key={i}>\r\n                                        <DropdownButton onSelect={(e) => {\r\n                                            let aux = this.state.filterInputs;\r\n                                            aux[i] = e;\r\n                                            this.setState({filterInputs: aux});\r\n                                            this.compareTable();\r\n                                        }}>\r\n                                            {filter.map((element, index) => \r\n                                            <Dropdown.Item key={index} eventKey={element}>{element}</Dropdown.Item>)}\r\n                                        </DropdownButton></td>        \r\n                                }\r\n                            })}\r\n                            </tr>\r\n                            {table.map((row, i) => this.table(row, i, titles))}\r\n                        </tbody>\r\n                    </Table>\r\n                    : null}\r\n            </>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}
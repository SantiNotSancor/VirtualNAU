{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\OneDrive\\\\Escritorio\\\\fabrica\\\\client\\\\src\\\\Menu\\\\asignTask.js\";\nimport React, { Component } from 'react';\nimport { ModalOpener } from './modalOpener';\nimport { Request, TaskRequest } from '../textInputs';\nimport image from './Images/AsignTask.svg';\nimport Axios from 'axios';\nimport Form from 'react-bootstrap/Form';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class AsignTaskButton extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      name: '',\n      task: '',\n      deadline: '',\n      weight: '',\n      threads: '',\n      price: 0,\n      //Auto-asignar\n      packages: '',\n      description: '',\n      quantity: '',\n      //Otros\n      selectedTask: null,\n      tasks: [],\n      title: 'Elegir Tarea'\n    };\n\n    this.updateError = errors => {\n      let aux = false;\n      errors.map(e => {\n        if (e) aux = e;\n      });\n      this.setState({\n        error: aux\n      });\n    };\n\n    this.myForm = () => {\n      Axios.post('http://localhost:3001/getTasks', {\n        state: 'toAsign'\n      }).then(response => {\n        this.setState({\n          tasks: response.data\n        });\n      });\n      errors = [true, true, true, true, true, true];\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [this.state.selectedTask ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Bultos: \", this.state.selectedTask.packages]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Descripci\\xF3n: \", this.state.selectedTask.article_description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Cantidad: \", this.state.selectedTask.quantity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true) : null, /*#__PURE__*/_jsxDEV(Request, {\n          toShow: \"name\",\n          onChange: (event, error) => {\n            this.setState({\n              name: event\n            });\n            errors[0] = error;\n            this.updateError(errors);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Request, {\n          toShow: \"deadline\",\n          onChange: (event, error) => {\n            this.setState({\n              deadline: event.target.value\n            });\n            errors[1] = error;\n            this.updateError(errors);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TaskRequest, {\n          setSelectedTask: e => {\n            this.setState({\n              selectedTask: e\n            });\n            errors[2] = !!e;\n          },\n          tasks: this.state.tasks,\n          title: this.state.title,\n          setTitle: e => {\n            this.setState({\n              title: e\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Request, {\n          toShow: \"weight\",\n          onChange: (event, error) => {\n            this.setState({\n              weight: event.target.value\n            });\n            errors[3] = error;\n            this.updateError(errors);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Request, {\n          toShow: \"price\",\n          value: this.state.price,\n          onChange: (event, error) => {\n            this.setState({\n              price: event.target.value\n            });\n            errors[4] = error;\n            this.updateError(errors);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Request, {\n          toShow: \"threads\",\n          onChange: (event, error) => {\n            this.setState({\n              threads: event.target.value\n            });\n            errors[5] = error;\n            this.updateError(errors);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n    };\n\n    this.post = () => {\n      let aux = this.state;\n      Axios.put('http://localhost:3001/asignTask', {\n        name: aux.name,\n        task: this.state.selectedTask.id,\n        deadline: aux.deadline,\n        weight: aux.weight,\n        threads: aux.threads,\n        price: aux.price,\n        exitDate: moment(new Date()).format(\"DD/MM/YYYY\")\n      });\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.selectedTask === prevState.selectedTask && this.state.name === prevState.name) return;\n    if (!this.state.name || !this.state.selectedTask) return;\n    Axios.post('http://localhost:3001/getPrices', {\n      name: this.state.name,\n      article: this.state.selectedTask.article_id\n    }).then(response => {\n      //Se debe encontrar el mayor de los id que sean menores a selectedTask.id o el mayor, si no tiene menores\n      if (response.data.length === 0) return;\n      let currentId = this.state.selectedTask.id,\n          aux = response.data[0];\n      console.log(aux);\n      response.data.map(task => {\n        if (task.id > aux.id && task.id < currentId || task.id > currentId && (aux.id === 0 || aux.id > currentId)) aux = task;\n      });\n      console.log(aux);\n      this.setState({\n        price: aux.price\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(ModalOpener, {\n      buttonText: \"Remito\",\n      handleClose: () => this.setState({\n        selectedTask: null,\n        title: 'Elegir Tarea',\n        price: ''\n      }),\n      className: 'title',\n      logo: image,\n      title: 'Asignar Tarea',\n      post: this.post,\n      children: this.myForm()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this) //Crea un botón que abre a un modal en el que aparecerá lo devuelto en this.myForm\n    ;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/PC/OneDrive/Escritorio/fabrica/client/src/Menu/asignTask.js"],"names":["React","Component","ModalOpener","Request","TaskRequest","image","Axios","Form","moment","AsignTaskButton","state","name","task","deadline","weight","threads","price","packages","description","quantity","selectedTask","tasks","title","updateError","errors","aux","map","e","setState","error","myForm","post","then","response","data","article_description","event","target","value","put","id","exitDate","Date","format","componentDidUpdate","prevProps","prevState","article","article_id","length","currentId","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { ModalOpener } from './modalOpener';\r\nimport { Request, TaskRequest } from '../textInputs';\r\nimport image from './Images/AsignTask.svg';\r\nimport Axios from 'axios';\r\nimport Form from 'react-bootstrap/Form';\r\nimport moment from 'moment';\r\n\r\nexport class AsignTaskButton extends Component {\r\n    state = {\r\n        name: '',\r\n        task: '',\r\n        deadline: '',\r\n        weight: '',\r\n        threads: '',\r\n        price: 0,\r\n        //Auto-asignar\r\n        packages: '',\r\n        description: '',\r\n        quantity: '',\r\n        //Otros\r\n        selectedTask: null,\r\n        tasks: [],\r\n        title: 'Elegir Tarea'\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.state.selectedTask === prevState.selectedTask && this.state.name === prevState.name)\r\n            return;\r\n        if (!this.state.name || !this.state.selectedTask)\r\n            return;\r\n        Axios.post('http://localhost:3001/getPrices',\r\n            { name: this.state.name, article: this.state.selectedTask.article_id }).then((response) => {\r\n                //Se debe encontrar el mayor de los id que sean menores a selectedTask.id o el mayor, si no tiene menores\r\n                if (response.data.length === 0)\r\n                    return;\r\n                let currentId = this.state.selectedTask.id, aux = response.data[0];\r\n                console.log(aux);\r\n                response.data.map((task) => {\r\n                    if ((task.id > aux.id && task.id < currentId) || (task.id > currentId && (aux.id === 0 || aux.id > currentId)))\r\n                        aux = task;\r\n                })\r\n                console.log(aux);\r\n                this.setState({ price: aux.price });\r\n            });\r\n    }\r\n\r\n    updateError = (errors) => {\r\n        let aux = false;\r\n        errors.map((e) => { if (e) aux = e });\r\n        this.setState({ error: aux });\r\n    }\r\n\r\n    myForm = () => {\r\n        Axios.post('http://localhost:3001/getTasks', { state: 'toAsign' }).then((response) => {\r\n            this.setState({ tasks: response.data });\r\n        });\r\n        errors = [true, true, true, true, true, true];\r\n        return (\r\n            <>\r\n                {this.state.selectedTask ?\r\n                    <>\r\n                        <h3>Bultos: {this.state.selectedTask.packages}</h3>\r\n                        <h3>Descripción: {this.state.selectedTask.article_description}</h3>\r\n                        <h3>Cantidad: {this.state.selectedTask.quantity}</h3>\r\n                    </>\r\n                    : null}\r\n\r\n                <Request toShow=\"name\" onChange={(event, error) => {\r\n                    this.setState({ name: event });\r\n                    errors[0] = error;\r\n                    this.updateError(errors);\r\n                }} />\r\n\r\n                <Request toShow=\"deadline\" onChange={(event, error) => {\r\n                    this.setState({ deadline: event.target.value });\r\n                    errors[1] = error;\r\n                    this.updateError(errors);\r\n                }} />\r\n\r\n                <TaskRequest setSelectedTask={(e) => {\r\n                    this.setState({ selectedTask: e });\r\n                    errors[2] = !!e; }} tasks={this.state.tasks}\r\n                    title={this.state.title} setTitle={(e) => { this.setState({ title: e }) }} />\r\n\r\n                <Request toShow=\"weight\" onChange={(event, error) => {\r\n                    this.setState({ weight: event.target.value });\r\n                    errors[3] = error;\r\n                    this.updateError(errors);\r\n                }} />\r\n\r\n                <Request toShow=\"price\" value={this.state.price} onChange={(event, error) => {\r\n                    this.setState({ price: event.target.value });\r\n                    errors[4] = error;\r\n                    this.updateError(errors);\r\n                }} />\r\n\r\n                <Request toShow=\"threads\" onChange={(event, error) => {\r\n                    this.setState({ threads: event.target.value });\r\n                    errors[5] = error;\r\n                    this.updateError(errors);\r\n                }} />\r\n            </>\r\n        );\r\n    }\r\n\r\n    post = () => {\r\n        let aux = this.state;\r\n        Axios.put('http://localhost:3001/asignTask', {\r\n            name: aux.name, task: this.state.selectedTask.id, deadline: aux.deadline, weight: aux.weight, threads: aux.threads,\r\n            price: aux.price, exitDate: moment(new Date()).format(\"DD/MM/YYYY\")\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ModalOpener buttonText='Remito' handleClose={() => this.setState({ selectedTask: null, title: 'Elegir Tarea', price: '' })}\r\n                className={'title'} logo={image} title={'Asignar Tarea'} post={this.post} children={this.myForm()} />\r\n            //Crea un botón que abre a un modal en el que aparecerá lo devuelto en this.myForm\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}
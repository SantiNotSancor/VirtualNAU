{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\OneDrive\\\\Escritorio\\\\fabrica\\\\client\\\\src\\\\Menu\\\\asignTask.js\";\nimport React, { Component } from 'react';\nimport { ModalOpener } from './modalOpener';\nimport { Request, TaskRequest } from '../textInputs';\nimport image from './Images/AsignTask.svg';\nimport Axios from 'axios';\nimport Form from 'react-bootstrap/Form';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  name: '',\n  task: '',\n  deadline: '',\n  weight: '',\n  threads: '',\n  price: 0,\n  //Auto-asignar\n  packages: '',\n  description: '',\n  quantity: '',\n  //Otros\n  error: true,\n  errors: [true, true, true, true, true, true],\n  selectedTask: null,\n  tasks: [],\n  title: 'Elegir Tarea'\n};\nexport class AsignTaskButton extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = initialState;\n\n    this.resetState = () => {\n      this.setState(initialState);\n    };\n\n    this.updateError = (index, error) => {\n      let errors = [...this.state.errors];\n      errors[index] = error;\n      this.setState({\n        errors\n      });\n      let aux = false;\n      errors.map((e, key) => {\n        aux = aux && key === index ? error : e;\n      });\n      this.setState({\n        error: aux\n      });\n    };\n\n    this.updateError = errors => {\n      let aux = false;\n      errors.map(e => {\n        if (e) aux = e;\n      });\n      this.setState({\n        error: aux\n      });\n    };\n\n    this.myForm = () => {\n      Axios.post('http://localhost:3001/getTasks', {\n        state: 'toAsign'\n      }).then(response => {\n        this.setState({\n          tasks: response.data\n        });\n      });\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [this.state.selectedTask ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Bultos: \", this.state.selectedTask.packages]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Descripci\\xF3n: \", this.state.selectedTask.article_description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Cantidad: \", this.state.selectedTask.quantity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true) : null, /*#__PURE__*/_jsxDEV(Request, {\n          toShow: \"name\",\n          onChange: (event, error) => {\n            this.setState({\n              name: event\n            });\n            this.updateError(0, error);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Request, {\n          toShow: \"deadline\",\n          onChange: (event, error) => {\n            this.setState({\n              deadline: event.target.value\n            });\n            this.updateError(1, error);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TaskRequest, {\n          setSelectedTask: e => {\n            this.setState({\n              selectedTask: e\n            });\n            this.updateError(2, !!e);\n          },\n          tasks: this.state.tasks,\n          title: this.state.title,\n          setTitle: e => {\n            this.setState({\n              title: e\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Request, {\n          toShow: \"weight\",\n          onChange: (event, error) => {\n            this.setState({\n              weight: event.target.value\n            });\n            this.updateError(3, error);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Request, {\n          toShow: \"price\",\n          value: this.state.price,\n          onChange: (event, error) => {\n            this.setState({\n              price: event.target.value\n            });\n            this.updateError(4, error);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Request, {\n          toShow: \"threads\",\n          onChange: (event, error) => {\n            this.setState({\n              threads: event.target.value\n            });\n            this.updateError(5, error);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n    };\n\n    this.post = () => {\n      let aux = this.state;\n      Axios.put('http://localhost:3001/asignTask', {\n        name: aux.name,\n        task: this.state.selectedTask.id,\n        deadline: aux.deadline,\n        weight: aux.weight,\n        threads: aux.threads,\n        price: aux.price,\n        exitDate: moment(new Date()).format(\"DD/MM/YYYY\")\n      });\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.selectedTask === prevState.selectedTask && this.state.name === prevState.name) return;\n    if (!this.state.name || !this.state.selectedTask) return;\n    Axios.post('http://localhost:3001/getPrices', {\n      name: this.state.name,\n      article: this.state.selectedTask.article_id\n    }).then(response => {\n      //Se debe encontrar el mayor de los id que sean menores a selectedTask.id o el mayor, si no tiene menores\n      if (response.data.length === 0) return;\n      let currentId = this.state.selectedTask.id,\n          aux = response.data[0];\n      console.log(aux);\n      response.data.map(task => {\n        if (task.id > aux.id && task.id < currentId || task.id > currentId && (aux.id === 0 || aux.id > currentId)) aux = task;\n      });\n      console.log(aux);\n      this.setState({\n        price: aux.price\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(ModalOpener, {\n      buttonText: \"Remito\",\n      handleClose: this.resetState,\n      className: 'title',\n      logo: image,\n      title: 'Asignar Tarea',\n      post: this.post,\n      children: this.myForm()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this) //Crea un botón que abre a un modal en el que aparecerá lo devuelto en this.myForm\n    ;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/PC/OneDrive/Escritorio/fabrica/client/src/Menu/asignTask.js"],"names":["React","Component","ModalOpener","Request","TaskRequest","image","Axios","Form","moment","initialState","name","task","deadline","weight","threads","price","packages","description","quantity","error","errors","selectedTask","tasks","title","AsignTaskButton","state","resetState","setState","updateError","index","aux","map","e","key","myForm","post","then","response","data","article_description","event","target","value","put","id","exitDate","Date","format","componentDidUpdate","prevProps","prevState","article","article_id","length","currentId","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { ModalOpener } from './modalOpener';\r\nimport { Request, TaskRequest } from '../textInputs';\r\nimport image from './Images/AsignTask.svg';\r\nimport Axios from 'axios';\r\nimport Form from 'react-bootstrap/Form';\r\nimport moment from 'moment';\r\n\r\nconst initialState = {\r\n    name: '',\r\n    task: '',\r\n    deadline: '',\r\n    weight: '',\r\n    threads: '',\r\n    price: 0,\r\n    //Auto-asignar\r\n    packages: '',\r\n    description: '',\r\n    quantity: '',\r\n    //Otros\r\n    error: true,\r\n    errors: [true, true, true, true, true, true],\r\n    selectedTask: null,\r\n    tasks: [],\r\n    title: 'Elegir Tarea'\r\n};\r\n\r\nexport class AsignTaskButton extends Component {\r\n    state = initialState;\r\n\r\n    resetState = () => {\r\n        this.setState(initialState);\r\n    }\r\n\r\n    updateError = (index, error) => {\r\n        let errors = [...this.state.errors];\r\n        errors[index] = error;\r\n        this.setState({ errors });\r\n\r\n        let aux = false;\r\n        errors.map((e, key) => {\r\n            aux = aux && (key === index) ? error : e;\r\n        });\r\n        this.setState({ error: aux });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.state.selectedTask === prevState.selectedTask && this.state.name === prevState.name)\r\n            return;\r\n        if (!this.state.name || !this.state.selectedTask)\r\n            return;\r\n        Axios.post('http://localhost:3001/getPrices',\r\n            { name: this.state.name, article: this.state.selectedTask.article_id }).then((response) => {\r\n                //Se debe encontrar el mayor de los id que sean menores a selectedTask.id o el mayor, si no tiene menores\r\n                if (response.data.length === 0)\r\n                    return;\r\n                let currentId = this.state.selectedTask.id, aux = response.data[0];\r\n                console.log(aux);\r\n                response.data.map((task) => {\r\n                    if ((task.id > aux.id && task.id < currentId) || (task.id > currentId && (aux.id === 0 || aux.id > currentId)))\r\n                        aux = task;\r\n                })\r\n                console.log(aux);\r\n                this.setState({ price: aux.price });\r\n            });\r\n    }\r\n\r\n    updateError = (errors) => {\r\n        let aux = false;\r\n        errors.map((e) => { if (e) aux = e });\r\n        this.setState({ error: aux });\r\n    }\r\n\r\n    myForm = () => {\r\n        Axios.post('http://localhost:3001/getTasks', { state: 'toAsign' }).then((response) => {\r\n            this.setState({ tasks: response.data });\r\n        });\r\n        return (\r\n            <>\r\n                {this.state.selectedTask ?\r\n                    <>\r\n                        <h3>Bultos: {this.state.selectedTask.packages}</h3>\r\n                        <h3>Descripción: {this.state.selectedTask.article_description}</h3>\r\n                        <h3>Cantidad: {this.state.selectedTask.quantity}</h3>\r\n                    </>\r\n                    : null}\r\n\r\n                <Request toShow=\"name\" onChange={(event, error) => {\r\n                    this.setState({ name: event });\r\n                    this.updateError(0, error);\r\n                }} />\r\n\r\n                <Request toShow=\"deadline\" onChange={(event, error) => {\r\n                    this.setState({ deadline: event.target.value });\r\n                    this.updateError(1, error);\r\n                }} />\r\n\r\n                <TaskRequest setSelectedTask={(e) => {\r\n                    this.setState({ selectedTask: e });\r\n                    this.updateError(2, !!e);\r\n                }} tasks={this.state.tasks}\r\n                    title={this.state.title} setTitle={(e) => { this.setState({ title: e }) }} />\r\n\r\n                <Request toShow=\"weight\" onChange={(event, error) => {\r\n                    this.setState({ weight: event.target.value });\r\n                    this.updateError(3, error);\r\n                }} />\r\n\r\n                <Request toShow=\"price\" value={this.state.price} onChange={(event, error) => {\r\n                    this.setState({ price: event.target.value });\r\n                    this.updateError(4, error);\r\n                }} />\r\n\r\n                <Request toShow=\"threads\" onChange={(event, error) => {\r\n                    this.setState({ threads: event.target.value });\r\n                    this.updateError(5, error);\r\n                }} />\r\n            </>\r\n        );\r\n    }\r\n\r\n    post = () => {\r\n        let aux = this.state;\r\n        Axios.put('http://localhost:3001/asignTask', {\r\n            name: aux.name, task: this.state.selectedTask.id, deadline: aux.deadline, weight: aux.weight, threads: aux.threads,\r\n            price: aux.price, exitDate: moment(new Date()).format(\"DD/MM/YYYY\")\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ModalOpener buttonText='Remito' handleClose={this.resetState}\r\n                className={'title'} logo={image} title={'Asignar Tarea'} post={this.post} children={this.myForm()} />\r\n            //Crea un botón que abre a un modal en el que aparecerá lo devuelto en this.myForm\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}
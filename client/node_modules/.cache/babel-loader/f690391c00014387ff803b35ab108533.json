{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\OneDrive\\\\Escritorio\\\\fabrica\\\\src\\\\Menu\\\\modalOpener.js\";\nimport React from 'react';\nimport { ModalController, ModalPrototype } from '../modal';\nimport PropTypes from 'prop-types'; //Crea un botón que abre un modal\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ModalOpener extends ModalController {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.showModal,\n        className: \"title\",\n        children: this.props.buttonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalPrototype, {\n        show: this.state.showModal,\n        handleClose: this.hideModal,\n        children: this.props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nModalOpener.propTypes = {\n  buttonText: PropTypes.string.isRequired,\n  //Texto que aparecerá en el botón\n  children: PropTypes.element.isRequired //Hijo que aparecerá en el modal\n\n};","map":{"version":3,"sources":["C:/Users/PC/OneDrive/Escritorio/fabrica/src/Menu/modalOpener.js"],"names":["React","ModalController","ModalPrototype","PropTypes","ModalOpener","render","showModal","props","buttonText","state","hideModal","children","propTypes","string","isRequired","element"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,EAA0BC,cAA1B,QAAgD,UAAhD;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;;AAEA,OAAO,MAAMC,WAAN,SAA0BH,eAA1B,CAA0C;AAE7CI,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAE,KAAKC,SAAtB;AAAiC,QAAA,SAAS,EAAC,OAA3C;AAAA,kBACK,KAAKC,KAAL,CAAWC;AADhB;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,cAAD;AAAgB,QAAA,IAAI,EAAE,KAAKC,KAAL,CAAWH,SAAjC;AAA4C,QAAA,WAAW,EAAE,KAAKI,SAA9D;AAAyE,QAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWI;AAA9F;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AAZ4C;AAgBjDP,WAAW,CAACQ,SAAZ,GAAwB;AACpBJ,EAAAA,UAAU,EAAEL,SAAS,CAACU,MAAV,CAAiBC,UADT;AACoB;AACxCH,EAAAA,QAAQ,EAAER,SAAS,CAACY,OAAV,CAAkBD,UAFR,CAEkB;;AAFlB,CAAxB","sourcesContent":["import React from 'react';\r\nimport { ModalController, ModalPrototype } from '../modal';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Crea un botón que abre un modal\r\n\r\nexport class ModalOpener extends ModalController {\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <button onClick={this.showModal} className='title'>{/*Hereda la función desde ModalController*/}\r\n                    {this.props.buttonText}\r\n                </button>\r\n                <ModalPrototype show={this.state.showModal} handleClose={this.hideModal} children={this.props.children} />\r\n                {/*Crea un Modal que se muestra si this.state.showModal y con hijo(s) this.props.children*/}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nModalOpener.propTypes = {\r\n    buttonText: PropTypes.string.isRequired,//Texto que aparecerá en el botón\r\n    children: PropTypes.element.isRequired//Hijo que aparecerá en el modal\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lab2\\\\Documents\\\\GitHub\\\\VirtualNAU\\\\client\\\\src\\\\showData.js\";\nimport React, { Component } from 'react';\nimport Axios from 'axios';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Table from 'react-bootstrap/Table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  data: '',\n  //El nombre de la BD de la que sacamos los datos\n  table: '',\n  //La BD\n  titles: [],\n  //Los atributos de la BD\n  headers: [],\n  //Los títulos que se mostrarán en la tabla\n  input: ''\n};\nexport class ShowData extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = initialState;\n\n    this.resetState = () => this.setState(initialState);\n\n    this.setData = e => {\n      Axios.get('http://localhost:3307/get' + e.charAt(0).toUpperCase() + e.slice(1)).then(response => {\n        const res = response.data,\n              table = [],\n              titles = [];\n        console.log(res);\n        if (res) res.map(row => table.push(Object.values(row)));\n        Object.getOwnPropertyNames(res[0]).map(property => {\n          let header;\n\n          switch (property) {\n            case 'date':\n              header = 'Fecha';\n              break;\n\n            case 'id':\n              header = 'Código';\n              break;\n\n            case 'description':\n              header = 'Descripción';\n              break;\n\n            case 'name':\n              header = 'Nombre';\n              break;\n\n            case 'contact':\n              header = 'Contacto';\n              break;\n\n            case 'money':\n              header = this.state.data === 'Workshop' ? 'Cuenta corriente' : 'Saldo';\n              break;\n\n            case 'article_id':\n              header = 'Código de artículo';\n              break;\n\n            case 'article_description':\n              header = 'Descripción de artículo';\n              break;\n\n            case 'quantity':\n              header = 'Cantidad';\n              break;\n\n            case 'packages':\n              header = 'Bultos';\n              break;\n\n            case 'cutDate':\n              header = 'Fecha de corte';\n              break;\n\n            case 'fabrics':\n              header = 'Telas';\n              break;\n\n            case 'colors':\n              header = 'Colores';\n              break;\n\n            case 'responsable':\n              header = 'Responsable/s';\n              break;\n\n            case 'generalFeatures':\n              header = 'Detalles';\n              break;\n\n            case 'state':\n              header = 'Estado';\n              break;\n\n            case 'exitDate':\n              header = 'Fecha de salida';\n              break;\n\n            case 'deadline':\n              header = 'Fecha esperada';\n              break;\n\n            case 'weight':\n              header = 'Peso';\n              break;\n\n            case 'price':\n              header = 'Precio unitario';\n              break;\n\n            case 'threads':\n              header = 'Hilos entregados';\n              break;\n\n            case 'calification':\n              header = 'Calificación';\n              break;\n\n            case 'observations':\n              header = 'Observaciones';\n              break;\n\n            case 'faulty':\n              header = 'Fallados';\n              break;\n          }\n\n          titles.push(header);\n        });\n        this.setState({\n          titles,\n          table,\n          data: e\n        });\n      });\n    };\n\n    this.table = (row, index, titles) => {\n      const {\n        data\n      } = this.state;\n      if (data === 'payments' && !row[row.length - 1]) return;\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: row.map((e, i) => {\n          let cell = e;\n          if (data === 'payments' && i === row.length - 1) cell = '$' + e;else switch (e) {\n            case 'toAssign':\n              cell = 'A asignar';\n              break;\n\n            case 'assigned':\n              cell = 'Asignada';\n              break;\n\n            case 'returned':\n              cell = 'Devuelta';\n              break;\n          }\n          ;\n          return e || e === 0 || this.state.headers.indexOf(titles[i]) ? /*#__PURE__*/_jsxDEV(\"td\", {\n            children: cell\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 78\n          }, this) : null;\n        })\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 16\n      }, this);\n    };\n  }\n\n  render() {\n    const {\n      table,\n      titles\n    } = this.state,\n          data = {\n      'articles': 'Artículos',\n      'workshops': 'Talleres',\n      'payments': 'Pagos',\n      'tasks': 'Tareas'\n    };\n    let title = 'Elegir datos a mostrar',\n        dropdownList = [];\n\n    for (const key in data) dropdownList.push(key);\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(DropdownButton, {\n        title: title,\n        onSelect: e => {\n          //Define la BD a mostrar\n          this.setData(e);\n          title = data.e;\n        },\n        children: dropdownList.map((e, index) => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          eventKey: e,\n          children: data[e]\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 53\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          onChange: e => {\n            this.setState({\n              input: e.target.value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), titles && table ? /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: titles.map((title, i) => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: title\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 59\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: table.map((row, i) => this.table(row, i, titles))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }, this) : null]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Lab2/Documents/GitHub/VirtualNAU/client/src/showData.js"],"names":["React","Component","Axios","Dropdown","DropdownButton","FormControl","Table","initialState","data","table","titles","headers","input","ShowData","state","resetState","setState","setData","e","get","charAt","toUpperCase","slice","then","response","res","console","log","map","row","push","Object","values","getOwnPropertyNames","property","header","index","length","i","cell","indexOf","render","title","dropdownList","key","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Axios from 'axios';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Table from 'react-bootstrap/Table';\r\n\r\nconst initialState = {\r\n    data: '', //El nombre de la BD de la que sacamos los datos\r\n    table: '',//La BD\r\n    titles: [],//Los atributos de la BD\r\n    headers: [],//Los títulos que se mostrarán en la tabla\r\n    input: ''\r\n};\r\n\r\nexport class ShowData extends Component {\r\n\r\n    state = initialState;\r\n\r\n    resetState = () => this.setState(initialState);\r\n\r\n    setData = e => {\r\n        Axios.get('http://localhost:3307/get' + e.charAt(0).toUpperCase() + e.slice(1)).then(response => {\r\n            const res = response.data, table = [], titles = [];\r\n            console.log(res);\r\n            if (res)\r\n                res.map(row => table.push(Object.values(row)));\r\n            Object.getOwnPropertyNames(res[0]).map(property => {\r\n                let header;\r\n                switch (property) {\r\n                    case 'date':\r\n                        header = 'Fecha';\r\n                        break;\r\n                    case 'id':\r\n                        header = 'Código';\r\n                        break;\r\n                    case 'description':\r\n                        header = 'Descripción';\r\n                        break;\r\n                    case 'name':\r\n                        header = 'Nombre';\r\n                        break;\r\n                    case 'contact':\r\n                        header = 'Contacto';\r\n                        break;\r\n                    case 'money':\r\n                        header = (this.state.data === 'Workshop') ? 'Cuenta corriente' : 'Saldo';\r\n                        break;\r\n                    case 'article_id':\r\n                        header = 'Código de artículo';\r\n                        break;\r\n                    case 'article_description':\r\n                        header = 'Descripción de artículo';\r\n                        break;\r\n                    case 'quantity':\r\n                        header = 'Cantidad';\r\n                        break;\r\n                    case 'packages':\r\n                        header = 'Bultos';\r\n                        break;\r\n                    case 'cutDate':\r\n                        header = 'Fecha de corte';\r\n                        break;\r\n                    case 'fabrics':\r\n                        header = 'Telas';\r\n                        break;\r\n                    case 'colors':\r\n                        header = 'Colores';\r\n                        break;\r\n                    case 'responsable':\r\n                        header = 'Responsable/s';\r\n                        break;\r\n                    case 'generalFeatures':\r\n                        header = 'Detalles';\r\n                        break;\r\n                    case 'state':\r\n                        header = 'Estado';\r\n                        break;\r\n                    case 'exitDate':\r\n                        header = 'Fecha de salida';\r\n                        break;\r\n                    case 'deadline':\r\n                        header = 'Fecha esperada';\r\n                        break;\r\n                    case 'weight':\r\n                        header = 'Peso';\r\n                        break;\r\n                    case 'price':\r\n                        header = 'Precio unitario';\r\n                        break;\r\n                    case 'threads':\r\n                        header = 'Hilos entregados';\r\n                        break;\r\n                    case 'calification':\r\n                        header = 'Calificación';\r\n                        break;\r\n                    case 'observations':\r\n                        header = 'Observaciones';\r\n                        break;\r\n                    case 'faulty':\r\n                        header = 'Fallados';\r\n                        break;\r\n                }\r\n                titles.push(header);\r\n            });\r\n            this.setState({ titles, table, data: e });\r\n        });\r\n    }\r\n\r\n    table = (row, index, titles) => {\r\n        const { data } = this.state;\r\n        if (data === 'payments' && !row[row.length - 1])\r\n            return;\r\n        return <tr key={index}>{row.map((e, i) => {\r\n            let cell = e;\r\n            if (data === 'payments' && i === row.length - 1)\r\n                cell = '$' + e;\r\n            else switch(e){\r\n                case 'toAssign': cell = 'A asignar'; break;\r\n                case 'assigned': cell = 'Asignada'; break;\r\n                case 'returned': cell = 'Devuelta'; break;\r\n            };\r\n            return (e || e === 0 || this.state.headers.indexOf(titles[i])) ? <td key={i}>{cell}</td> : null;\r\n        })}</tr>\r\n    }\r\n\r\n    render() {\r\n        const { table, titles } = this.state, data = { 'articles': 'Artículos', 'workshops': 'Talleres', 'payments': 'Pagos', 'tasks': 'Tareas' };\r\n        let title = 'Elegir datos a mostrar', dropdownList = [];\r\n        for (const key in data)\r\n            dropdownList.push(key);\r\n        return (\r\n            <>\r\n                <DropdownButton title={title} onSelect={e => {//Define la BD a mostrar\r\n                    this.setData(e);\r\n                    title = data.e;\r\n                }}>\r\n                    {dropdownList.map((e, index) => <Dropdown.Item key={index} eventKey={e}>{data[e]}</Dropdown.Item>)}\r\n                </DropdownButton>\r\n                <Form>\r\n                    <FormControl onChange={(e) => {\r\n                        this.setState({input: e.target.value});\r\n                        \r\n                    }}/>\r\n                </Form>\r\n                {(titles && table) ?\r\n                    <Table striped bordered>\r\n                        <thead>\r\n                            <tr>\r\n                                {titles.map((title, i) => <th key={i}>{title}</th>)}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {table.map((row, i) => this.table(row, i, titles))}\r\n                        </tbody>\r\n                    </Table>\r\n                    : null}\r\n            </>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}
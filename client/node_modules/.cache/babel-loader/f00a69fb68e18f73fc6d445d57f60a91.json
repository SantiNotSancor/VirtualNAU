{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\GitHub\\\\VirtualNAU\\\\client\\\\src\\\\Vendor\\\\newQuery.js\";\nimport React, { Component } from 'react';\nimport { ModalOpener } from '../modalOpener';\nimport { Request, TaskRequest } from '../textInputs';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Table from 'react-bootstrap/Table';\nimport Axios from 'axios';\nimport Form from 'react-bootstrap/Form'; //import image from './Images/newQuery.svg';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  customer: '',\n  //AÃ±ade cliente  \n  observation: '',\n  query: [{\n    id: '',\n    description: '',\n    quantity: '',\n    colour: '',\n    toDeliver: ''\n  }]\n};\nexport class NewQuery extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = initialState;\n\n    this.resetState = () => {\n      this.setState(initialState);\n    };\n\n    this.myForm = () => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Request, {\n          toShow: \"customerName\",\n          onChange: e => {\n            this.setState({\n              customer: e.target.value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Request, {\n          toShow: \"observation\",\n          onChange: e => {\n            this.setState({\n              observation: e.target.value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          bordered: true,\n          id: \"taskTable\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Descripci\\xF3n\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Cantidad\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Color\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Entregar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: this.state.query.map((order, index) => {\n              return !order ? null : /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(FormControl, {\n                    value: order.id,\n                    onChange: e => {\n                      let aux = this.state.query;\n                      aux[index].id = e.target.event;\n                      this.setState({\n                        query: aux\n                      });\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 46,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(FormControl, {\n                    value: order.description,\n                    onChange: e => {\n                      let aux = this.state.query;\n                      aux[index].description = e.target.event;\n                      this.setState({\n                        query: aux\n                      });\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 54,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(FormControl, {\n                    value: order.quantity,\n                    onChange: e => {\n                      let aux = this.state.query;\n                      aux[index].quantity = e.target.event;\n                      this.setState({\n                        query: aux\n                      });\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(FormControl, {\n                    value: order.colour,\n                    onChange: e => {\n                      let aux = this.state.query;\n                      aux[index].colour = e.target.event;\n                      this.setState({\n                        query: aux\n                      });\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                    onChange: () => {\n                      let aux = this.state.query;\n                      aux[index].toDeliver = !this.state.query;\n                      this.setState({\n                        query: aux\n                      });\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 29\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n    };\n  }\n\n  // post = () => {\n  //     return(\n  //     );\n  // }\n  render() {\n    return /*#__PURE__*/_jsxDEV(ModalOpener, {\n      buttonText: \"Nuevo pedido\",\n      handleClose: this.resetState,\n      className: 'title'\n      /*logo={image}*/\n      ,\n      title: 'Nuevo pedido',\n      post: this.post,\n      children: this.myForm()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Admin/GitHub/VirtualNAU/client/src/Vendor/newQuery.js"],"names":["React","Component","ModalOpener","Request","TaskRequest","FormControl","Table","Axios","Form","initialState","customer","observation","query","id","description","quantity","colour","toDeliver","NewQuery","state","resetState","setState","myForm","e","target","value","map","order","index","aux","event","render","post"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { ModalOpener } from '../modalOpener';\r\nimport { Request, TaskRequest } from '../textInputs';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Axios from 'axios';\r\nimport Form from 'react-bootstrap/Form';\r\n//import image from './Images/newQuery.svg';\r\n\r\nconst initialState = {\r\n    customer : '', //AÃ±ade cliente  \r\n    observation : '',\r\n    query : [{id:'', description:'', quantity:'', colour:'', toDeliver:''}]\r\n}\r\n\r\nexport class NewQuery extends Component {\r\n    state = initialState;\r\n\r\n    resetState = () => {\r\n        this.setState(initialState);\r\n    }\r\n\r\n    myForm = () => {\r\n        return(\r\n            <>\r\n                <Request toShow=\"customerName\" onChange={(e) => {\r\n                    this.setState({customer: e.target.value});\r\n                }}/>\r\n                <Request toShow=\"observation\" onChange={(e) => {\r\n                    this.setState({observation: e.target.value});\r\n                }}/>\r\n                <Table striped bordered id=\"taskTable\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>DescripciÃ³n</th>\r\n                            <th>Cantidad</th>\r\n                            <th>Color</th>\r\n                            <th>Entregar</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.query.map ((order, index) => {\r\n                            return (!order ? null :\r\n                            <tr>\r\n                                <td><FormControl value={order.id}\r\n                                    onChange={(e) => {\r\n                                        let aux = this.state.query;\r\n                                        aux[index].id = e.target.event;\r\n                                        this.setState({query: aux});\r\n                                    }}\r\n                                    />\r\n                                </td>\r\n                                <td><FormControl value={order.description}\r\n                                    onChange={(e) => {\r\n                                        let aux = this.state.query;\r\n                                        aux[index].description = e.target.event;\r\n                                        this.setState({query: aux});\r\n                                    }}\r\n                                    />\r\n                                </td>\r\n                                <td><FormControl value={order.quantity}\r\n                                    onChange={(e) => {\r\n                                        let aux = this.state.query;\r\n                                        aux[index].quantity = e.target.event;\r\n                                        this.setState({query: aux});\r\n                                    }}\r\n                                />\r\n                                </td>\r\n                                <td><FormControl value={order.colour}\r\n                                    onChange={(e) => {\r\n                                        let aux = this.state.query;\r\n                                        aux[index].colour = e.target.event;\r\n                                        this.setState({query: aux});\r\n                                    }}\r\n                                />\r\n                                </td>\r\n                                <td>\r\n                                    <Form.Check onChange={() => {\r\n                                        let aux = this.state.query;\r\n                                        aux[index].toDeliver = !this.state.query;\r\n                                        this.setState({query: aux})\r\n                                    }}/>\r\n                                </td>\r\n                            </tr>);\r\n                        }\r\n                        )}\r\n                    </tbody>\r\n                </Table>\r\n            </>\r\n        );\r\n    }\r\n\r\n    // post = () => {\r\n    //     return(\r\n\r\n    //     );\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <ModalOpener buttonText='Nuevo pedido' handleClose={this.resetState}\r\n                className={'title'} /*logo={image}*/ title={'Nuevo pedido'} post={this.post} children={this.myForm()} />\r\n            \r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}
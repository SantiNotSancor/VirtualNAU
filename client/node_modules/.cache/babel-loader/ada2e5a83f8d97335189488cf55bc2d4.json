{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\OneDrive\\\\Escritorio\\\\fabrica\\\\client\\\\src\\\\Menu\\\\newTask.js\";\nimport React, { Component } from 'react';\nimport { ModalOpener } from './modalOpener';\nimport { Request } from '../textInputs';\nimport image from './Images/NewTask.svg';\nimport Axios from 'axios';\nimport Form from 'react-bootstrap/Form';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class NewTaskButton extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      error: true,\n      errors: [true, true, true, true, true, true, true],\n      article: '',\n      quantity: '',\n      task: '',\n      packages: '',\n      cutDate: '',\n      fabrics: '',\n      colors: '',\n      responsable: '',\n      generalFeatures: ''\n    };\n\n    this.updateError = (index, error) => {\n      let errors = [...this.state.errors];\n      errors[index] = error;\n      this.setState({\n        errors\n      });\n      let aux = false;\n      errors.map((e, key) => {\n        if (key === index) if (error) aux = error;else if (e) aux = e;\n      });\n      this.setState({\n        error: aux\n      });\n      console.log(aux);\n      console.log(this.state.errors);\n    };\n\n    this.myForm = () => {\n      Axios.get('http://localhost:3001/getTaskCount').then(response => {\n        let res = response.data[0].count;\n        let limit = 10;\n        res = res + 1 > limit ? 1 : res + 1; //Límite cantidad de tareas\n\n        this.setState({\n          task: res\n        });\n      });\n      return /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Tarea n\\xFAmero \", this.state.task]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Request, {\n          toShow: \"article\",\n          onChange: (event, error) => {\n            this.setState({\n              article: event\n            });\n            this.updateError(0, error);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Request, {\n          toShow: \"quantityArticle\",\n          onChange: (event, error) => {\n            this.setState({\n              quantity: event.target.value\n            });\n            this.updateError(1, error);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Request, {\n          toShow: \"packages\",\n          onChange: (event, error) => {\n            this.setState({\n              packages: event.target.value\n            });\n            this.updateError(2, error);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Request, {\n          toShow: \"fabrics\",\n          onChange: (event, error) => {\n            this.setState({\n              fabrics: event.target.value\n            });\n            this.updateError(3, error);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Request, {\n          toShow: \"colors\",\n          onChange: (event, error) => {\n            this.setState({\n              colors: event.target.value\n            });\n            this.updateError(4, error);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Request, {\n          toShow: \"responsable\",\n          onChange: (event, error) => {\n            this.setState({\n              responsable: event.target.value\n            });\n            this.updateError(5, error);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Request, {\n          toShow: \"generalFeatures\",\n          onChange: (event, error) => {\n            this.setState({\n              generalFeatures: event.target.value\n            });\n            this.updateError(6, error);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.post = () => {\n      let aux = this.state;\n      Axios.post('http://localhost:3001/getDescriptionWhere', {\n        id: aux.article\n      }).then(response => {\n        let description = response.data[0].description;\n        Axios.delete(`http://localhost:3001/deleteTask/${aux.task}`).then(() => {\n          Axios.post('http://localhost:3001/updateTaskCount', {\n            task: aux.task\n          });\n          Axios.post('http://localhost:3001/newTask', {\n            id: aux.task,\n            article: aux.article,\n            description,\n            quantity: aux.quantity,\n            packages: aux.packages,\n            cutDate: moment(new Date()).format(\"DD/MM/YYYY\"),\n            fabrics: aux.fabrics,\n            colors: aux.colors,\n            responsable: aux.responsable,\n            generalFeatures: aux.generalFeatures\n          });\n        });\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(ModalOpener, {\n      buttonText: \"Nueva tarea\",\n      children: this.myForm(),\n      className: 'title',\n      logo: image,\n      title: 'Creación de tarea',\n      post: this.post\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this) //Crea un botón que abre a un modal en el que aparecerá lo devuelto en this.myForm\n    ;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/PC/OneDrive/Escritorio/fabrica/client/src/Menu/newTask.js"],"names":["React","Component","ModalOpener","Request","image","Axios","Form","moment","NewTaskButton","state","error","errors","article","quantity","task","packages","cutDate","fabrics","colors","responsable","generalFeatures","updateError","index","setState","aux","map","e","key","console","log","myForm","get","then","response","res","data","count","limit","event","target","value","post","id","description","delete","Date","format","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { ModalOpener } from './modalOpener';\r\nimport { Request } from '../textInputs';\r\nimport image from './Images/NewTask.svg';\r\nimport Axios from 'axios';\r\nimport Form from 'react-bootstrap/Form';\r\nimport moment from 'moment';\r\n\r\nexport class NewTaskButton extends Component {\r\n    state = {\r\n        error: true,\r\n        errors: [true, true, true, true, true, true, true],\r\n        article: '',\r\n        quantity: '',\r\n        task: '',\r\n        packages: '',\r\n        cutDate: '',\r\n        fabrics: '',\r\n        colors: '',\r\n        responsable: '',\r\n        generalFeatures: '',\r\n    }\r\n\r\n    updateError = (index, error) => {\r\n        let errors = [...this.state.errors];\r\n        errors[index] = error;\r\n        this.setState({ errors });\r\n\r\n        let aux = false;\r\n        errors.map((e, key) => {\r\n            if (key === index)\r\n                if (error)\r\n                    aux = error;\r\n            else\r\n                if (e)\r\n                    aux = e;\r\n        });\r\n        this.setState({ error: aux });\r\n        console.log(aux);\r\n        console.log(this.state.errors);\r\n    }\r\n\r\n    myForm = () => {\r\n        Axios.get('http://localhost:3001/getTaskCount').then(response => {\r\n            let res = response.data[0].count;\r\n            let limit = 10;\r\n            res = (res + 1 > limit) ? 1 : res + 1;//Límite cantidad de tareas\r\n            this.setState({ task: res });\r\n        });\r\n        return (\r\n            <Form>\r\n                <h3>Tarea número {this.state.task}</h3>\r\n                <Request toShow=\"article\" onChange={(event, error) => {\r\n                    this.setState({ article: event });\r\n                    this.updateError(0, error);\r\n                }} />\r\n\r\n                <Request toShow=\"quantityArticle\" onChange={(event, error) => {\r\n                    this.setState({ quantity: event.target.value });\r\n                    this.updateError(1, error);\r\n                }} />\r\n\r\n                <Request toShow=\"packages\" onChange={(event, error) => {\r\n                    this.setState({ packages: event.target.value });\r\n                    this.updateError(2, error);\r\n                }} />\r\n\r\n                <Request toShow=\"fabrics\" onChange={(event, error) => {\r\n                    this.setState({ fabrics: event.target.value });\r\n                    this.updateError(3, error);\r\n                }} />\r\n\r\n                <Request toShow=\"colors\" onChange={(event, error) => {\r\n                    this.setState({ colors: event.target.value });\r\n                    this.updateError(4, error);\r\n                }} />\r\n\r\n                <Request toShow=\"responsable\" onChange={(event, error) => {\r\n                    this.setState({ responsable: event.target.value });\r\n                    this.updateError(5, error);\r\n                }} />\r\n\r\n                <Request toShow=\"generalFeatures\" onChange={(event, error) => {\r\n                    this.setState({ generalFeatures: event.target.value });\r\n                    this.updateError(6, error);\r\n                }} />\r\n            </Form>\r\n        );\r\n    }\r\n\r\n    post = () => {\r\n        let aux = this.state;\r\n        Axios.post('http://localhost:3001/getDescriptionWhere', { id: aux.article }).then((response) => {\r\n            let description = response.data[0].description;\r\n            Axios.delete(`http://localhost:3001/deleteTask/${aux.task}`).then(() => {\r\n                Axios.post('http://localhost:3001/updateTaskCount', { task: aux.task });\r\n                Axios.post('http://localhost:3001/newTask',\r\n                    {\r\n                        id: aux.task, article: aux.article, description, quantity: aux.quantity, packages: aux.packages,\r\n                        cutDate: moment(new Date()).format(\"DD/MM/YYYY\"), fabrics: aux.fabrics, colors: aux.colors,\r\n                        responsable: aux.responsable, generalFeatures: aux.generalFeatures\r\n                    });\r\n            });\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <ModalOpener buttonText='Nueva tarea' children={this.myForm()}\r\n                className={'title'} logo={image} title={'Creación de tarea'} post={this.post} />\r\n            //Crea un botón que abre a un modal en el que aparecerá lo devuelto en this.myForm\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}
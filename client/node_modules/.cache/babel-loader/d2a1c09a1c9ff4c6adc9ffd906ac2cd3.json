{"ast":null,"code":"// import React, { Component } from 'react';\n// import Axios from 'axios';\n// import Dropdown from 'react-bootstrap/Dropdown';\n// import DropdownButton from 'react-bootstrap/DropdownButton';\n// import Table from 'react-bootstrap/Table';\n// const initialState = {\n// <<<<<<< HEAD\n//     data: '',\n//     table: '',\n//     titles: [],\n//     headers: []\n// =======\n//     data: '', //El nombre de la BD de la que sacamos los datos\n//     table: [],//La tabla de datos\n//     actualTable: [],//La tabla a mostrar\n//     titles: [],//Los atributos de la BD\n//     headers: [],//Los títulos que se mostrarán en la tabla\n//     input: '',//Ingreso de Inputbox para filtrar la tabla\n//     filters: [],//Lista que muestra el tipo de filtro\n//     filterInputs: [] //Lista que contiene lo ingresado por el usuario en cada filtro\n// >>>>>>> vendor\n// };\n// export class ShowData extends Component {\n//     state = initialState;\n//     resetState = () => {\n//         this.setState(initialState);\n//     }\n//     setData = e => {\n//         Axios.get('http://localhost:3307/get' + e.charAt(0).toUpperCase() + e.slice(1)).then(response => {\n//             const res = response.data, table = [], titles = [];\n//             if (res)\n//                 res.map(row => table.push(Object.values(row)));\n//             Object.getOwnPropertyNames(res[0]).map(property => {\n//                 let header;\n//                 switch (property) {\n//                     case 'date':\n//                         header = 'Fecha';\n//                         break;\n//                     case 'id':\n//                         header = 'Código';\n//                         break;\n//                     case 'description':\n//                         header = 'Descripción';\n//                         break;\n//                     case 'name':\n//                         header = 'Nombre';\n//                         break;\n//                     case 'contact':\n//                         header = 'Contacto';\n//                         break;\n//                     case 'money':\n//                         header = (this.state.data === 'Workshop') ? 'Cuenta corriente' : 'Saldo';\n//                         break;\n//                     case 'article_id':\n//                         header = 'Código de artículo';\n//                         break;\n//                     case 'article_description':\n//                         header = 'Descripción de artículo';\n//                         break;\n//                     case 'quantity':\n//                         header = 'Cantidad';\n//                         break;\n//                     case 'packages':\n//                         header = 'Bultos';\n//                         break;\n//                     case 'cutDate':\n//                         header = 'Fecha de corte';\n//                         break;\n//                     case 'fabrics':\n//                         header = 'Telas';\n//                         break;\n//                     case 'colors':\n//                         header = 'Colores';\n//                         break;\n//                     case 'responsible':\n//                         header = 'responsible/s';\n//                         break;\n//                     case 'generalFeatures':\n//                         header = 'Detalles';\n//                         break;\n//                     case 'state':\n//                         header = 'Estado';\n//                         break;\n//                     case 'exitDate':\n//                         header = 'Fecha de salida';\n//                         break;\n//                     case 'deadline':\n//                         header = 'Fecha esperada';\n//                         break;\n//                     case 'weight':\n//                         header = 'Peso';\n//                         break;\n//                     case 'price':\n//                         header = 'Precio unitario';\n//                         break;\n//                     case 'threads':\n//                         header = 'Hilos entregados';\n//                         break;\n//                     case 'calification':\n//                         header = 'Calificación';\n//                         break;\n//                     case 'observations':\n//                         header = 'Observaciones';\n//                         break;\n//                     case 'faulty':\n//                         header = 'Fallados';\n//                         break;\n//                 }\n//                 titles.push(header);\n//             });\n//             this.setState({ titles, table, data: e });\n//         });\n//     }\n//     header = (name, index) => {\n//         return (<th key={index}>{name}</th>);}\n//     table = () => {\n//             let filters = [];\n//             let filterInputs = [];\n//             titles.map((title) => {//TODO: \n//                 switch(title){\n//                     case 'Descripción':\n//                     case 'Nombre':\n//                     case 'Contacto':\n//                     case 'Código de artículo':\n//                     case 'Descripción de artículo':\n//                     case 'Telas':\n//                     case 'Colores':\n//                     case 'responsible/s':\n//                     case 'Detalles':\n//                     case 'Observaciones':\n//                         filters.push('input');\n//                         break;\n//                     case 'Saldo':\n//                     case 'Cantidad':\n//                     case 'Código':\n//                     case 'Bultos':\n//                     case 'Precio unitario':\n//                     case 'Peso':\n//                     case 'Hilos entregados':\n//                     case 'Calificación':\n//                     case 'Fallados':\n//                         filters.push('number');\n//                         break;\n//                     case 'Fecha':\n//                     case 'Fecha de corte':\n//                     case 'Fecha de salida':\n//                     case 'Fecha esperada':\n//                         filters.push('date');\n//                         break;\n//                     case 'Estado':\n//                         filters.push(['Todos', 'Asignado', 'No Asignado', 'Devuelto']);\n//                         break;\n//                     case 'Pago':\n//                         filters.push(['Todos', 'Pago', 'No Pago']);\n//                         break;\n//                     default:\n//                         filters.push('');\n//                         break;\n//                 }\n//                 filterInputs.push('');\n//             })\n//             this.setState({ titles, table, actualTable: table, data: e, filters, filterInputs});\n//         });\n//     }\n//     compareTable = () => {//Le asigna a actualTable una versión filtrada de table \n//         //TODO:     \n//         const {table, filterInputs} = this.state;\n//         let actualTable = table;\n//         console.log(table);//['', 'an']\n//         table.map((row, i) => {\n//             let erase = false;\n//             console.log(row);//[2004, 'Gorro de lana'];\n//             row.map((cell, j) => {\n//                 let aux = typeof(cell) !== 'string'? toString(cell) : cell;\n//                 if(!aux.includes(filterInputs[j])){\n//                     console.log('BORRAR');\n//                     erase = true;\n//                 }\n//             })\n//             if(erase){\n//                 actualTable.splice(i, 1);//Eliminar el elemento número i\n//                 console.log(\"ELIMINAR   \" + i);}\n//         })\n//         //Filtrar actualTable\n//         this.setState({actualTable});\n//     }\n//     table = (row, index, titles) => {\n//         const { table, data } = this.state;\n//         if (data === 'payments' && !row[row.length - 1])\n//             return;\n//         return <tr key={index}>{row.map((e, i) => {\n//             let cell = e;\n//             if (data === 'payments' && i === row.length - 1)\n//                 cell = '$' + e;\n//             else if (data === 'tasks' && i === 17)\n//                 cell = (e === 1) ? 'Pago' : 'Impago';\n//             else switch(e){\n//                 case 'toAssign': cell = 'A asignar'; break;\n//                 case 'assigned': cell = 'Asignada'; break;\n//                 case 'returned': cell = 'Devuelta'; break;\n//             };\n//             return (e || e === 0 || this.state.headers.indexOf(titles[i])) ? <td key={i}>{cell}</td> : null;\n//         })}</tr>\n//     }\n//     render() {\n//         const { actualTable, titles } = this.state, data = { 'articles': 'Artículos', 'workshops': 'Talleres', 'payments': 'Pagos', 'tasks': 'Tareas' };\n//         let title = 'Elegir datos a mostrar', dropdownList = [];\n//         for (const key in data)\n//             dropdownList.push(key);\n//         return (\n//             <>\n//                 <DropdownButton title={title} onSelect={e => {\n//                     this.setData(e);\n//                     title = data.e;\n//                 }}>\n//                     {dropdownList.map((e, index) => <Dropdown.Item key={index} eventKey={e}>{data[e]}</Dropdown.Item>)}\n//                 </DropdownButton>\n//                 {(titles && actualTable) ?\n//                     <Table striped bordered>\n//                         <thead>\n//                             <tr>\n//                                 {titles.map((title, i) => this.header(title, i))}\n//                             </tr>\n//                         </thead>\n//                         <tbody>\n//                             <tr>\n//                             {this.state.filters.map((filter, i) => {\n//                                 switch (filter) {\n//                                     case 'input':\n//                                         return <td key={i}><FormControl onChange={(e) => {\n//                                             let aux = this.state.filterInputs;\n//                                             aux[i] = e.target.value;\n//                                             this.setState({filterInputs: aux});\n//                                             this.compareTable();\n//                                         }}/></td>\n//                                     case 'number':\n//                                         return <td key={i}><FormControl onChange={(e) => {\n//                                             let aux = this.state.filterInputs;\n//                                             if(aux[i] === '')\n//                                                 aux[i] = ' ';\n//                                             let firstChar = aux[i][0];\n//                                             aux[i] = firstChar + e.target.value;\n//                                             this.setState({filterInputs: aux});\n//                                             this.compareTable();\n//                                         }}/>\n//                                         <DropdownButton onSelect={(e) => {\n//                                             let aux = this.state.filterInputs;\n//                                             if(aux[i] === '')\n//                                                 aux[i] = e;\n//                                             else\n//                                                 aux[i] = e + aux[i].substring(1);\n//                                             this.setState({filterInputs: aux});\n//                                             this.compareTable();\n//                                         }}>\n//                                             <Dropdown.Item eventKey={'>'}>Mayor</Dropdown.Item>\n//                                             <Dropdown.Item eventKey={'<'}>Menor</Dropdown.Item>\n//                                             <Dropdown.Item eventKey={'='}>Igual</Dropdown.Item>\n//                                         </DropdownButton></td>\n//                                     case 'date':\n//                                         return <td key={i}>FALTA AGREGAR</td>//TODO: AGREGAR\n//                                     default:\n//                                         if(!filter[0])\n//                                             return <td key={i}></td>;\n//                                         return <td key={i}>\n//                                         <DropdownButton onSelect={(e) => {\n//                                             let aux = this.state.filterInputs;\n//                                             aux[i] = e;\n//                                             this.setState({filterInputs: aux});\n//                                             this.compareTable();\n//                                         }}>\n//                                             {filter.map((element, index) => \n//                                             <Dropdown.Item key={index} eventKey={element}>{element}</Dropdown.Item>)}\n//                                         </DropdownButton></td>        \n//                                 }\n//                             })}\n//                             </tr>\n//                             {actualTable.map((row, i) => this.table(row, i, titles))}\n//                         </tbody>\n//                     </Table>\n//                     : null}\n//             </>\n//         );\n//     }\n// }","map":{"version":3,"sources":["C:/Users/santi/OneDrive/Escritorio/Proyecto 2022/VirtualNAU/client/src/showData.js"],"names":[],"mappingssourcesContent":["// import React, { Component } from 'react';\r\n// import Axios from 'axios';\r\n// import Dropdown from 'react-bootstrap/Dropdown';\r\n// import DropdownButton from 'react-bootstrap/DropdownButton';\r\n// import Table from 'react-bootstrap/Table';\r\n\r\n// const initialState = {\r\n// <<<<<<< HEAD\r\n//     data: '',\r\n//     table: '',\r\n//     titles: [],\r\n//     headers: []\r\n// =======\r\n//     data: '', //El nombre de la BD de la que sacamos los datos\r\n//     table: [],//La tabla de datos\r\n//     actualTable: [],//La tabla a mostrar\r\n//     titles: [],//Los atributos de la BD\r\n//     headers: [],//Los títulos que se mostrarán en la tabla\r\n//     input: '',//Ingreso de Inputbox para filtrar la tabla\r\n//     filters: [],//Lista que muestra el tipo de filtro\r\n//     filterInputs: [] //Lista que contiene lo ingresado por el usuario en cada filtro\r\n// >>>>>>> vendor\r\n// };\r\n\r\n// export class ShowData extends Component {\r\n\r\n//     state = initialState;\r\n\r\n//     resetState = () => {\r\n//         this.setState(initialState);\r\n//     }\r\n\r\n//     setData = e => {\r\n//         Axios.get('http://localhost:3307/get' + e.charAt(0).toUpperCase() + e.slice(1)).then(response => {\r\n//             const res = response.data, table = [], titles = [];\r\n//             if (res)\r\n//                 res.map(row => table.push(Object.values(row)));\r\n//             Object.getOwnPropertyNames(res[0]).map(property => {\r\n//                 let header;\r\n//                 switch (property) {\r\n//                     case 'date':\r\n//                         header = 'Fecha';\r\n//                         break;\r\n//                     case 'id':\r\n//                         header = 'Código';\r\n//                         break;\r\n//                     case 'description':\r\n//                         header = 'Descripción';\r\n//                         break;\r\n//                     case 'name':\r\n//                         header = 'Nombre';\r\n//                         break;\r\n//                     case 'contact':\r\n//                         header = 'Contacto';\r\n//                         break;\r\n//                     case 'money':\r\n//                         header = (this.state.data === 'Workshop') ? 'Cuenta corriente' : 'Saldo';\r\n//                         break;\r\n//                     case 'article_id':\r\n//                         header = 'Código de artículo';\r\n//                         break;\r\n//                     case 'article_description':\r\n//                         header = 'Descripción de artículo';\r\n//                         break;\r\n//                     case 'quantity':\r\n//                         header = 'Cantidad';\r\n//                         break;\r\n//                     case 'packages':\r\n//                         header = 'Bultos';\r\n//                         break;\r\n//                     case 'cutDate':\r\n//                         header = 'Fecha de corte';\r\n//                         break;\r\n//                     case 'fabrics':\r\n//                         header = 'Telas';\r\n//                         break;\r\n//                     case 'colors':\r\n//                         header = 'Colores';\r\n//                         break;\r\n//                     case 'responsible':\r\n//                         header = 'responsible/s';\r\n//                         break;\r\n//                     case 'generalFeatures':\r\n//                         header = 'Detalles';\r\n//                         break;\r\n//                     case 'state':\r\n//                         header = 'Estado';\r\n//                         break;\r\n//                     case 'exitDate':\r\n//                         header = 'Fecha de salida';\r\n//                         break;\r\n//                     case 'deadline':\r\n//                         header = 'Fecha esperada';\r\n//                         break;\r\n//                     case 'weight':\r\n//                         header = 'Peso';\r\n//                         break;\r\n//                     case 'price':\r\n//                         header = 'Precio unitario';\r\n//                         break;\r\n//                     case 'threads':\r\n//                         header = 'Hilos entregados';\r\n//                         break;\r\n//                     case 'calification':\r\n//                         header = 'Calificación';\r\n//                         break;\r\n//                     case 'observations':\r\n//                         header = 'Observaciones';\r\n//                         break;\r\n//                     case 'faulty':\r\n//                         header = 'Fallados';\r\n//                         break;\r\n//                 }\r\n//                 titles.push(header);\r\n//             });\r\n//             this.setState({ titles, table, data: e });\r\n//         });\r\n//     }\r\n\r\n//     header = (name, index) => {\r\n//         return (<th key={index}>{name}</th>);}\r\n//     table = () => {\r\n            \r\n//             let filters = [];\r\n//             let filterInputs = [];\r\n//             titles.map((title) => {//TODO: \r\n//                 switch(title){\r\n//                     case 'Descripción':\r\n//                     case 'Nombre':\r\n//                     case 'Contacto':\r\n//                     case 'Código de artículo':\r\n//                     case 'Descripción de artículo':\r\n//                     case 'Telas':\r\n//                     case 'Colores':\r\n//                     case 'responsible/s':\r\n//                     case 'Detalles':\r\n//                     case 'Observaciones':\r\n//                         filters.push('input');\r\n//                         break;\r\n//                     case 'Saldo':\r\n//                     case 'Cantidad':\r\n//                     case 'Código':\r\n//                     case 'Bultos':\r\n//                     case 'Precio unitario':\r\n//                     case 'Peso':\r\n//                     case 'Hilos entregados':\r\n//                     case 'Calificación':\r\n//                     case 'Fallados':\r\n//                         filters.push('number');\r\n//                         break;\r\n//                     case 'Fecha':\r\n//                     case 'Fecha de corte':\r\n//                     case 'Fecha de salida':\r\n//                     case 'Fecha esperada':\r\n//                         filters.push('date');\r\n//                         break;\r\n//                     case 'Estado':\r\n//                         filters.push(['Todos', 'Asignado', 'No Asignado', 'Devuelto']);\r\n//                         break;\r\n//                     case 'Pago':\r\n//                         filters.push(['Todos', 'Pago', 'No Pago']);\r\n//                         break;\r\n//                     default:\r\n//                         filters.push('');\r\n//                         break;\r\n//                 }\r\n//                 filterInputs.push('');\r\n//             })\r\n//             this.setState({ titles, table, actualTable: table, data: e, filters, filterInputs});\r\n//         });\r\n//     }\r\n\r\n//     compareTable = () => {//Le asigna a actualTable una versión filtrada de table \r\n//         //TODO:     \r\n//         const {table, filterInputs} = this.state;\r\n//         let actualTable = table;\r\n//         console.log(table);//['', 'an']\r\n//         table.map((row, i) => {\r\n//             let erase = false;\r\n//             console.log(row);//[2004, 'Gorro de lana'];\r\n//             row.map((cell, j) => {\r\n//                 let aux = typeof(cell) !== 'string'? toString(cell) : cell;\r\n//                 if(!aux.includes(filterInputs[j])){\r\n//                     console.log('BORRAR');\r\n//                     erase = true;\r\n//                 }\r\n//             })\r\n//             if(erase){\r\n//                 actualTable.splice(i, 1);//Eliminar el elemento número i\r\n//                 console.log(\"ELIMINAR   \" + i);}\r\n//         })\r\n//         //Filtrar actualTable\r\n//         this.setState({actualTable});\r\n\r\n//     }\r\n\r\n//     table = (row, index, titles) => {\r\n//         const { table, data } = this.state;\r\n//         if (data === 'payments' && !row[row.length - 1])\r\n//             return;\r\n//         return <tr key={index}>{row.map((e, i) => {\r\n//             let cell = e;\r\n//             if (data === 'payments' && i === row.length - 1)\r\n//                 cell = '$' + e;\r\n//             else if (data === 'tasks' && i === 17)\r\n//                 cell = (e === 1) ? 'Pago' : 'Impago';\r\n//             else switch(e){\r\n//                 case 'toAssign': cell = 'A asignar'; break;\r\n//                 case 'assigned': cell = 'Asignada'; break;\r\n//                 case 'returned': cell = 'Devuelta'; break;\r\n//             };\r\n//             return (e || e === 0 || this.state.headers.indexOf(titles[i])) ? <td key={i}>{cell}</td> : null;\r\n//         })}</tr>\r\n//     }\r\n\r\n//     render() {\r\n//         const { actualTable, titles } = this.state, data = { 'articles': 'Artículos', 'workshops': 'Talleres', 'payments': 'Pagos', 'tasks': 'Tareas' };\r\n//         let title = 'Elegir datos a mostrar', dropdownList = [];\r\n//         for (const key in data)\r\n//             dropdownList.push(key);\r\n//         return (\r\n//             <>\r\n//                 <DropdownButton title={title} onSelect={e => {\r\n//                     this.setData(e);\r\n//                     title = data.e;\r\n//                 }}>\r\n//                     {dropdownList.map((e, index) => <Dropdown.Item key={index} eventKey={e}>{data[e]}</Dropdown.Item>)}\r\n//                 </DropdownButton>\r\n//                 {(titles && actualTable) ?\r\n//                     <Table striped bordered>\r\n//                         <thead>\r\n//                             <tr>\r\n//                                 {titles.map((title, i) => this.header(title, i))}\r\n//                             </tr>\r\n//                         </thead>\r\n//                         <tbody>\r\n//                             <tr>\r\n//                             {this.state.filters.map((filter, i) => {\r\n//                                 switch (filter) {\r\n//                                     case 'input':\r\n//                                         return <td key={i}><FormControl onChange={(e) => {\r\n//                                             let aux = this.state.filterInputs;\r\n//                                             aux[i] = e.target.value;\r\n//                                             this.setState({filterInputs: aux});\r\n//                                             this.compareTable();\r\n//                                         }}/></td>\r\n//                                     case 'number':\r\n//                                         return <td key={i}><FormControl onChange={(e) => {\r\n//                                             let aux = this.state.filterInputs;\r\n//                                             if(aux[i] === '')\r\n//                                                 aux[i] = ' ';\r\n//                                             let firstChar = aux[i][0];\r\n//                                             aux[i] = firstChar + e.target.value;\r\n//                                             this.setState({filterInputs: aux});\r\n//                                             this.compareTable();\r\n//                                         }}/>\r\n                                        \r\n//                                         <DropdownButton onSelect={(e) => {\r\n//                                             let aux = this.state.filterInputs;\r\n//                                             if(aux[i] === '')\r\n//                                                 aux[i] = e;\r\n//                                             else\r\n//                                                 aux[i] = e + aux[i].substring(1);\r\n//                                             this.setState({filterInputs: aux});\r\n//                                             this.compareTable();\r\n//                                         }}>\r\n//                                             <Dropdown.Item eventKey={'>'}>Mayor</Dropdown.Item>\r\n//                                             <Dropdown.Item eventKey={'<'}>Menor</Dropdown.Item>\r\n//                                             <Dropdown.Item eventKey={'='}>Igual</Dropdown.Item>\r\n//                                         </DropdownButton></td>\r\n//                                     case 'date':\r\n//                                         return <td key={i}>FALTA AGREGAR</td>//TODO: AGREGAR\r\n//                                     default:\r\n//                                         if(!filter[0])\r\n//                                             return <td key={i}></td>;\r\n//                                         return <td key={i}>\r\n//                                         <DropdownButton onSelect={(e) => {\r\n//                                             let aux = this.state.filterInputs;\r\n//                                             aux[i] = e;\r\n//                                             this.setState({filterInputs: aux});\r\n//                                             this.compareTable();\r\n//                                         }}>\r\n//                                             {filter.map((element, index) => \r\n//                                             <Dropdown.Item key={index} eventKey={element}>{element}</Dropdown.Item>)}\r\n//                                         </DropdownButton></td>        \r\n//                                 }\r\n//                             })}\r\n//                             </tr>\r\n//                             {actualTable.map((row, i) => this.table(row, i, titles))}\r\n//                         </tbody>\r\n//                     </Table>\r\n//                     : null}\r\n//             </>\r\n//         );\r\n//     }\r\n// }"]},"metadata":{},"sourceType":"module"}
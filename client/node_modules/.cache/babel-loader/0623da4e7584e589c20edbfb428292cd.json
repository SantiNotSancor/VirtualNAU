{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\OneDrive\\\\Escritorio\\\\fabrica\\\\src\\\\modal.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Modal from 'react-bootstrap/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ModalController extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      showModal: false //True si y sólo si se debe mostrar el modal\n\n    };\n\n    this.showModal = () => {\n      //A llamar cuando se quiere mostrar el modal\n      this.setState({\n        showModal: true\n      });\n    };\n\n    this.hideModal = () => {\n      //A llamar cuando se quiere esconder el modal\n      this.setState({\n        showModal: false\n      });\n    };\n  }\n\n}\nexport const ModalPrototype = _ref => {\n  let {\n    show,\n    handleClose,\n    children\n  } = _ref;\n  //Debe ser invocada para crear el modal. Ver props \n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: handleClose,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"HI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 17\n  }, this);\n};\n_c = ModalPrototype;\nModalPrototype.propTypes = {\n  show: PropTypes.bool.isRequired,\n  //Boolean que especifica si se debe o no mostrar el modal\n  handleClose: PropTypes.func.isRequired,\n  //Función que cerrará el modal al presionar el botón\n  children: PropTypes.element.isRequired //Hijo que aparecerá en el modal\n\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalPrototype\");","map":{"version":3,"sources":["C:/Users/PC/OneDrive/Escritorio/fabrica/src/modal.js"],"names":["React","Component","PropTypes","Modal","ModalController","state","showModal","setState","hideModal","ModalPrototype","show","handleClose","children","propTypes","bool","isRequired","func","element"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,sCAAP;AACA,OAAOC,KAAP,MAAkB,uBAAlB;;AAEA,OAAO,MAAMC,eAAN,SAA8BH,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAE3CI,KAF2C,GAEnC;AACJC,MAAAA,SAAS,EAAE,KADP,CACY;;AADZ,KAFmC;;AAAA,SAM3CA,SAN2C,GAM/B,MAAM;AAAC;AACf,WAAKC,QAAL,CAAc;AAAED,QAAAA,SAAS,EAAE;AAAb,OAAd;AACH,KAR0C;;AAAA,SAU3CE,SAV2C,GAU/B,MAAM;AAAC;AACf,WAAKD,QAAL,CAAc;AAAED,QAAAA,SAAS,EAAE;AAAb,OAAd;AACH,KAZ0C;AAAA;;AAAA;AAiB/C,OAAO,MAAMG,cAAc,GAAG,QAAmC;AAAA,MAAlC;AAACC,IAAAA,IAAD;AAAOC,IAAAA,WAAP;AAAoBC,IAAAA;AAApB,GAAkC;AAAC;AAE1D,sBACQ,QAAC,KAAD;AAAO,IAAA,IAAI,EAAEF,IAAb;AAAmB,IAAA,MAAM,EAAEC,WAA3B;AAAA,4BACI,QAAC,KAAD,CAAO,MAAP;AAAc,MAAA,WAAW,MAAzB;AAAA,6BACI,QAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,KAAD,CAAO,IAAP;AAAA,gBACKC;AADL;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOI,QAAC,KAAD,CAAO,MAAP;AAAA,6BACI;AAAQ,QAAA,OAAO,EAAED,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADR;AAcP,CAhBM;KAAMF,c;AAkBbA,cAAc,CAACI,SAAf,GAA2B;AACvBH,EAAAA,IAAI,EAAER,SAAS,CAACY,IAAV,CAAeC,UADE;AACS;AAChCJ,EAAAA,WAAW,EAAET,SAAS,CAACc,IAAV,CAAeD,UAFL;AAEgB;AACvCH,EAAAA,QAAQ,EAAEV,SAAS,CAACe,OAAV,CAAkBF,UAHL,CAGe;;AAHf,CAA3B","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nexport class ModalController extends Component {//Debe ser extendida por el elemento que va a abrir el modal\r\n\r\n    state = {\r\n        showModal: false//True si y sólo si se debe mostrar el modal\r\n    }\r\n\r\n    showModal = () => {//A llamar cuando se quiere mostrar el modal\r\n        this.setState({ showModal: true });\r\n    }\r\n\r\n    hideModal = () => {//A llamar cuando se quiere esconder el modal\r\n        this.setState({ showModal: false });\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const ModalPrototype = ({show, handleClose, children}) => {//Debe ser invocada para crear el modal. Ver props \r\n    \r\n        return (\r\n                <Modal show={show} onHide={handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>HI</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        {children}\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <button onClick={handleClose}>Close</button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n        );\r\n    \r\n}\r\n\r\nModalPrototype.propTypes = {\r\n    show: PropTypes.bool.isRequired,//Boolean que especifica si se debe o no mostrar el modal\r\n    handleClose: PropTypes.func.isRequired,//Función que cerrará el modal al presionar el botón\r\n    children: PropTypes.element.isRequired//Hijo que aparecerá en el modal\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\OneDrive\\\\Escritorio\\\\fabrica\\\\client\\\\src\\\\Menu\\\\RegistrationDrop\\\\modals.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { ModalPrototype } from '../../modal';\nimport { Request } from '../../textInputs';\nimport PropTypes from 'prop-types';\nimport Form from 'react-bootstrap/Form';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ModalArt = _ref => {\n  _s();\n\n  let {\n    handleClose,\n    show,\n    registration\n  } = _ref;\n  //Se encargará de los forms para dar de alta/baja a los artículos\n  const [error, setError] = useState(false);\n  const [id, setId] = useState('');\n  const [description, setDescription] = useState('');\n\n  const myHandleClose = () => {\n    handleClose();\n    setId('');\n    setDescription('');\n    setError(false);\n  };\n\n  const post = () => {\n    if (registration) Axios.post('http://localhost:3001/getDescriptionWhere', {\n      id\n    }).then(response => {\n      console.log(response.data);\n      setError(response.data.length !== 0);\n\n      if (response.data.length === 0) {\n        Axios.post('http://localhost:3001/regArticle', {\n          id,\n          description\n        });\n        myHandleClose();\n      }\n    });else Axios.delete('http://localhost:3001/dropArticle/' + id).then(response => {\n      console.log('Artículos>Baja');\n    });\n  };\n\n  const myForm = () => {\n    if (registration) {\n      //de ser true, se está dando el alta, de lo contrario, la baja\n      return /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Request, {\n          toShow: \"regArticle\",\n          onChange: event => {\n            setId(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), error ? /*#__PURE__*/_jsxDEV(\"em\", {\n          children: \"Este n\\xFAmero de art\\xEDculo ya fue ingresado, verifique si ya est\\xE1 dado de alta o pruebe otro n\\xFAmero\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 30\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(Request, {\n          toShow: \"description\",\n          onChange: event => {\n            setDescription(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this);\n    } else return /*#__PURE__*/_jsxDEV(Form, {\n      children: /*#__PURE__*/_jsxDEV(Request, {\n        toShow: \"article\",\n        onChange: event => {\n          setId(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ModalPrototype, {\n    show: show,\n    handleClose: myHandleClose,\n    children: myForm(),\n    title: (registration ? 'Alta' : 'Baja') + ' de artículo',\n    post: post\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this) //El modal debe mostrar el form especificado en Article\n  ;\n};\n\n_s(ModalArt, \"zt6FcRgvqlOVXJ7IBZnHorgofaA=\");\n\n_c = ModalArt;\nModalArt.propTypes = {\n  handleClose: PropTypes.func.isRequired,\n  //Función que cierra el modal\n  show: PropTypes.bool.isRequired,\n  //True si y sólo si se debe o no ver el modal\n  registration: PropTypes.bool.isRequired //True si y sólo si se da un alta\n\n};\nexport const ModalWork = _ref2 => {\n  _s2();\n\n  let {\n    handleClose,\n    show,\n    registration\n  } = _ref2;\n  //Se encargará de los forms para dar de alta/baja a los talleres\n  const [name, setName] = useState('');\n  const [contact, setContact] = useState('');\n  const [error, setError] = useState(false);\n\n  const myHandleClose = () => {\n    handleClose();\n    setName('');\n    setContact('');\n    setError(false);\n  };\n\n  const post = () => {\n    if (registration) Axios.post('http://localhost:3001/getNamesWhere', {\n      name\n    }).then(response => {\n      setError(response.data.length !== 0);\n\n      if (response.data.length === 0) {\n        Axios.post('http://localhost:3001/regWorkshop', {\n          name,\n          contact\n        });\n        myHandleClose();\n      }\n    });else Axios.post('http://localhost:3001/create', {\n      name\n    });\n  };\n\n  const myForm = () => {\n    if (registration) {\n      //de ser true, se está dando el alta, de lo contrario, la baja\n      return /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Request, {\n          toShow: \"regName\",\n          onChange: element => {\n            setName(element.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), error ? /*#__PURE__*/_jsxDEV(\"em\", {\n          children: \"Este taller ya fue ingresado, verifique si ya est\\xE1 dado de alta el taller o pruebe otro nombre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 30\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Datos de contacto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            height: \"500px\",\n            placeholder: \"Ingrese datos de contacto del tallerista\\u2026\",\n            onChange: event => {\n              setContact(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this);\n    } else return /*#__PURE__*/_jsxDEV(Request, {\n      toShow: \"name\",\n      onChange: element => {\n        setName(element);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ModalPrototype, {\n    show: show,\n    handleClose: myHandleClose,\n    children: myForm(),\n    title: (registration ? 'Alta' : 'Baja') + ' de taller',\n    post: post\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 9\n  }, this) //El modal debe mostrar el form especificado en Workshop\n  ;\n};\n\n_s2(ModalWork, \"0DrUcxbuZMkF0qlytgBGZyXytqE=\");\n\n_c2 = ModalWork;\nModalWork.propTypes = ModalArt.propTypes;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ModalArt\");\n$RefreshReg$(_c2, \"ModalWork\");","map":{"version":3,"sources":["C:/Users/PC/OneDrive/Escritorio/fabrica/client/src/Menu/RegistrationDrop/modals.js"],"names":["React","useState","ModalPrototype","Request","PropTypes","Form","Axios","ModalArt","handleClose","show","registration","error","setError","id","setId","description","setDescription","myHandleClose","post","then","response","console","log","data","length","delete","myForm","event","target","value","propTypes","func","isRequired","bool","ModalWork","name","setName","contact","setContact","element"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { ModalPrototype } from '../../modal';\r\nimport { Request } from '../../textInputs';\r\nimport PropTypes from 'prop-types';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Axios from 'axios';\r\n\r\nexport const ModalArt = ({ handleClose, show, registration }) => {//Se encargará de los forms para dar de alta/baja a los artículos\r\n    const [error, setError] = useState(false);\r\n    const [id, setId] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n    const myHandleClose = () => {\r\n        handleClose();\r\n        setId('');\r\n        setDescription('');\r\n        setError(false);\r\n    }\r\n\r\n    const post = () => {\r\n        if (registration)\r\n            Axios.post('http://localhost:3001/getDescriptionWhere', { id }).then((response) => {\r\n                console.log(response.data);\r\n                setError(response.data.length !== 0);\r\n                if (response.data.length === 0) {\r\n                    Axios.post('http://localhost:3001/regArticle', { id, description });\r\n                    myHandleClose();\r\n                }\r\n            });\r\n        else\r\n            Axios.delete('http://localhost:3001/dropArticle/' + id).then((response) => {\r\n                console.log('Artículos>Baja');\r\n            });\r\n    }\r\n\r\n    const myForm = () => {\r\n        if (registration) {//de ser true, se está dando el alta, de lo contrario, la baja\r\n            return (\r\n                <Form>\r\n                    <Request toShow=\"regArticle\" onChange={(event) => {\r\n                        setId(event.target.value);\r\n                    }} />\r\n                    {error ? <em>Este número de artículo ya fue ingresado, verifique si ya está dado de alta o pruebe otro número</em> : <></>}\r\n\r\n                    <Request toShow=\"description\" onChange={(event) => {\r\n                        setDescription(event.target.value);\r\n                    }} />\r\n                </Form>\r\n            );\r\n        }\r\n        else\r\n            return (\r\n                <Form>\r\n                    <Request toShow=\"article\" onChange={(event) => {\r\n                        setId(event.target.value);\r\n                    }} />\r\n                </Form>\r\n            );\r\n    }\r\n\r\n    return (\r\n        <ModalPrototype show={show} handleClose={myHandleClose} children={myForm()}\r\n            title={((registration) ? 'Alta' : 'Baja') + ' de artículo'} post={post} />//El modal debe mostrar el form especificado en Article\r\n    );\r\n\r\n}\r\n\r\nModalArt.propTypes = {\r\n    handleClose: PropTypes.func.isRequired, //Función que cierra el modal\r\n    show: PropTypes.bool.isRequired, //True si y sólo si se debe o no ver el modal\r\n    registration: PropTypes.bool.isRequired //True si y sólo si se da un alta\r\n}\r\n\r\n\r\nexport const ModalWork = ({ handleClose, show, registration }) => {//Se encargará de los forms para dar de alta/baja a los talleres\r\n    const [name, setName] = useState('');\r\n    const [contact, setContact] = useState('');\r\n    const [error, setError] = useState(false);\r\n\r\n    const myHandleClose = () => {\r\n        handleClose();\r\n        setName('');\r\n        setContact('');\r\n        setError(false);\r\n    }\r\n\r\n    const post = () => {\r\n        if (registration)\r\n            Axios.post('http://localhost:3001/getNamesWhere', { name }).then((response) => {\r\n                setError(response.data.length !== 0);\r\n                if (response.data.length === 0) {\r\n                    Axios.post('http://localhost:3001/regWorkshop', { name, contact });\r\n                    myHandleClose();\r\n                }\r\n            });\r\n        else\r\n            Axios.post('http://localhost:3001/create', { name });\r\n    }\r\n\r\n    const myForm = () => {\r\n        if (registration) {//de ser true, se está dando el alta, de lo contrario, la baja\r\n            return (\r\n                <Form>\r\n                    <Request toShow=\"regName\" onChange={(element) => {\r\n                        setName(element.target.value);\r\n                    }} />\r\n                    {error ? <em>Este taller ya fue ingresado, verifique si ya está dado de alta el taller o pruebe otro nombre</em> : <></>}\r\n                    <Form.Group className=\"mb-3\">\r\n                        <Form.Label>Datos de contacto</Form.Label>\r\n                        <Form.Control as=\"textarea\" height=\"500px\"\r\n                            placeholder=\"Ingrese datos de contacto del tallerista…\" onChange={(event) => {\r\n                                setContact(event.target.value);\r\n                            }} />\r\n                    </Form.Group>\r\n                </Form>\r\n            );\r\n        }\r\n        else\r\n            return (\r\n                <Request toShow=\"name\" onChange={(element) => {\r\n                    setName(element);\r\n                }} />\r\n            );\r\n    }\r\n\r\n    return (\r\n        <ModalPrototype show={show} handleClose={myHandleClose} children={myForm()}\r\n            title={((registration) ? 'Alta' : 'Baja') + ' de taller'} post={post} />//El modal debe mostrar el form especificado en Workshop\r\n    );\r\n}\r\n\r\nModalWork.propTypes = ModalArt.propTypes;"]},"metadata":{},"sourceType":"module"}
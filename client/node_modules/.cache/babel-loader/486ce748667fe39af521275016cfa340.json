{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\OneDrive\\\\Escritorio\\\\fabrica\\\\client\\\\src\\\\Menu\\\\deliverTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from 'react';\nimport { ModalOpener } from './modalOpener';\nimport { Request, TaskRequest } from '../textInputs';\nimport Form from 'react-bootstrap/Form';\nimport image from './Images/DeliverTask.svg';\nimport moment from 'moment';\nimport Axios from 'axios';\nimport Table from 'react-bootstrap/Table';\nimport FormControl from 'react-bootstrap/FormControl';\nimport { ModalPrototype } from '../modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class DeliverTaskButton extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      error: true,\n      showObsModal: false,\n      task: '',\n      name: '',\n      quantity: '',\n      money: '',\n      weight: '',\n      threads: '',\n      price: '',\n      faulty: '',\n      completed: false,\n      calification: '',\n      observation: ''\n    };\n\n    this.myForm = () => {\n      return /*#__PURE__*/_jsxDEV(Form, {\n        id: \"toPrint\",\n        children: [/*#__PURE__*/_jsxDEV(Request, {\n          toShow: \"name\",\n          onChange: element => {\n            this.setState({\n              name: element\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: this.state.name,\n          onChange: (data, price, faulty, task, error, completed) => {\n            console.log('hi');\n            this.setState({\n              task,\n              quantity: data.quantity,\n              money: data.money,\n              weight: data.weight,\n              threads: data.threads,\n              error,\n              completed,\n              price,\n              faulty\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.post = () => {\n      Axios.post('http://localhost:3001/getTasks', {\n        id: this.state.task\n      }).then(response => {\n        Axios.put('http://localhost:3001/payWorkshop', {\n          name: response.data[0].name,\n          money: this.state.money - this.state.quantity * this.state.price\n        });\n      });\n      Axios.post('http://localhost:3001/newPart', {\n        task: this.state.task,\n        date: moment(new Date()).format('DD/MM/YYYY'),\n        quantity: this.state.quantity,\n        weight: Number(this.state.weight).toFixed(1),\n        money: Number(this.state.money).toFixed(1),\n        threads: this.state.threads\n      }).then(() => {\n        if (this.state.completed) this.setState({\n          showObsModal: true\n        });\n      });\n    };\n\n    this.completelyReturned = () => {\n      let aux = this.state;\n      Axios.put('http://localhost:3001/printObs', {\n        id: aux.task,\n        observations: aux.observation,\n        calification: aux.calification,\n        faulty: aux.faulty\n      });\n      this.setState({\n        showObsModal: false\n      });\n    };\n\n    this.print = () => {\n      var printContents = document.getElementById('toPrint').innerHTML;\n      var originalContents = document.body.innerHTML;\n      document.body.innerHTML = printContents;\n      window.print();\n      document.body.innerHTML = originalContents;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ModalOpener, {\n        buttonText: \"Recibir tarea\",\n        children: this.myForm(),\n        logo: image,\n        className: \"title\",\n        footer: {\n          label: 'Imprimir',\n          func: this.print,\n          show: document.getElementById(\"taskTable\")\n        },\n        title: \"Ingreso de tarea\",\n        post: this.post,\n        error: this.state.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalPrototype, {\n        show: this.state.showObsModal,\n        post: this.completelyReturned,\n        title: \"Calificar\",\n        handleClose: () => {\n          this.completelyReturned();\n          this.setState({\n            showObsModal: false\n          });\n        },\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Request, {\n            toShow: \"observation\",\n            onChange: e => this.setState({\n              observation: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Request, {\n            toShow: \"calification\",\n            onChange: e => this.setState({\n              calification: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\nexport const Input = _ref => {\n  _s();\n\n  let {\n    onChange,\n    name\n  } = _ref;\n  const [title, setTitle] = useState('Elegir tarea');\n  const [tasks, setTasks] = useState([]);\n  const [parts, setParts] = useState([]);\n  const [input, setInput] = useState({\n    quantity: 0,\n    weight: 0,\n    money: 0,\n    threads: 0\n  });\n  const [selectedTask, setSelectedTask] = useState('');\n  const [refund, setRefund] = useState(false);\n  const [completed, setCompleted] = useState(false);\n  const [account, setAccount] = useState('');\n  const [quantityBackUp, setQuantityBackUp] = useState('');\n  useEffect(() => {\n    setInput({\n      quantity: 0,\n      weight: 0,\n      money: 0,\n      threads: 0\n    });\n    Axios.post('http://localhost:3001/getParts', {\n      task: selectedTask.id\n    }).then(response => setParts(response.data));\n    if (name) Axios.post('http://localhost:3001/getAccount', {\n      name\n    }).then(response => setAccount(response.data[0].money));\n  }, [selectedTask]);\n  useEffect(() => {\n    let delivered = input.quantity;\n    let totalMoney = selectedTask.quantity * selectedTask.price - account;\n    parts.map(part => delivered += part.quantity);\n\n    if (quantityBackUp !== input.quantity) {\n      input.money = input.quantity * selectedTask.price;\n      if (input.money > totalMoney) input.money = totalMoney;\n      setQuantityBackUp(input.quantity);\n    }\n\n    onChange(input, selectedTask.price, selectedTask.quantity - delivered, selectedTask.id, input.quantity > 0 && input.weight > 0 && input.money >= 0 && input.threads >= 0, delivered === selectedTask.quantity || completed);\n  }, [input, completed, refund]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const inputField = (property, total) => {\n    return /*#__PURE__*/_jsxDEV(FormControl, {\n      value: input[property],\n      onChange: e => {\n        if (isNaN(e.target.value) || total[property] < e.target.value && property !== 'money') return;\n        let aux = { ...input\n        };\n        aux[property] = e.target.value;\n        aux[property] = refund ? -Math.abs(aux[property]) : aux[property] < 0 ? 0 : aux[property];\n        if (property === 'quantity' || property === 'threads') aux[property] = Math.round(aux[property]);\n        setInput({ ...aux\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this);\n  };\n\n  const getTable = () => {\n    let total = {\n      quantity: selectedTask.quantity,\n      weight: selectedTask.weight,\n      money: selectedTask.quantity * selectedTask.price - account,\n      threads: selectedTask.threads\n    };\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [parts.map((part, index) => {\n        total = {\n          quantity: total.quantity - part.quantity,\n          weight: total.weight - part.weight,\n          money: total.money - part.money,\n          threads: total.threads - part.threads\n        };\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: part.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: part.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: total.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: Number(part.weight).toFixed(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: Number(total.weight).toFixed(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: part.threads\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: total.threads\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: '$' + Number(part.money).toFixed(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: '$' + Number(total.money).toFixed(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: moment(new Date()).format('DD/MM/YYYY')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: inputField('quantity', total)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: total.quantity - input.quantity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: inputField('weight', total)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: (total.weight - input.weight).toFixed(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: inputField('threads', total)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: total.threads - input.threads\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: inputField('money', total)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: '$' + (total.money - input.money).toFixed(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  };\n\n  const getExceeded = () => {\n    //Devuelve true si se excedió la fecha de entrega\n    if (!selectedTask.deadline) return;\n    let today = new Date();\n    today.setHours(0, 0, 0, 0);\n    var dateParts = selectedTask.deadline.split('/');\n    var deadline = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\n    return today > deadline;\n  };\n\n  if (name !== '') {\n    Axios.post('http://localhost:3001/getTasks', {\n      name,\n      state: 'asigned'\n    }).then(response => {\n      if (response.data.length === 0) return;\n      setTasks(response.data);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        'justifyContent': 'space-between',\n        'display': 'flex',\n        'alignItems': 'baseline'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TaskRequest, {\n        setSelectedTask: setSelectedTask,\n        tasks: tasks,\n        title: title,\n        setTitle: setTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          'color': getExceeded() ? 'red' : 'green'\n        },\n        children: selectedTask === '' ? null : selectedTask.deadline\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }, this), title === 'Elegir tarea' ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n        onChange: () => {\n          setRefund(!refund);\n          input.money = -input.money;\n          input.quantity = -input.quantity;\n          input.threads = -input.threads;\n          input.weight = -input.weight;\n        },\n        label: \"Devoluci\\xF3n o correcci\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n        onChange: () => setCompleted(!completed),\n        label: \"Tarea cerrada\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        id: \"taskTable\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Fecha\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Cantidad entregada por el taller\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Cantidad total de la tarea\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Peso entregado por el taller\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Peso total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Hilos devueltos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Hilos totales\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Dinero entregado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Dinero total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              'backgroundColor': 'green'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: selectedTask.exitDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: selectedTask.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: selectedTask.weight\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: selectedTask.threads\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: '$' + account + ' (A CTA)'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: '$' + selectedTask.price * selectedTask.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 29\n          }, this), getTable()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_s(Input, \"BmUiLrZJWQkCwSvh2OvKe1WBWv4=\");\n\n_c = Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["C:/Users/PC/OneDrive/Escritorio/fabrica/client/src/Menu/deliverTask.js"],"names":["React","Component","useState","useEffect","ModalOpener","Request","TaskRequest","Form","image","moment","Axios","Table","FormControl","ModalPrototype","DeliverTaskButton","state","error","showObsModal","task","name","quantity","money","weight","threads","price","faulty","completed","calification","observation","myForm","element","setState","data","console","log","post","id","then","response","put","date","Date","format","Number","toFixed","completelyReturned","aux","observations","print","printContents","document","getElementById","innerHTML","originalContents","body","window","render","label","func","show","e","target","value","Input","onChange","title","setTitle","tasks","setTasks","parts","setParts","input","setInput","selectedTask","setSelectedTask","refund","setRefund","setCompleted","account","setAccount","quantityBackUp","setQuantityBackUp","delivered","totalMoney","map","part","inputField","property","total","isNaN","Math","abs","round","getTable","index","getExceeded","deadline","today","setHours","dateParts","split","length","exitDate"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\r\nimport { ModalOpener } from './modalOpener';\r\nimport { Request, TaskRequest } from '../textInputs';\r\nimport Form from 'react-bootstrap/Form';\r\nimport image from './Images/DeliverTask.svg';\r\nimport moment from 'moment';\r\nimport Axios from 'axios';\r\nimport Table from 'react-bootstrap/Table';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport { ModalPrototype } from '../modal';\r\n\r\n\r\nexport class DeliverTaskButton extends Component {\r\n    state = {\r\n        error: true,\r\n        showObsModal: false,\r\n        task: '',\r\n        name: '',\r\n        quantity: '',\r\n        money: '',\r\n        weight: '',\r\n        threads: '',\r\n        price: '',\r\n        faulty: '',\r\n        completed: false,\r\n        calification: '',\r\n        observation: ''\r\n    }\r\n\r\n    myForm = () => {\r\n        return (\r\n            <Form id='toPrint'>\r\n                <Request toShow='name' onChange={(element) => {\r\n                    this.setState({ name: element });\r\n                }} />\r\n                <Input name={this.state.name} onChange={(data, price, faulty, task, error, completed) => {\r\n                    console.log('hi');\r\n                    this.setState({\r\n                        task, quantity: data.quantity, money: data.money, weight: data.weight,\r\n                        threads: data.threads, error, completed, price, faulty\r\n                    });\r\n                }} />\r\n            </Form>\r\n        );\r\n    }\r\n\r\n    post = () => {\r\n        Axios.post('http://localhost:3001/getTasks', { id: this.state.task }).then((response) => {\r\n            Axios.put('http://localhost:3001/payWorkshop',\r\n                { name: response.data[0].name, money: this.state.money - this.state.quantity * this.state.price })\r\n        });\r\n        Axios.post('http://localhost:3001/newPart',\r\n            {\r\n                task: this.state.task, date: moment(new Date()).format('DD/MM/YYYY'), quantity: this.state.quantity,\r\n                weight: Number(this.state.weight).toFixed(1), money: Number(this.state.money).toFixed(1), threads: this.state.threads\r\n            }).then(() => {\r\n                if (this.state.completed)\r\n                    this.setState({ showObsModal: true });\r\n            });\r\n    }\r\n\r\n    completelyReturned = () => {\r\n        let aux = this.state;\r\n        Axios.put('http://localhost:3001/printObs',\r\n            { id: aux.task, observations: aux.observation, calification: aux.calification, faulty: aux.faulty });\r\n        this.setState({ showObsModal: false })\r\n    }\r\n\r\n    print = () => {\r\n        var printContents = document.getElementById('toPrint').innerHTML;\r\n        var originalContents = document.body.innerHTML;\r\n        document.body.innerHTML = printContents;\r\n        window.print();\r\n        document.body.innerHTML = originalContents;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <ModalOpener buttonText=\"Recibir tarea\" children={this.myForm()} logo={image} className=\"title\"\r\n                    footer={{ label: 'Imprimir', func: this.print, show: document.getElementById(\"taskTable\") }}\r\n                    title=\"Ingreso de tarea\" post={this.post} error={this.state.error} />\r\n                {/*Crea un botón que abre a un modal en el que aparecerá lo devuelto en this.myForm*/}\r\n\r\n                <ModalPrototype show={this.state.showObsModal} post={this.completelyReturned} title=\"Calificar\"\r\n                    handleClose={() => {\r\n                        this.completelyReturned();\r\n                        this.setState({ showObsModal: false });\r\n                    }}>\r\n                    <>\r\n                        <Request toShow=\"observation\" onChange={(e) => this.setState({ observation: e.target.value })} />\r\n                        <Request toShow=\"calification\" onChange={(e) => this.setState({ calification: e.target.value })} />\r\n                    </>\r\n                </ModalPrototype>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport const Input = ({ onChange, name }) => {\r\n\r\n    const [title, setTitle] = useState('Elegir tarea');\r\n    const [tasks, setTasks] = useState([]);\r\n    const [parts, setParts] = useState([]);\r\n    const [input, setInput] = useState({ quantity: 0, weight: 0, money: 0, threads: 0 });\r\n    const [selectedTask, setSelectedTask] = useState('');\r\n    const [refund, setRefund] = useState(false);\r\n    const [completed, setCompleted] = useState(false);\r\n    const [account, setAccount] = useState('');\r\n    const [quantityBackUp, setQuantityBackUp] = useState('');\r\n\r\n    useEffect(() => {\r\n        setInput({ quantity: 0, weight: 0, money: 0, threads: 0 });\r\n        Axios.post('http://localhost:3001/getParts', { task: selectedTask.id }).then(response => setParts(response.data));\r\n        if (name)\r\n            Axios.post('http://localhost:3001/getAccount', { name }).then(response => setAccount(response.data[0].money));\r\n    }, [selectedTask]);\r\n\r\n    useEffect(() => {\r\n        let delivered = input.quantity;\r\n        let totalMoney = selectedTask.quantity * selectedTask.price - account;\r\n        parts.map(part => delivered += part.quantity);\r\n\r\n        if (quantityBackUp !== input.quantity) {\r\n            input.money = input.quantity * selectedTask.price;\r\n            if (input.money > totalMoney)\r\n                input.money = totalMoney;\r\n            setQuantityBackUp(input.quantity);\r\n        }\r\n        onChange(input, selectedTask.price, selectedTask.quantity - delivered, selectedTask.id,\r\n            (input.quantity > 0 && input.weight > 0 && input.money >= 0 && input.threads >= 0), (delivered === selectedTask.quantity || completed));\r\n    }, [input, completed, refund]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const inputField = (property, total) => {\r\n        return (\r\n            <FormControl value={input[property]}\r\n                onChange={(e) => {\r\n                    if (isNaN(e.target.value) || (total[property] < e.target.value && property !== 'money'))\r\n                        return;\r\n                    let aux = { ...input };\r\n                    aux[property] = e.target.value;\r\n                    aux[property] = (refund) ?\r\n                        -Math.abs(aux[property]) :\r\n                        (aux[property] < 0) ? 0 : aux[property];\r\n                    if (property === 'quantity' || property === 'threads')\r\n                        aux[property] = Math.round(aux[property]);\r\n                    setInput({ ...aux });\r\n                }} />\r\n        );\r\n    }\r\n\r\n    const getTable = () => {\r\n\r\n        let total = {\r\n            quantity: selectedTask.quantity,\r\n            weight: selectedTask.weight,\r\n            money: selectedTask.quantity * selectedTask.price - account,\r\n            threads: selectedTask.threads\r\n        };\r\n        return (\r\n            <>\r\n                {parts.map((part, index) => {\r\n                    total = {\r\n                        quantity: total.quantity - part.quantity,\r\n                        weight: total.weight - part.weight,\r\n                        money: total.money - part.money,\r\n                        threads: total.threads - part.threads,\r\n                    };\r\n                    return (\r\n                        <tr key={index}>{/*Muestra el medio*/}\r\n                            <td>{part.date}</td>\r\n                            <td>{part.quantity}</td>\r\n                            <td>{total.quantity}</td>\r\n                            <td>{Number(part.weight).toFixed(1)}</td>\r\n                            <td>{Number(total.weight).toFixed(1)}</td>\r\n                            <td>{part.threads}</td>\r\n                            <td>{total.threads}</td>\r\n                            <td>{'$' + Number(part.money).toFixed(1)}</td>\r\n                            <td>{'$' + Number(total.money).toFixed(1)}</td>\r\n                        </tr>\r\n                    );\r\n                })}\r\n                <tr>{/*Muestra la última fila*/}\r\n                    <td>{moment(new Date()).format('DD/MM/YYYY')}</td>\r\n                    <td>{inputField('quantity', total)}</td>\r\n                    <td>{total.quantity - input.quantity}</td>\r\n                    <td>{inputField('weight', total)}</td>\r\n                    <td>{(total.weight - input.weight).toFixed(1)}</td>\r\n                    <td>{inputField('threads', total)}</td>\r\n                    <td>{total.threads - input.threads}</td>\r\n                    <td>{inputField('money', total)}</td>\r\n                    <td>{'$' + (total.money - input.money).toFixed(1)}</td>\r\n                </tr>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const getExceeded = () => {//Devuelve true si se excedió la fecha de entrega\r\n        if (!selectedTask.deadline)\r\n            return;\r\n        let today = new Date();\r\n        today.setHours(0, 0, 0, 0);\r\n        var dateParts = selectedTask.deadline.split('/');\r\n        var deadline = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        return today > deadline;\r\n    }\r\n\r\n    if (name !== '') {\r\n        Axios.post('http://localhost:3001/getTasks', { name, state: 'asigned' }).then((response) => {\r\n            if (response.data.length === 0)\r\n                return;\r\n            setTasks(response.data);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={{ 'justifyContent': 'space-between', 'display': 'flex', 'alignItems': 'baseline' }}>\r\n                <TaskRequest setSelectedTask={setSelectedTask} tasks={tasks} title={title} setTitle={setTitle} />\r\n                <h4 style={{ 'color': getExceeded() ? 'red' : 'green' }}>\r\n                    {(selectedTask === '') ? null : selectedTask.deadline}\r\n                </h4>\r\n            </div>\r\n            {title === 'Elegir tarea' ? <></> :\r\n                <>\r\n                    <Form.Check onChange={() => {\r\n                        setRefund(!refund);\r\n                        input.money = -input.money;\r\n                        input.quantity = -input.quantity;\r\n                        input.threads = -input.threads;\r\n                        input.weight = -input.weight;\r\n                    }} label=\"Devolución o corrección\" />\r\n                    <Form.Check onChange={() => setCompleted(!completed)} label=\"Tarea cerrada\" />\r\n                    <Table striped bordered id=\"taskTable\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Fecha</th>\r\n                                <th>Cantidad entregada por el taller</th>\r\n                                <th>Cantidad total de la tarea</th>\r\n                                <th>Peso entregado por el taller</th>\r\n                                <th>Peso total</th>\r\n                                <th>Hilos devueltos</th>\r\n                                <th>Hilos totales</th>\r\n                                <th>Dinero entregado</th>\r\n                                <th>Dinero total</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr style={{ 'backgroundColor': 'green' }}>{/*Muestra el primero*/}\r\n                                <td>{selectedTask.exitDate}</td>\r\n                                <td></td>\r\n                                <td>{selectedTask.quantity}</td>\r\n                                <td></td>\r\n                                <td>{selectedTask.weight}</td>\r\n                                <td></td>\r\n                                <td>{selectedTask.threads}</td>\r\n                                <td>{'$' + account + ' (A CTA)'}</td>\r\n                                <td>{'$' + selectedTask.price * selectedTask.quantity}</td>\r\n                            </tr>\r\n                            {getTable()}\r\n                        </tbody>\r\n                    </Table>\r\n                </>\r\n            }\r\n        </>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}
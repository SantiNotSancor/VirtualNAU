{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\OneDrive\\\\Escritorio\\\\fabrica\\\\client\\\\src\\\\Menu\\\\asignTask.js\";\nimport React, { Component } from 'react';\nimport { ModalOpener } from './modalOpener';\nimport { Request, TaskRequest } from '../textInputs';\nimport image from './Images/AsignTask.svg';\nimport Axios from 'axios';\nimport Form from 'react-bootstrap/Form';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class AsignTaskButton extends Component {\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.selectedTask === prevState.selectedTask) return;\n    console.log(this.state.selectedTask);\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      task: '',\n      deadline: '',\n      weight: '',\n      threads: '',\n      price: '',\n      //Auto-asignar\n      packages: '',\n      description: '',\n      quantity: '',\n      //Otros\n      selectedTask: null,\n      tasks: [],\n      title: 'Elegir Tarea'\n    };\n\n    this.myForm = () => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [this.state.selectedTask ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Bultos: \", this.state.selectedTask.packages]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Descripci\\xF3n: \", this.state.selectedTask.article_description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Cantidad: \", this.state.selectedTask.quantity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true) : null, /*#__PURE__*/_jsxDEV(Request, {\n          toShow: \"name\",\n          onChange: event => {\n            this.setState({\n              name: event\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Request, {\n          toShow: \"deadline\",\n          onChange: event => {\n            this.setState({\n              deadline: event.target.value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TaskRequest, {\n          setSelectedTask: e => this.setState({\n            selectedTask: e\n          }),\n          tasks: this.state.tasks,\n          title: this.state.title,\n          setTitle: e => {\n            this.setState({\n              title: e\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Request, {\n          toShow: \"weight\",\n          onChange: event => {\n            this.setState({\n              weight: event.target.value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Request, {\n          toShow: \"price\",\n          onChange: event => {\n            this.setState({\n              price: event.target.value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Request, {\n          toShow: \"threads\",\n          onChange: event => {\n            this.setState({\n              threads: event.target.value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n    };\n\n    this.post = () => {\n      let aux = this.state;\n      console.log(aux.task);\n      Axios.put('http://localhost:3001/asignTask', {\n        name: aux.name,\n        task: this.state.selectedTask.id,\n        deadline: aux.deadline,\n        weight: aux.weight,\n        threads: aux.threads,\n        price: aux.price,\n        exitDate: moment(new Date()).format(\"DD/MM/YYYY\")\n      });\n    };\n\n    Axios.post('http://localhost:3001/getTasks', {\n      state: 'toAsign'\n    }).then(response => {\n      this.setState({\n        tasks: response.data\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(ModalOpener, {\n      buttonText: \"Remito\",\n      children: this.myForm(),\n      className: 'title',\n      logo: image,\n      title: 'Asignar Tarea',\n      post: this.post\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this) //Crea un botón que abre a un modal en el que aparecerá lo devuelto en this.myForm\n    ;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/PC/OneDrive/Escritorio/fabrica/client/src/Menu/asignTask.js"],"names":["React","Component","ModalOpener","Request","TaskRequest","image","Axios","Form","moment","AsignTaskButton","componentDidUpdate","prevProps","prevState","state","selectedTask","console","log","constructor","props","name","task","deadline","weight","threads","price","packages","description","quantity","tasks","title","myForm","article_description","event","setState","target","value","e","post","aux","put","id","exitDate","Date","format","then","response","data","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { ModalOpener } from './modalOpener';\r\nimport { Request, TaskRequest } from '../textInputs';\r\nimport image from './Images/AsignTask.svg';\r\nimport Axios from 'axios';\r\nimport Form from 'react-bootstrap/Form';\r\nimport moment from 'moment';\r\n\r\nexport class AsignTaskButton extends Component {\r\n    state = {\r\n        name: '',\r\n        task: '',\r\n        deadline: '',\r\n        weight: '',\r\n        threads: '',\r\n        price: '',\r\n        //Auto-asignar\r\n        packages: '',\r\n        description: '',\r\n        quantity: '',\r\n        //Otros\r\n        selectedTask: null,\r\n        tasks: [],\r\n        title: 'Elegir Tarea'\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.state.selectedTask === prevState.selectedTask)\r\n            return;\r\n        console.log(this.state.selectedTask);\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        Axios.post('http://localhost:3001/getTasks', { state: 'toAsign' }).then(response => {\r\n            this.setState({ tasks: response.data });\r\n        });\r\n    }\r\n\r\n    myForm = () => {\r\n        return (\r\n            <>\r\n                {this.state.selectedTask ?\r\n                    <>\r\n                        <h3>Bultos: {this.state.selectedTask.packages}</h3>\r\n                        <h3>Descripción: {this.state.selectedTask.article_description}</h3>\r\n                        <h3>Cantidad: {this.state.selectedTask.quantity}</h3>\r\n                    </>\r\n                    : null}\r\n\r\n                <Request toShow=\"name\" onChange={(event) => {\r\n                    this.setState({ name: event });\r\n                }} />\r\n\r\n                <Request toShow=\"deadline\" onChange={(event) => {\r\n                    this.setState({ deadline: event.target.value });\r\n                }} />\r\n\r\n                <TaskRequest setSelectedTask={(e) => this.setState({ selectedTask: e })} tasks={this.state.tasks}\r\n                    title={this.state.title} setTitle={(e) => { this.setState({ title: e }) }} />\r\n\r\n                <Request toShow=\"weight\" onChange={(event) => {\r\n                    this.setState({ weight: event.target.value });\r\n                }} />\r\n\r\n                <Request toShow=\"price\" onChange={(event) => {\r\n                    this.setState({ price: event.target.value });\r\n                }} />\r\n\r\n                <Request toShow=\"threads\" onChange={(event) => {\r\n                    this.setState({ threads: event.target.value });\r\n                }} />\r\n            </>\r\n        );\r\n    }\r\n\r\n    post = () => {\r\n        let aux = this.state\r\n        console.log(aux.task);\r\n        Axios.put('http://localhost:3001/asignTask', {\r\n            name: aux.name, task: this.state.selectedTask.id, deadline: aux.deadline, weight: aux.weight, threads: aux.threads,\r\n            price: aux.price, exitDate: moment(new Date()).format(\"DD/MM/YYYY\")\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ModalOpener buttonText='Remito' children={this.myForm()}\r\n                className={'title'} logo={image} title={'Asignar Tarea'} post={this.post} />\r\n            //Crea un botón que abre a un modal en el que aparecerá lo devuelto en this.myForm\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}
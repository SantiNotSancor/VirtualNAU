{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\GitHub\\\\VirtualNAU\\\\client\\\\src\\\\WorkshopsAdm\\\\assignTask.js\";\nimport React, { Component } from 'react';\nimport { ModalOpener } from '../modalOpener';\nimport { Request, TaskRequest } from '../textInputs';\nimport image from './Images/AssignTask.svg';\nimport Axios from 'axios';\nimport Form from 'react-bootstrap/Form';\nimport Table from 'react-bootstrap/Table';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  name: '',\n  task: '',\n  deadline: '',\n  weight: '',\n  threads: '',\n  price: 0,\n  //Auto-asignar\n  packages: '',\n  description: '',\n  quantity: '',\n  //Otros\n  error: true,\n  errors: [true, true, true, true, true, true],\n  selectedTask: null,\n  tasks: [],\n  title: 'Elegir Tarea',\n  showPrint: false\n};\nexport class AssignTaskButton extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = initialState;\n    this.form = /*#__PURE__*/React.createRef();\n    this.toPrint = /*#__PURE__*/React.createRef();\n\n    this.resetState = () => {\n      this.setState(initialState);\n    };\n\n    this.updateError = (index, error) => {\n      let errors = [...this.state.errors];\n      errors[index] = error;\n      this.setState({\n        errors\n      });\n      let aux = false;\n      errors.map((e, key) => {\n        aux = aux && key === index ? error : e;\n      });\n      this.setState({\n        error: aux\n      });\n    };\n\n    this.handleEnter = event => {\n      if (event.key.toLowerCase() !== 'enter') return;\n      const form = this.form.current;\n      const index = [...form].indexOf(event.target);\n      if (form.elements[index + 1]) form.elements[index === -1 ? 1 : index + 1].focus();\n      if (event.keyCode) //Si el evento es artificial ({key = 'enter'}), no se prevendrÃ¡ el evento porque no existe\n        event.preventDefault();\n    };\n\n    this.myForm = () => {\n      let defaultDeadline = new Date();\n      defaultDeadline.setDate(defaultDeadline.getDate() + 7);\n      Axios.post('http://localhost:3307/getTasks', {\n        state: 'toAssign'\n      }).then(response => {\n        this.setState({\n          tasks: response.data\n        });\n      });\n      return /*#__PURE__*/_jsxDEV(Form, {\n        ref: this.form,\n        children: [this.state.selectedTask ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Bultos: \", this.state.selectedTask.packages]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Descripci\\xF3n: \", this.state.selectedTask.article_description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Cantidad: \", this.state.selectedTask.quantity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true) : null, /*#__PURE__*/_jsxDEV(TaskRequest, {\n          setSelectedTask: e => {\n            this.setState({\n              selectedTask: e\n            });\n            this.updateError(0, !!e);\n            this.handleEnter({\n              key: 'enter'\n            });\n          },\n          tasks: this.state.tasks,\n          handleEnter: this.handleEnter,\n          title: this.state.title,\n          setTitle: e => {\n            this.setState({\n              title: e\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Request, {\n          toShow: \"workshopName\",\n          handleEnter: this.handleEnter,\n          onChange: (event, error) => {\n            this.setState({\n              name: event\n            });\n            this.updateError(1, error);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Request, {\n          toShow: \"price\",\n          value: this.state.price.toString(),\n          handleEnter: this.handleEnter,\n          onChange: (event, error) => {\n            this.setState({\n              price: event.target.value\n            });\n            this.updateError(2, error);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Request, {\n          toShow: \"deadline\",\n          value: moment(defaultDeadline).format(\"DD/MM/YYYY\"),\n          handleEnter: this.handleEnter,\n          onChange: (event, error) => {\n            let deadline = event.target.value,\n                currentYear = new Date().getFullYear();\n            deadline += deadline.length < 10 ? '/' + currentYear : '';\n            this.setState({\n              deadline\n            });\n            this.updateError(3, error);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Request, {\n          toShow: \"weight\",\n          handleEnter: this.handleEnter,\n          onChange: (event, error) => {\n            this.setState({\n              weight: event.target.value\n            });\n            this.updateError(4, error);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Request, {\n          toShow: \"threads\",\n          handleEnter: this.handleEnter,\n          onChange: (event, error) => {\n            this.setState({\n              threads: event.target.value\n            });\n            this.updateError(5, error);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.print = () => {\n      this.setState({\n        showPrint: true\n      });\n      var printContents = document.getElementById('toPrint').innerHTML;\n      var originalContents = document.body.innerHTML;\n      document.body.innerHTML = printContents;\n      window.print();\n      document.body.innerHTML = originalContents;\n      this.setState({\n        showPrint: false\n      });\n    };\n\n    this.post = () => {\n      let aux = this.state;\n      this.resetState();\n      Axios.put('http://localhost:3307/assignTask', {\n        name: aux.name,\n        task: this.state.selectedTask.id,\n        deadline: aux.deadline,\n        weight: aux.weight,\n        threads: aux.threads,\n        price: aux.price,\n        exitDate: moment(new Date()).format(\"DD/MM/YYYY\")\n      });\n    };\n  }\n\n  componentDidUpdate(prevState) {\n    if (this.state.selectedTask === prevState.selectedTask && this.state.name === prevState.name) return;\n    if (!this.state.name || !this.state.selectedTask || this.state.price) return;\n    Axios.post('http://localhost:3307/getPrices', {\n      name: this.state.name,\n      article: this.state.selectedTask.article_id\n    }).then(response => {\n      //Se debe encontrar el mayor de los id que sean menores a selectedTask.id o el mayor, si no tiene menores\n      if (response.data.length === 0) return;\n      let currentId = this.state.selectedTask.id,\n          aux = response.data[0];\n      response.data.map(task => {\n        if (task.id > aux.id && task.id < currentId || task.id > currentId && (aux.id === 0 || aux.id > currentId)) aux = task;\n      });\n      this.setState({\n        price: aux.price\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ModalOpener, {\n        buttonText: \"Remito\",\n        handleClose: this.resetState,\n        footer: {\n          content: this.toPrint,\n          show: !this.state.error\n        },\n        error: this.state.error,\n        className: 'title',\n        logo: image,\n        title: 'Asignar Tarea',\n        post: this.post,\n        children: this.myForm()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"toPrint\", {\n        ref: this.toPrint\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\nexport class toPrint extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this);\n  } // render(){\n  //     const { showPrint, date, quantity, weight, threads, price } = this.props;\n  //     if (!showPrint)\n  //         return null;\n  //     return (\n  //         <div id=\"toPrint\">\n  //             <Table striped bordered>\n  //                 <thead>\n  //                     <tr>\n  //                         <th>Fecha</th>\n  //                         <th>Cantidad</th>\n  //                         <th>Peso</th>\n  //                         <th>Hilos</th>\n  //                         <th>Precio por unidad</th>\n  //                         <th>Dinero</th>\n  //                     </tr>\n  //                 </thead>\n  //                 <tbody>\n  //                     <tr style={{ 'backgroundColor': 'green' }}>{/*Muestra el primero*/}\n  //                         <td>{date}</td>\n  //                         <td>{quantity}</td>\n  //                         <td>{weight}</td>\n  //                         <td>{threads}</td>\n  //                         <td>{'$' + price}</td>\n  //                         <td>{'$' + price * quantity}</td>\n  //                     </tr>\n  //                 </tbody>\n  //             </Table>\n  //         </div>\n  //     );\n  // }\n\n\n}","map":{"version":3,"sources":["C:/Users/Admin/GitHub/VirtualNAU/client/src/WorkshopsAdm/assignTask.js"],"names":["React","Component","ModalOpener","Request","TaskRequest","image","Axios","Form","Table","moment","initialState","name","task","deadline","weight","threads","price","packages","description","quantity","error","errors","selectedTask","tasks","title","showPrint","AssignTaskButton","state","form","createRef","toPrint","resetState","setState","updateError","index","aux","map","e","key","handleEnter","event","toLowerCase","current","indexOf","target","elements","focus","keyCode","preventDefault","myForm","defaultDeadline","Date","setDate","getDate","post","then","response","data","article_description","toString","value","format","currentYear","getFullYear","length","print","printContents","document","getElementById","innerHTML","originalContents","body","window","put","id","exitDate","componentDidUpdate","prevState","article","article_id","currentId","render","content","show"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,eAArC;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,EADW;AAEjBC,EAAAA,IAAI,EAAE,EAFW;AAGjBC,EAAAA,QAAQ,EAAE,EAHO;AAIjBC,EAAAA,MAAM,EAAE,EAJS;AAKjBC,EAAAA,OAAO,EAAE,EALQ;AAMjBC,EAAAA,KAAK,EAAE,CANU;AAOjB;AACAC,EAAAA,QAAQ,EAAE,EARO;AASjBC,EAAAA,WAAW,EAAE,EATI;AAUjBC,EAAAA,QAAQ,EAAE,EAVO;AAWjB;AACAC,EAAAA,KAAK,EAAE,IAZU;AAajBC,EAAAA,MAAM,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,CAbS;AAcjBC,EAAAA,YAAY,EAAE,IAdG;AAejBC,EAAAA,KAAK,EAAE,EAfU;AAgBjBC,EAAAA,KAAK,EAAE,cAhBU;AAiBjBC,EAAAA,SAAS,EAAE;AAjBM,CAArB;AAoBA,OAAO,MAAMC,gBAAN,SAA+BzB,SAA/B,CAAyC;AAAA;AAAA;AAAA,SAC5C0B,KAD4C,GACpCjB,YADoC;AAAA,SAE5CkB,IAF4C,gBAErC5B,KAAK,CAAC6B,SAAN,EAFqC;AAAA,SAG5CC,OAH4C,gBAGlC9B,KAAK,CAAC6B,SAAN,EAHkC;;AAAA,SAK5CE,UAL4C,GAK/B,MAAM;AACf,WAAKC,QAAL,CAActB,YAAd;AACH,KAP2C;;AAAA,SAS5CuB,WAT4C,GAS9B,CAACC,KAAD,EAAQd,KAAR,KAAkB;AAC5B,UAAIC,MAAM,GAAG,CAAC,GAAG,KAAKM,KAAL,CAAWN,MAAf,CAAb;AACAA,MAAAA,MAAM,CAACa,KAAD,CAAN,GAAgBd,KAAhB;AACA,WAAKY,QAAL,CAAc;AAAEX,QAAAA;AAAF,OAAd;AAEA,UAAIc,GAAG,GAAG,KAAV;AACAd,MAAAA,MAAM,CAACe,GAAP,CAAW,CAACC,CAAD,EAAIC,GAAJ,KAAY;AACnBH,QAAAA,GAAG,GAAGA,GAAG,IAAKG,GAAG,KAAKJ,KAAhB,GAAyBd,KAAzB,GAAiCiB,CAAvC;AACH,OAFD;AAGA,WAAKL,QAAL,CAAc;AAAEZ,QAAAA,KAAK,EAAEe;AAAT,OAAd;AACH,KAnB2C;;AAAA,SAwC5CI,WAxC4C,GAwC7BC,KAAD,IAAW;AACrB,UAAIA,KAAK,CAACF,GAAN,CAAUG,WAAV,OAA4B,OAAhC,EACI;AACJ,YAAMb,IAAI,GAAG,KAAKA,IAAL,CAAUc,OAAvB;AACA,YAAMR,KAAK,GAAG,CAAC,GAAGN,IAAJ,EAAUe,OAAV,CAAkBH,KAAK,CAACI,MAAxB,CAAd;AACA,UAAIhB,IAAI,CAACiB,QAAL,CAAcX,KAAK,GAAG,CAAtB,CAAJ,EACIN,IAAI,CAACiB,QAAL,CAAeX,KAAK,KAAK,CAAC,CAAZ,GAAiB,CAAjB,GAAqBA,KAAK,GAAG,CAA3C,EAA8CY,KAA9C;AACJ,UAAIN,KAAK,CAACO,OAAV,EAAmB;AACfP,QAAAA,KAAK,CAACQ,cAAN;AACP,KAjD2C;;AAAA,SAmD5CC,MAnD4C,GAmDnC,MAAM;AACX,UAAIC,eAAe,GAAG,IAAIC,IAAJ,EAAtB;AACAD,MAAAA,eAAe,CAACE,OAAhB,CAAwBF,eAAe,CAACG,OAAhB,KAA4B,CAApD;AACA/C,MAAAA,KAAK,CAACgD,IAAN,CAAW,gCAAX,EAA6C;AAAE3B,QAAAA,KAAK,EAAE;AAAT,OAA7C,EAAoE4B,IAApE,CAA0EC,QAAD,IAAc;AACnF,aAAKxB,QAAL,CAAc;AAAET,UAAAA,KAAK,EAAEiC,QAAQ,CAACC;AAAlB,SAAd;AACH,OAFD;AAGA,0BACI,QAAC,IAAD;AAAM,QAAA,GAAG,EAAE,KAAK7B,IAAhB;AAAA,mBACK,KAAKD,KAAL,CAAWL,YAAX,gBACG;AAAA,kCACI;AAAA,mCAAa,KAAKK,KAAL,CAAWL,YAAX,CAAwBL,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,2CAAkB,KAAKU,KAAL,CAAWL,YAAX,CAAwBoC,mBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,qCAAe,KAAK/B,KAAL,CAAWL,YAAX,CAAwBH,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA,wBADH,GAMK,IAPV,eASI,QAAC,WAAD;AAAa,UAAA,eAAe,EAAGkB,CAAD,IAAO;AACjC,iBAAKL,QAAL,CAAc;AAAEV,cAAAA,YAAY,EAAEe;AAAhB,aAAd;AACA,iBAAKJ,WAAL,CAAiB,CAAjB,EAAoB,CAAC,CAACI,CAAtB;AACA,iBAAKE,WAAL,CAAiB;AAAED,cAAAA,GAAG,EAAE;AAAP,aAAjB;AACH,WAJD;AAIG,UAAA,KAAK,EAAE,KAAKX,KAAL,CAAWJ,KAJrB;AAI4B,UAAA,WAAW,EAAE,KAAKgB,WAJ9C;AAKI,UAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWH,KALtB;AAK6B,UAAA,QAAQ,EAAGa,CAAD,IAAO;AAAE,iBAAKL,QAAL,CAAc;AAAER,cAAAA,KAAK,EAAEa;AAAT,aAAd;AAA6B;AAL7E;AAAA;AAAA;AAAA;AAAA,gBATJ,eAgBI,QAAC,OAAD;AAAS,UAAA,MAAM,EAAC,cAAhB;AAA+B,UAAA,WAAW,EAAE,KAAKE,WAAjD;AAA8D,UAAA,QAAQ,EAAE,CAACC,KAAD,EAAQpB,KAAR,KAAkB;AACtF,iBAAKY,QAAL,CAAc;AAAErB,cAAAA,IAAI,EAAE6B;AAAR,aAAd;AACA,iBAAKP,WAAL,CAAiB,CAAjB,EAAoBb,KAApB;AACH;AAHD;AAAA;AAAA;AAAA;AAAA,gBAhBJ,eAqBI,QAAC,OAAD;AAAS,UAAA,MAAM,EAAC,OAAhB;AAAwB,UAAA,KAAK,EAAE,KAAKO,KAAL,CAAWX,KAAX,CAAiB2C,QAAjB,EAA/B;AAA4D,UAAA,WAAW,EAAE,KAAKpB,WAA9E;AAA2F,UAAA,QAAQ,EAAE,CAACC,KAAD,EAAQpB,KAAR,KAAkB;AACnH,iBAAKY,QAAL,CAAc;AAAEhB,cAAAA,KAAK,EAAEwB,KAAK,CAACI,MAAN,CAAagB;AAAtB,aAAd;AACA,iBAAK3B,WAAL,CAAiB,CAAjB,EAAoBb,KAApB;AACH;AAHD;AAAA;AAAA;AAAA;AAAA,gBArBJ,eA0BI,QAAC,OAAD;AAAS,UAAA,MAAM,EAAC,UAAhB;AAA2B,UAAA,KAAK,EAAEX,MAAM,CAACyC,eAAD,CAAN,CAAwBW,MAAxB,CAA+B,YAA/B,CAAlC;AAAgF,UAAA,WAAW,EAAE,KAAKtB,WAAlG;AAA+G,UAAA,QAAQ,EAAE,CAACC,KAAD,EAAQpB,KAAR,KAAkB;AACvI,gBAAIP,QAAQ,GAAG2B,KAAK,CAACI,MAAN,CAAagB,KAA5B;AAAA,gBAAmCE,WAAW,GAAG,IAAIX,IAAJ,GAAWY,WAAX,EAAjD;AACAlD,YAAAA,QAAQ,IAAIA,QAAQ,CAACmD,MAAT,GAAkB,EAAlB,GAAuB,MAAMF,WAA7B,GAA2C,EAAvD;AACA,iBAAK9B,QAAL,CAAc;AAAEnB,cAAAA;AAAF,aAAd;AACA,iBAAKoB,WAAL,CAAiB,CAAjB,EAAoBb,KAApB;AACH;AALD;AAAA;AAAA;AAAA;AAAA,gBA1BJ,eAiCI,QAAC,OAAD;AAAS,UAAA,MAAM,EAAC,QAAhB;AAAyB,UAAA,WAAW,EAAE,KAAKmB,WAA3C;AAAwD,UAAA,QAAQ,EAAE,CAACC,KAAD,EAAQpB,KAAR,KAAkB;AAChF,iBAAKY,QAAL,CAAc;AAAElB,cAAAA,MAAM,EAAE0B,KAAK,CAACI,MAAN,CAAagB;AAAvB,aAAd;AACA,iBAAK3B,WAAL,CAAiB,CAAjB,EAAoBb,KAApB;AACH;AAHD;AAAA;AAAA;AAAA;AAAA,gBAjCJ,eAsCI,QAAC,OAAD;AAAS,UAAA,MAAM,EAAC,SAAhB;AAA0B,UAAA,WAAW,EAAE,KAAKmB,WAA5C;AAAyD,UAAA,QAAQ,EAAE,CAACC,KAAD,EAAQpB,KAAR,KAAkB;AACjF,iBAAKY,QAAL,CAAc;AAAEjB,cAAAA,OAAO,EAAEyB,KAAK,CAACI,MAAN,CAAagB;AAAxB,aAAd;AACA,iBAAK3B,WAAL,CAAiB,CAAjB,EAAoBb,KAApB;AACH;AAHD;AAAA;AAAA;AAAA;AAAA,gBAtCJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AA6CH,KAtG2C;;AAAA,SAwG5C6C,KAxG4C,GAwGpC,MAAM;AACV,WAAKjC,QAAL,CAAc;AAAEP,QAAAA,SAAS,EAAE;AAAb,OAAd;AACA,UAAIyC,aAAa,GAAGC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,SAAvD;AACA,UAAIC,gBAAgB,GAAGH,QAAQ,CAACI,IAAT,CAAcF,SAArC;AACAF,MAAAA,QAAQ,CAACI,IAAT,CAAcF,SAAd,GAA0BH,aAA1B;AACAM,MAAAA,MAAM,CAACP,KAAP;AACAE,MAAAA,QAAQ,CAACI,IAAT,CAAcF,SAAd,GAA0BC,gBAA1B;AACA,WAAKtC,QAAL,CAAc;AAAEP,QAAAA,SAAS,EAAE;AAAb,OAAd;AACH,KAhH2C;;AAAA,SAkH5C6B,IAlH4C,GAkHrC,MAAM;AACT,UAAInB,GAAG,GAAG,KAAKR,KAAf;AACA,WAAKI,UAAL;AACAzB,MAAAA,KAAK,CAACmE,GAAN,CAAU,kCAAV,EAA8C;AAC1C9D,QAAAA,IAAI,EAAEwB,GAAG,CAACxB,IADgC;AAC1BC,QAAAA,IAAI,EAAE,KAAKe,KAAL,CAAWL,YAAX,CAAwBoD,EADJ;AACQ7D,QAAAA,QAAQ,EAAEsB,GAAG,CAACtB,QADtB;AACgCC,QAAAA,MAAM,EAAEqB,GAAG,CAACrB,MAD5C;AACoDC,QAAAA,OAAO,EAAEoB,GAAG,CAACpB,OADjE;AAE1CC,QAAAA,KAAK,EAAEmB,GAAG,CAACnB,KAF+B;AAExB2D,QAAAA,QAAQ,EAAElE,MAAM,CAAC,IAAI0C,IAAJ,EAAD,CAAN,CAAmBU,MAAnB,CAA0B,YAA1B;AAFc,OAA9C;AAIH,KAzH2C;AAAA;;AAqB5Ce,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC1B,QAAI,KAAKlD,KAAL,CAAWL,YAAX,KAA4BuD,SAAS,CAACvD,YAAtC,IAAsD,KAAKK,KAAL,CAAWhB,IAAX,KAAoBkE,SAAS,CAAClE,IAAxF,EACI;AACJ,QAAI,CAAC,KAAKgB,KAAL,CAAWhB,IAAZ,IAAoB,CAAC,KAAKgB,KAAL,CAAWL,YAAhC,IAAgD,KAAKK,KAAL,CAAWX,KAA/D,EACI;AACJV,IAAAA,KAAK,CAACgD,IAAN,CAAW,iCAAX,EACI;AAAE3C,MAAAA,IAAI,EAAE,KAAKgB,KAAL,CAAWhB,IAAnB;AAAyBmE,MAAAA,OAAO,EAAE,KAAKnD,KAAL,CAAWL,YAAX,CAAwByD;AAA1D,KADJ,EAC4ExB,IAD5E,CACkFC,QAAD,IAAc;AACvF;AACA,UAAIA,QAAQ,CAACC,IAAT,CAAcO,MAAd,KAAyB,CAA7B,EACI;AACJ,UAAIgB,SAAS,GAAG,KAAKrD,KAAL,CAAWL,YAAX,CAAwBoD,EAAxC;AAAA,UAA4CvC,GAAG,GAAGqB,QAAQ,CAACC,IAAT,CAAc,CAAd,CAAlD;AACAD,MAAAA,QAAQ,CAACC,IAAT,CAAcrB,GAAd,CAAmBxB,IAAD,IAAU;AACxB,YAAKA,IAAI,CAAC8D,EAAL,GAAUvC,GAAG,CAACuC,EAAd,IAAoB9D,IAAI,CAAC8D,EAAL,GAAUM,SAA/B,IAA8CpE,IAAI,CAAC8D,EAAL,GAAUM,SAAV,KAAwB7C,GAAG,CAACuC,EAAJ,KAAW,CAAX,IAAgBvC,GAAG,CAACuC,EAAJ,GAASM,SAAjD,CAAlD,EACI7C,GAAG,GAAGvB,IAAN;AACP,OAHD;AAIA,WAAKoB,QAAL,CAAc;AAAEhB,QAAAA,KAAK,EAAEmB,GAAG,CAACnB;AAAb,OAAd;AACH,KAXL;AAYH;;AAqFDiE,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI,QAAC,WAAD;AAAa,QAAA,UAAU,EAAC,QAAxB;AAAiC,QAAA,WAAW,EAAE,KAAKlD,UAAnD;AACI,QAAA,MAAM,EAAE;AAAEmD,UAAAA,OAAO,EAAE,KAAKpD,OAAhB;AAAyBqD,UAAAA,IAAI,EAAE,CAAC,KAAKxD,KAAL,CAAWP;AAA3C,SADZ;AACgE,QAAA,KAAK,EAAE,KAAKO,KAAL,CAAWP,KADlF;AAEI,QAAA,SAAS,EAAE,OAFf;AAEwB,QAAA,IAAI,EAAEf,KAF9B;AAEqC,QAAA,KAAK,EAAE,eAF5C;AAE6D,QAAA,IAAI,EAAE,KAAKiD,IAFxE;AAE8E,QAAA,QAAQ,EAAE,KAAKL,MAAL;AAFxF;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAS,QAAA,GAAG,EAAE,KAAKnB;AAAnB;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA,oBADJ;AASH;;AArI2C;AAwIhD,OAAO,MAAMA,OAAN,SAAsB7B,SAAtB,CAAgC;AAEnCgF,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,GANkC,CAQnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAtCmC","sourcesContent":["import React, { Component } from 'react';\r\nimport { ModalOpener } from '../modalOpener';\r\nimport { Request, TaskRequest } from '../textInputs';\r\nimport image from './Images/AssignTask.svg';\r\nimport Axios from 'axios';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Table from 'react-bootstrap/Table';\r\nimport moment from 'moment';\r\n\r\nconst initialState = {\r\n    name: '',\r\n    task: '',\r\n    deadline: '',\r\n    weight: '',\r\n    threads: '',\r\n    price: 0,\r\n    //Auto-asignar\r\n    packages: '',\r\n    description: '',\r\n    quantity: '',\r\n    //Otros\r\n    error: true,\r\n    errors: [true, true, true, true, true, true],\r\n    selectedTask: null,\r\n    tasks: [],\r\n    title: 'Elegir Tarea',\r\n    showPrint: false\r\n};\r\n\r\nexport class AssignTaskButton extends Component {\r\n    state = initialState;\r\n    form = React.createRef();\r\n    toPrint = React.createRef();\r\n\r\n    resetState = () => {\r\n        this.setState(initialState);\r\n    }\r\n\r\n    updateError = (index, error) => {\r\n        let errors = [...this.state.errors];\r\n        errors[index] = error;\r\n        this.setState({ errors });\r\n\r\n        let aux = false;\r\n        errors.map((e, key) => {\r\n            aux = aux && (key === index) ? error : e;\r\n        });\r\n        this.setState({ error: aux });\r\n    }\r\n\r\n    componentDidUpdate(prevState) {\r\n        if (this.state.selectedTask === prevState.selectedTask && this.state.name === prevState.name)\r\n            return;\r\n        if (!this.state.name || !this.state.selectedTask || this.state.price)\r\n            return;\r\n        Axios.post('http://localhost:3307/getPrices',\r\n            { name: this.state.name, article: this.state.selectedTask.article_id }).then((response) => {\r\n                //Se debe encontrar el mayor de los id que sean menores a selectedTask.id o el mayor, si no tiene menores\r\n                if (response.data.length === 0)\r\n                    return;\r\n                let currentId = this.state.selectedTask.id, aux = response.data[0];\r\n                response.data.map((task) => {\r\n                    if ((task.id > aux.id && task.id < currentId) || (task.id > currentId && (aux.id === 0 || aux.id > currentId)))\r\n                        aux = task;\r\n                })\r\n                this.setState({ price: aux.price });\r\n            });\r\n    }\r\n\r\n    handleEnter = (event) => {\r\n        if (event.key.toLowerCase() !== 'enter')\r\n            return;\r\n        const form = this.form.current;\r\n        const index = [...form].indexOf(event.target);\r\n        if (form.elements[index + 1])\r\n            form.elements[(index === -1) ? 1 : index + 1].focus();\r\n        if (event.keyCode) //Si el evento es artificial ({key = 'enter'}), no se prevendrÃ¡ el evento porque no existe\r\n            event.preventDefault();\r\n    };\r\n\r\n    myForm = () => {\r\n        let defaultDeadline = new Date();\r\n        defaultDeadline.setDate(defaultDeadline.getDate() + 7);\r\n        Axios.post('http://localhost:3307/getTasks', { state: 'toAssign' }).then((response) => {\r\n            this.setState({ tasks: response.data });\r\n        });\r\n        return (\r\n            <Form ref={this.form}>\r\n                {this.state.selectedTask ?\r\n                    <>\r\n                        <h3>Bultos: {this.state.selectedTask.packages}</h3>\r\n                        <h3>DescripciÃ³n: {this.state.selectedTask.article_description}</h3>\r\n                        <h3>Cantidad: {this.state.selectedTask.quantity}</h3>\r\n                    </>\r\n                    : null}\r\n\r\n                <TaskRequest setSelectedTask={(e) => {\r\n                    this.setState({ selectedTask: e });\r\n                    this.updateError(0, !!e);\r\n                    this.handleEnter({ key: 'enter' });\r\n                }} tasks={this.state.tasks} handleEnter={this.handleEnter}\r\n                    title={this.state.title} setTitle={(e) => { this.setState({ title: e }) }} />\r\n\r\n                <Request toShow=\"workshopName\" handleEnter={this.handleEnter} onChange={(event, error) => {\r\n                    this.setState({ name: event });\r\n                    this.updateError(1, error);\r\n                }} />\r\n\r\n                <Request toShow=\"price\" value={this.state.price.toString()} handleEnter={this.handleEnter} onChange={(event, error) => {\r\n                    this.setState({ price: event.target.value });\r\n                    this.updateError(2, error);\r\n                }} />\r\n\r\n                <Request toShow=\"deadline\" value={moment(defaultDeadline).format(\"DD/MM/YYYY\")} handleEnter={this.handleEnter} onChange={(event, error) => {\r\n                    let deadline = event.target.value, currentYear = new Date().getFullYear();\r\n                    deadline += deadline.length < 10 ? '/' + currentYear : '';\r\n                    this.setState({ deadline });\r\n                    this.updateError(3, error);\r\n                }} />\r\n\r\n                <Request toShow=\"weight\" handleEnter={this.handleEnter} onChange={(event, error) => {\r\n                    this.setState({ weight: event.target.value });\r\n                    this.updateError(4, error);\r\n                }} />\r\n\r\n                <Request toShow=\"threads\" handleEnter={this.handleEnter} onChange={(event, error) => {\r\n                    this.setState({ threads: event.target.value });\r\n                    this.updateError(5, error);\r\n                }} />\r\n            </Form>\r\n        );\r\n    }\r\n\r\n    print = () => {\r\n        this.setState({ showPrint: true });\r\n        var printContents = document.getElementById('toPrint').innerHTML;\r\n        var originalContents = document.body.innerHTML;\r\n        document.body.innerHTML = printContents;\r\n        window.print();\r\n        document.body.innerHTML = originalContents;\r\n        this.setState({ showPrint: false });\r\n    }\r\n\r\n    post = () => {\r\n        let aux = this.state;\r\n        this.resetState();\r\n        Axios.put('http://localhost:3307/assignTask', {\r\n            name: aux.name, task: this.state.selectedTask.id, deadline: aux.deadline, weight: aux.weight, threads: aux.threads,\r\n            price: aux.price, exitDate: moment(new Date()).format(\"DD/MM/YYYY\")\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <ModalOpener buttonText='Remito' handleClose={this.resetState}\r\n                    footer={{ content: this.toPrint, show: !this.state.error }} error={this.state.error}\r\n                    className={'title'} logo={image} title={'Asignar Tarea'} post={this.post} children={this.myForm()} />\r\n            {/* Crea un botÃ³n que abre a un modal en el que aparecerÃ¡ lo devuelto en this.myForm */}\r\n                <toPrint ref={this.toPrint}/>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport class toPrint extends Component {\r\n\r\n    render(){\r\n        return (\r\n            <h1>Hello</h1>\r\n        )\r\n    }\r\n\r\n    // render(){\r\n    //     const { showPrint, date, quantity, weight, threads, price } = this.props;\r\n    //     if (!showPrint)\r\n    //         return null;\r\n    //     return (\r\n    //         <div id=\"toPrint\">\r\n    //             <Table striped bordered>\r\n    //                 <thead>\r\n    //                     <tr>\r\n    //                         <th>Fecha</th>\r\n    //                         <th>Cantidad</th>\r\n    //                         <th>Peso</th>\r\n    //                         <th>Hilos</th>\r\n    //                         <th>Precio por unidad</th>\r\n    //                         <th>Dinero</th>\r\n    //                     </tr>\r\n    //                 </thead>\r\n    //                 <tbody>\r\n    //                     <tr style={{ 'backgroundColor': 'green' }}>{/*Muestra el primero*/}\r\n    //                         <td>{date}</td>\r\n    //                         <td>{quantity}</td>\r\n    //                         <td>{weight}</td>\r\n    //                         <td>{threads}</td>\r\n    //                         <td>{'$' + price}</td>\r\n    //                         <td>{'$' + price * quantity}</td>\r\n    //                     </tr>\r\n    //                 </tbody>\r\n    //             </Table>\r\n    //         </div>\r\n    //     );\r\n    // }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}
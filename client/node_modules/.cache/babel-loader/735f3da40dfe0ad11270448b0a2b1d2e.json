{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\GitHub\\\\VirtualNAU\\\\client\\\\src\\\\showData.js\";\nimport React, { Component } from 'react';\nimport Axios from 'axios';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Table from 'react-bootstrap/Table';\nimport FormControl from 'react-bootstrap/FormControl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  data: '',\n  //El nombre de la BD de la que sacamos los datos\n  table: [],\n  //La tabla de datos\n  actualTable: [],\n  //La tabla a mostrar\n  titles: [],\n  //Los atributos de la BD\n  headers: [],\n  //Los títulos que se mostrarán en la tabla\n  input: '',\n  //Ingreso de Inputbox para filtrar la tabla\n  filters: [],\n  //Lista que muestra el tipo de filtro\n  filterInputs: [] //Lista que contiene lo ingresado por el usuario en cada filtro\n\n};\nexport class ShowData extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = initialState;\n\n    this.resetState = () => {\n      this.setState(initialState);\n    };\n\n    this.setData = e => {\n      Axios.get('http://localhost:3307/get' + e.charAt(0).toUpperCase() + e.slice(1)).then(response => {\n        const res = response.data,\n              table = [],\n              titles = [];\n        if (res) res.map(row => table.push(Object.values(row)));\n        Object.getOwnPropertyNames(res[0]).map(property => {\n          let header;\n\n          switch (property) {\n            case 'date':\n              header = 'Fecha';\n              break;\n\n            case 'id':\n              header = 'Código';\n              break;\n\n            case 'description':\n              header = 'Descripción';\n              break;\n\n            case 'name':\n              header = 'Nombre';\n              break;\n\n            case 'contact':\n              header = 'Contacto';\n              break;\n\n            case 'money':\n              header = this.state.data === 'Workshop' ? 'Cuenta corriente' : 'Saldo';\n              break;\n\n            case 'article_id':\n              header = 'Código de artículo';\n              break;\n\n            case 'article_description':\n              header = 'Descripción de artículo';\n              break;\n\n            case 'quantity':\n              header = 'Cantidad';\n              break;\n\n            case 'packages':\n              header = 'Bultos';\n              break;\n\n            case 'cutDate':\n              header = 'Fecha de corte';\n              break;\n\n            case 'fabrics':\n              header = 'Telas';\n              break;\n\n            case 'colors':\n              header = 'Colores';\n              break;\n\n            case 'responsible':\n              header = 'responsible/s';\n              break;\n\n            case 'generalFeatures':\n              header = 'Detalles';\n              break;\n\n            case 'state':\n              header = 'Estado';\n              break;\n\n            case 'exitDate':\n              header = 'Fecha de salida';\n              break;\n\n            case 'deadline':\n              header = 'Fecha esperada';\n              break;\n\n            case 'weight':\n              header = 'Peso';\n              break;\n\n            case 'price':\n              header = 'Precio unitario';\n              break;\n\n            case 'threads':\n              header = 'Hilos entregados';\n              break;\n\n            case 'calification':\n              header = 'Calificación';\n              break;\n\n            case 'observations':\n              header = 'Observaciones';\n              break;\n\n            case 'faulty':\n              header = 'Fallados';\n              break;\n          }\n\n          titles.push(header);\n        });\n        this.setState({\n          titles,\n          table,\n          data: e\n        });\n        this.table(titles);\n      });\n    };\n\n    this.header = (name, index) => {\n      return /*#__PURE__*/_jsxDEV(\"th\", {\n        children: name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this);\n    };\n\n    this.table = titles => {\n      let filters = [];\n      let filterInputs = [];\n      titles.map(title => {\n        //TODO: \n        switch (title) {\n          case 'Descripción':\n          case 'Nombre':\n          case 'Contacto':\n          case 'Código de artículo':\n          case 'Descripción de artículo':\n          case 'Telas':\n          case 'Colores':\n          case 'responsible/s':\n          case 'Detalles':\n          case 'Observaciones':\n            filters.push('input');\n            break;\n\n          case 'Saldo':\n          case 'Cantidad':\n          case 'Código':\n          case 'Bultos':\n          case 'Precio unitario':\n          case 'Peso':\n          case 'Hilos entregados':\n          case 'Calificación':\n          case 'Fallados':\n            filters.push('number');\n            break;\n\n          case 'Fecha':\n          case 'Fecha de corte':\n          case 'Fecha de salida':\n          case 'Fecha esperada':\n            filters.push('date');\n            break;\n\n          case 'Estado':\n            filters.push(['Todos', 'Asignado', 'No Asignado', 'Devuelto']);\n            break;\n\n          case 'Pago':\n            filters.push(['Todos', 'Pago', 'No Pago']);\n            break;\n\n          default:\n            filters.push('');\n            break;\n        }\n\n        filterInputs.push('');\n      });\n      this.setState({\n        filters,\n        filterInputs\n      });\n    };\n\n    this.compareTable = () => {\n      //Le asigna a actualTable una versión filtrada de table \n      //TODO:     \n      const {\n        table,\n        filterInputs\n      } = this.state;\n      let actualTable = table;\n      console.log(table); //['', 'an']\n\n      table.map((row, i) => {\n        let erase = false;\n        console.log(row); //[2004, 'Gorro de lana'];\n\n        row.map((cell, j) => {\n          let aux = typeof cell !== 'string' ? toString(cell) : cell;\n\n          if (!aux.includes(filterInputs[j])) {\n            console.log('BORRAR');\n            erase = true;\n          }\n        });\n\n        if (erase) {\n          actualTable.splice(i, 1); //Eliminar el elemento número i\n\n          console.log(\"ELIMINAR   \" + i);\n        }\n      }); //Filtrar actualTable\n\n      this.setState({\n        actualTable\n      });\n    };\n  }\n\n  render() {\n    const {\n      actualTable,\n      titles,\n      table\n    } = this.state,\n          data = {\n      'articles': 'Artículos',\n      'workshops': 'Talleres',\n      'payments': 'Pagos',\n      'tasks': 'Tareas'\n    };\n    let title = 'Elegir datos a mostrar',\n        dropdownList = [];\n\n    for (const key in data) dropdownList.push(key);\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(DropdownButton, {\n        title: title,\n        onSelect: e => {\n          this.setData(e);\n          title = data.e;\n        },\n        children: dropdownList.map((e, index) => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          eventKey: e,\n          children: data[e]\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 53\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this), titles && actualTable ? /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: titles.map((title, i) => this.header(title, i))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: this.state.filters.map((filter, i) => {\n              switch (filter) {\n                case 'input':\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(FormControl, {\n                      onChange: e => {\n                        let aux = this.state.filterInputs;\n                        aux[i] = e.target.value;\n                        this.setState({\n                          filterInputs: aux\n                        });\n                        this.compareTable();\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 217,\n                      columnNumber: 60\n                    }, this)\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 48\n                  }, this);\n\n                case 'number':\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                      onChange: e => {\n                        let aux = this.state.filterInputs;\n                        if (aux[i] === '') aux[i] = ' ';\n                        let firstChar = aux[i][0];\n                        aux[i] = firstChar + e.target.value;\n                        this.setState({\n                          filterInputs: aux\n                        });\n                        this.compareTable();\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 224,\n                      columnNumber: 60\n                    }, this), /*#__PURE__*/_jsxDEV(DropdownButton, {\n                      onSelect: e => {\n                        let aux = this.state.filterInputs;\n                        if (aux[i] === '') aux[i] = e;else aux[i] = e + aux[i].substring(1);\n                        this.setState({\n                          filterInputs: aux\n                        });\n                        this.compareTable();\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                        eventKey: '>',\n                        children: \"Mayor\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 243,\n                        columnNumber: 45\n                      }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                        eventKey: '<',\n                        children: \"Menor\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 244,\n                        columnNumber: 45\n                      }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                        eventKey: '=',\n                        children: \"Igual\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 245,\n                        columnNumber: 45\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 234,\n                      columnNumber: 41\n                    }, this)]\n                  }, i, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 48\n                  }, this);\n\n                case 'date':\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: \"FALTA AGREGAR\"\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 48\n                  }, this);\n                //TODO: AGREGAR\n\n                default:\n                  if (!filter[0]) return /*#__PURE__*/_jsxDEV(\"td\", {}, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 52\n                  }, this);\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(DropdownButton, {\n                      onSelect: e => {\n                        let aux = this.state.filterInputs;\n                        aux[i] = e;\n                        this.setState({\n                          filterInputs: aux\n                        });\n                        this.compareTable();\n                      },\n                      children: filter.map((element, index) => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                        eventKey: element,\n                        children: element\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 260,\n                        columnNumber: 45\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 253,\n                      columnNumber: 41\n                    }, this)\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 48\n                  }, this);\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 29\n          }, this), actualTable.map((row, i) => this.table(row, i, titles))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 21\n      }, this) : null]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Admin/GitHub/VirtualNAU/client/src/showData.js"],"names":["React","Component","Axios","Dropdown","DropdownButton","Table","FormControl","initialState","data","table","actualTable","titles","headers","input","filters","filterInputs","ShowData","state","resetState","setState","setData","e","get","charAt","toUpperCase","slice","then","response","res","map","row","push","Object","values","getOwnPropertyNames","property","header","name","index","title","compareTable","console","log","i","erase","cell","j","aux","toString","includes","splice","render","dropdownList","key","filter","target","value","firstChar","substring","element"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Axios from 'axios';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Table from 'react-bootstrap/Table';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\n\r\nconst initialState = {\r\n    data: '', //El nombre de la BD de la que sacamos los datos\r\n    table: [],//La tabla de datos\r\n    actualTable: [],//La tabla a mostrar\r\n    titles: [],//Los atributos de la BD\r\n    headers: [],//Los títulos que se mostrarán en la tabla\r\n    input: '',//Ingreso de Inputbox para filtrar la tabla\r\n    filters: [],//Lista que muestra el tipo de filtro\r\n    filterInputs: [] //Lista que contiene lo ingresado por el usuario en cada filtro\r\n};\r\n\r\nexport class ShowData extends Component {\r\n\r\n    state = initialState;\r\n\r\n    resetState = () => {\r\n        this.setState(initialState);\r\n    }\r\n\r\n    setData = e => {\r\n        Axios.get('http://localhost:3307/get' + e.charAt(0).toUpperCase() + e.slice(1)).then(response => {\r\n            const res = response.data, table = [], titles = [];\r\n            if (res)\r\n                res.map(row => table.push(Object.values(row)));\r\n            Object.getOwnPropertyNames(res[0]).map(property => {\r\n                let header;\r\n                switch (property) {\r\n                    case 'date':\r\n                        header = 'Fecha';\r\n                        break;\r\n                    case 'id':\r\n                        header = 'Código';\r\n                        break;\r\n                    case 'description':\r\n                        header = 'Descripción';\r\n                        break;\r\n                    case 'name':\r\n                        header = 'Nombre';\r\n                        break;\r\n                    case 'contact':\r\n                        header = 'Contacto';\r\n                        break;\r\n                    case 'money':\r\n                        header = (this.state.data === 'Workshop') ? 'Cuenta corriente' : 'Saldo';\r\n                        break;\r\n                    case 'article_id':\r\n                        header = 'Código de artículo';\r\n                        break;\r\n                    case 'article_description':\r\n                        header = 'Descripción de artículo';\r\n                        break;\r\n                    case 'quantity':\r\n                        header = 'Cantidad';\r\n                        break;\r\n                    case 'packages':\r\n                        header = 'Bultos';\r\n                        break;\r\n                    case 'cutDate':\r\n                        header = 'Fecha de corte';\r\n                        break;\r\n                    case 'fabrics':\r\n                        header = 'Telas';\r\n                        break;\r\n                    case 'colors':\r\n                        header = 'Colores';\r\n                        break;\r\n                    case 'responsible':\r\n                        header = 'responsible/s';\r\n                        break;\r\n                    case 'generalFeatures':\r\n                        header = 'Detalles';\r\n                        break;\r\n                    case 'state':\r\n                        header = 'Estado';\r\n                        break;\r\n                    case 'exitDate':\r\n                        header = 'Fecha de salida';\r\n                        break;\r\n                    case 'deadline':\r\n                        header = 'Fecha esperada';\r\n                        break;\r\n                    case 'weight':\r\n                        header = 'Peso';\r\n                        break;\r\n                    case 'price':\r\n                        header = 'Precio unitario';\r\n                        break;\r\n                    case 'threads':\r\n                        header = 'Hilos entregados';\r\n                        break;\r\n                    case 'calification':\r\n                        header = 'Calificación';\r\n                        break;\r\n                    case 'observations':\r\n                        header = 'Observaciones';\r\n                        break;\r\n                    case 'faulty':\r\n                        header = 'Fallados';\r\n                        break;\r\n                }\r\n                titles.push(header);\r\n            });\r\n            this.setState({ titles, table, data: e });\r\n            this.table(titles);\r\n        });\r\n    }\r\n\r\n    header = (name, index) => {\r\n        return (<th key={index}>{name}</th>);\r\n    }\r\n    \r\n    table = (titles) => {\r\n        let filters = [];\r\n        let filterInputs = [];\r\n        titles.map((title) => {//TODO: \r\n            switch(title){\r\n                case 'Descripción':\r\n                case 'Nombre':\r\n                case 'Contacto':\r\n                case 'Código de artículo':\r\n                case 'Descripción de artículo':\r\n                case 'Telas':\r\n                case 'Colores':\r\n                case 'responsible/s':\r\n                case 'Detalles':\r\n                case 'Observaciones':\r\n                    filters.push('input');\r\n                    break;\r\n                case 'Saldo':\r\n                case 'Cantidad':\r\n                case 'Código':\r\n                case 'Bultos':\r\n                case 'Precio unitario':\r\n                case 'Peso':\r\n                case 'Hilos entregados':\r\n                case 'Calificación':\r\n                case 'Fallados':\r\n                    filters.push('number');\r\n                    break;\r\n                case 'Fecha':\r\n                case 'Fecha de corte':\r\n                case 'Fecha de salida':\r\n                case 'Fecha esperada':\r\n                    filters.push('date');\r\n                    break;\r\n                case 'Estado':\r\n                    filters.push(['Todos', 'Asignado', 'No Asignado', 'Devuelto']);\r\n                    break;\r\n                case 'Pago':\r\n                    filters.push(['Todos', 'Pago', 'No Pago']);\r\n                    break;\r\n                default:\r\n                    filters.push('');\r\n                    break;\r\n                }\r\n            filterInputs.push('');\r\n            })\r\n        this.setState({filters, filterInputs});\r\n    }\r\n\r\n    compareTable = () => {//Le asigna a actualTable una versión filtrada de table \r\n        //TODO:     \r\n        const {table, filterInputs} = this.state;\r\n        let actualTable = table;\r\n        console.log(table);//['', 'an']\r\n        table.map((row, i) => {\r\n            let erase = false;\r\n            console.log(row);//[2004, 'Gorro de lana'];\r\n            row.map((cell, j) => {\r\n                let aux = typeof(cell) !== 'string'? toString(cell) : cell;\r\n                if(!aux.includes(filterInputs[j])){\r\n                    console.log('BORRAR');\r\n                    erase = true;\r\n                }\r\n            })\r\n            if(erase){\r\n                actualTable.splice(i, 1);//Eliminar el elemento número i\r\n                console.log(\"ELIMINAR   \" + i);}\r\n        })\r\n        //Filtrar actualTable\r\n        this.setState({actualTable});\r\n    }\r\n\r\n    render() {\r\n        const {actualTable, titles, table} = this.state, data = { 'articles': 'Artículos', 'workshops': 'Talleres', 'payments': 'Pagos', 'tasks': 'Tareas'};\r\n        let title = 'Elegir datos a mostrar', dropdownList = [];\r\n        for (const key in data)\r\n        dropdownList.push(key);\r\n        return (\r\n            <>\r\n                <DropdownButton title={title} onSelect={e => {\r\n                    this.setData(e);\r\n                    title = data.e;\r\n                }}>\r\n                    {dropdownList.map((e, index) => <Dropdown.Item key={index} eventKey={e}>{data[e]}</Dropdown.Item>)}\r\n                </DropdownButton>\r\n                {(titles && actualTable) ?\r\n                    <Table striped bordered>\r\n                        <thead>\r\n                            <tr>\r\n                                {\r\n                                titles.map((title, i) => this.header(title, i))}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                            {this.state.filters.map((filter, i) => {\r\n                                switch (filter) {\r\n                                    case 'input':\r\n                                        return <td key={i}><FormControl onChange={(e) => {\r\n                                            let aux = this.state.filterInputs;\r\n                                            aux[i] = e.target.value;\r\n                                            this.setState({filterInputs: aux});\r\n                                            this.compareTable();\r\n                                        }}/></td>\r\n                                    case 'number':\r\n                                        return <td key={i}><FormControl onChange={(e) => {\r\n                                            let aux = this.state.filterInputs;\r\n                                            if(aux[i] === '')\r\n                                                aux[i] = ' ';\r\n                                            let firstChar = aux[i][0];\r\n                                            aux[i] = firstChar + e.target.value;\r\n                                            this.setState({filterInputs: aux});\r\n                                            this.compareTable();\r\n                                        }}/>\r\n                                        \r\n                                        <DropdownButton onSelect={(e) => {\r\n                                            let aux = this.state.filterInputs;\r\n                                            if(aux[i] === '')\r\n                                                aux[i] = e;\r\n                                            else\r\n                                                aux[i] = e + aux[i].substring(1);\r\n                                            this.setState({filterInputs: aux});\r\n                                            this.compareTable();\r\n                                        }}>\r\n                                            <Dropdown.Item eventKey={'>'}>Mayor</Dropdown.Item>\r\n                                            <Dropdown.Item eventKey={'<'}>Menor</Dropdown.Item>\r\n                                            <Dropdown.Item eventKey={'='}>Igual</Dropdown.Item>\r\n                                        </DropdownButton></td>\r\n                                    case 'date':\r\n                                        return <td key={i}>FALTA AGREGAR</td>//TODO: AGREGAR\r\n                                    default:\r\n                                        if(!filter[0])\r\n                                            return <td key={i}></td>;\r\n                                        return <td key={i}>\r\n                                        <DropdownButton onSelect={(e) => {\r\n                                            let aux = this.state.filterInputs;\r\n                                            aux[i] = e;\r\n                                            this.setState({filterInputs: aux});\r\n                                            this.compareTable();\r\n                                        }}>\r\n                                            {filter.map((element, index) => \r\n                                            <Dropdown.Item key={index} eventKey={element}>{element}</Dropdown.Item>)}\r\n                                        </DropdownButton></td>        \r\n                                }\r\n                            })}\r\n                            </tr>\r\n                            {actualTable.map((row, i) => this.table(row, i, titles))}\r\n                        </tbody>\r\n                    </Table>\r\n                    : null}\r\n            </>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}
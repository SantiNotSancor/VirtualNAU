{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lab2\\\\Documents\\\\GitHub\\\\VirtualNAU\\\\client\\\\src\\\\Vendor\\\\addStock.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport { ModalOpener } from '../modalOpener';\nimport { Request, TaskRequest } from '../textInputs';\nimport Axios from 'axios';\nimport Form from 'react-bootstrap/Form';\nimport moment from 'moment'; //import image from './Images/addStock.svg';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  responsable: '',\n  date: moment(new Date()).format(\"DD/MM/YYYY\"),\n  material: [] //Una lista que tendr치 objetos de la forma {id, quantity} (descripci칩n y nombre est치n guardados en una tabla)\n\n};\nexport class AsignTaskButton extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = initialState;\n  }\n\n  myForm() {\n    return /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: e => e.preventDefault(),\n      children: [/*#__PURE__*/_jsxDEV(Request, {\n        toShow: \"responsable\",\n        onChange: event => {\n          this.setState({\n            name: event\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        id: \"taskTable\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Nombre\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Descripci\\xF3n\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Cantidad\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Peso\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Metros\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            onChange: material => this.setState({\n              material\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(ModalOpener, {\n      buttonText: \"A\\xF1adir stock\",\n      handleClose: this.resetState,\n      className: 'title'\n      /*logo={image}*/\n      ,\n      title: 'A침adir stock',\n      post: this.post,\n      children: this.myForm()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport const Input = _ref => {\n  _s();\n\n  let {\n    onChange\n  } = _ref;\n  const [input, setInput] = useState({\n    id: '',\n    name: '',\n    description: '',\n    quantity: '',\n    weight: '',\n    meters: ''\n  });\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    style: {\n      'backgroundColor': 'green'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        value: input.id //ID\n        ,\n        onChange: e => {\n          let aux = { ...input\n          };\n          aux[property] = e.target.value;\n          setInput({ ...aux\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), \");\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {//Eliminar fila\n        },\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Input, \"VJzqscVe/YOKV8eDlAF5G9FhOtE=\");\n\n_c = Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["C:/Users/Lab2/Documents/GitHub/VirtualNAU/client/src/Vendor/addStock.js"],"names":["React","Component","ModalOpener","Request","TaskRequest","Axios","Form","moment","initialState","responsable","date","Date","format","material","AsignTaskButton","state","myForm","e","preventDefault","event","setState","name","render","resetState","post","Input","onChange","input","setInput","useState","id","description","quantity","weight","meters","aux","property","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { ModalOpener } from '../modalOpener';\r\nimport { Request, TaskRequest } from '../textInputs';\r\nimport Axios from 'axios';\r\nimport Form from 'react-bootstrap/Form';\r\nimport moment from 'moment';\r\n//import image from './Images/addStock.svg';\r\n\r\nconst initialState = {\r\n    responsable: '',\r\n    date: moment(new Date()).format(\"DD/MM/YYYY\"),\r\n    material: []\r\n    //Una lista que tendr치 objetos de la forma {id, quantity} (descripci칩n y nombre est치n guardados en una tabla)\r\n}\r\n\r\nexport class AsignTaskButton extends Component {\r\n    state = initialState;\r\n\r\n    myForm() {\r\n        return (\r\n            <Form onSubmit={e => e.preventDefault()}>\r\n                {/* Se har치 un formulario para que el usuario complete los datos de la materia prima; fecha actual, responsable, nombre, descripci칩n y cantidad  */}\r\n                <Request toShow=\"responsable\" onChange={(event) => {\r\n                    this.setState({ name: event });\r\n                }} />\r\n                <Table striped bordered id=\"taskTable\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Nombre</th>\r\n                            <th>Descripci칩n</th>\r\n                            <th>Cantidad</th>\r\n                            <th>Peso</th>\r\n                            <th>Metros</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <Input onChange={(material) => this.setState({ material })} />\r\n                    </tbody>\r\n                </Table>\r\n            </Form>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ModalOpener buttonText='A침adir stock' handleClose={this.resetState}\r\n                className={'title'} /*logo={image}*/ title={'A침adir stock'} post={this.post} children={this.myForm()} />\r\n        );\r\n    }\r\n}\r\n\r\nexport const Input = ({ onChange }) => {\r\n\r\n    const [input, setInput] = useState({ id: '', name: '', description: '', quantity: '', weight: '', meters: '' });\r\n\r\n\r\n    return (\r\n        <tr style={{ 'backgroundColor': 'green' }}>{/*Muestra el primero*/}\r\n            <td><FormControl value={input.id}//ID\r\n                onChange={(e) => {\r\n                    let aux = { ...input };\r\n                    aux[property] = e.target.value;\r\n                    setInput({ ...aux });}} \r\n                />);\r\n            </td>\r\n            <td></td>{/*Nombre*/}\r\n            <td></td>{/*Descripci칩n*/}\r\n            <td></td>{/*Cantidad*/}\r\n            <td></td>{/*Peso*/}\r\n            <td></td>{/*Metros*/}\r\n            <td><Button onClick={() => {\r\n                //Eliminar fila\r\n            }}>X</Button></td>\r\n        </tr>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}
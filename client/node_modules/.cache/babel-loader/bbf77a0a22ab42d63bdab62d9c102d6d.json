{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lab2\\\\Documents\\\\GitHub\\\\VirtualNAU\\\\client\\\\src\\\\WorkshopsAdm\\\\modifyData.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { ModalController, ModalPrototype } from '../modal';\nimport { Request } from '../textInputs';\nimport PropTypes from 'prop-types';\nimport Form from 'react-bootstrap/Form';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ModifyDataButton extends ModalController {\n  constructor() {\n    super(...arguments);\n    this.state = { ...this.state,\n      //Hereda los estados de ModalController (showModal: false)\n      article: false //True si y sólo si se está modificando al artículo\n\n    };\n\n    this.showModal = e => {\n      //Cuando se presione el botón se ejecuta\n      this.setState({\n        showModal: true,\n        article: e.target.value === 'true'\n      }); //article toma el valor pasado en el botón y se muestra el modal\n    };\n\n    this.callModal = () => {\n      if (this.props.article) return /*#__PURE__*/_jsxDEV(ModalArt, {\n        handleClose: this.hideModal,\n        show: this.state.showModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this);\n      return /*#__PURE__*/_jsxDEV(ModalWork, {\n        handleClose: this.hideModal,\n        show: this.state.showModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"branched\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"title\",\n        children: \"Modificar Datos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"branch\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.showModal,\n              value: 'false',\n              children: \"Taller\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.showModal,\n              value: 'true',\n              children: \"Art\\xEDculo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), this.callModal()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport const ModalArt = _ref => {\n  _s();\n\n  let {\n    handleClose,\n    show\n  } = _ref;\n  //Se encargará de los forms para modificar datos sobre artículos\n  const [id, setId] = useState('');\n  const [price, setPrice] = useState('');\n  const [description, setDescription] = useState('');\n\n  const post = () => {\n    Axios.put('http://localhost:3307/updateArticle', {\n      id,\n      description\n    });\n  };\n\n  const myForm = () => {\n    return /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Request, {\n        toShow: \"article\",\n        onChange: event => {\n          setId(event);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Request, {\n        toShow: \"price\",\n        onChange: event => {\n          setPrice(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Request, {\n        toShow: \"description\",\n        onChange: event => {\n          setDescription(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ModalPrototype, {\n    show: show,\n    handleClose: handleClose,\n    children: myForm(),\n    title: 'Modificación de artículo',\n    post: post\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this) //El modal debe mostrar el form especificado en Article\n  ;\n};\n\n_s(ModalArt, \"3eKn0r14hb8SC+BYk+GbZkoEQ/8=\");\n\n_c = ModalArt;\nModalArt.propTypes = {\n  handleClose: PropTypes.func.isRequired,\n  //Función que cierra el modal\n  show: PropTypes.bool.isRequired //True si y sólo si se debe o no ver el modal\n\n};\nexport const ModalWork = _ref2 => {\n  _s2();\n\n  let {\n    handleClose,\n    show\n  } = _ref2;\n  //Se encargará de los forms para dar de alta/baja a los talleres\n  const [name, setName] = useState('');\n  const [contact, setContact] = useState('');\n\n  const post = () => {\n    Axios.post('http://localhost:3307/create', {\n      name,\n      contact\n    });\n  };\n\n  const myForm = () => {\n    return /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Request, {\n        toShow: \"name\",\n        onChange: element => {\n          setName(element);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Datos de contacto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          height: \"500px\",\n          placeholder: \"Ingrese datos de contacto del tallerista\\u2026\",\n          onChange: event => {\n            setContact(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ModalPrototype, {\n    show: show,\n    handleClose: handleClose,\n    children: myForm(),\n    title: 'Modificación de taller',\n    post: post\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(ModalWork, \"HhwiK1o0SpuFpY6reDMUNdBW26w=\");\n\n_c2 = ModalWork;\nModalWork.propTypes = ModalArt.propTypes;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ModalArt\");\n$RefreshReg$(_c2, \"ModalWork\");","map":{"version":3,"sources":["C:/Users/Lab2/Documents/GitHub/VirtualNAU/client/src/WorkshopsAdm/modifyData.js"],"names":["React","useState","ModalController","ModalPrototype","Request","PropTypes","Form","Axios","ModifyDataButton","state","article","showModal","e","setState","target","value","callModal","props","hideModal","render","ModalArt","handleClose","show","id","setId","price","setPrice","description","setDescription","post","put","myForm","event","propTypes","func","isRequired","bool","ModalWork","name","setName","contact","setContact","element"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,eAAT,EAA0BC,cAA1B,QAAgD,UAAhD;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,OAAO,MAAMC,gBAAN,SAA+BN,eAA/B,CAA+C;AAAA;AAAA;AAAA,SAElDO,KAFkD,GAE1C,EACJ,GAAG,KAAKA,KADJ;AACU;AACdC,MAAAA,OAAO,EAAE,KAFL,CAEU;;AAFV,KAF0C;;AAAA,SAOlDC,SAPkD,GAOtCC,CAAC,IAAI;AAAC;AACd,WAAKC,QAAL,CAAc;AAAEF,QAAAA,SAAS,EAAE,IAAb;AAAmBD,QAAAA,OAAO,EAAEE,CAAC,CAACE,MAAF,CAASC,KAAT,KAAmB;AAA/C,OAAd,EADa,CAEb;AACH,KAViD;;AAAA,SAYlDC,SAZkD,GAYtC,MAAM;AACd,UAAI,KAAKC,KAAL,CAAWP,OAAf,EACI,oBACI,QAAC,QAAD;AAAU,QAAA,WAAW,EAAE,KAAKQ,SAA5B;AAAuC,QAAA,IAAI,EAAE,KAAKT,KAAL,CAAWE;AAAxD;AAAA;AAAA;AAAA;AAAA,cADJ;AAGJ,0BACI,QAAC,SAAD;AAAW,QAAA,WAAW,EAAE,KAAKO,SAA7B;AAAwC,QAAA,IAAI,EAAE,KAAKT,KAAL,CAAWE;AAAzD;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KApBiD;AAAA;;AAsBlDQ,EAAAA,MAAM,GAAG;AACL,wBACI;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAA,+BACI;AAAI,UAAA,SAAS,EAAC,QAAd;AAAA,kCACI;AAAA,mCACI;AAAQ,cAAA,OAAO,EAAE,KAAKR,SAAtB;AAAiC,cAAA,KAAK,EAAE,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAMI;AAAA,mCACI;AAAQ,cAAA,OAAO,EAAE,KAAKA,SAAtB;AAAiC,cAAA,KAAK,EAAE,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ,EAkBK,KAAKK,SAAL,EAlBL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAsBH;;AA7CiD;AAgDtD,OAAO,MAAMI,QAAQ,GAAG,QAA2B;AAAA;;AAAA,MAA1B;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,GAA0B;AAAC;AAChD,QAAM,CAACC,EAAD,EAAKC,KAAL,IAAcvB,QAAQ,CAAC,EAAD,CAA5B;AACA,QAAM,CAACwB,KAAD,EAAQC,QAAR,IAAoBzB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAC0B,WAAD,EAAcC,cAAd,IAAgC3B,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAM4B,IAAI,GAAG,MAAM;AACftB,IAAAA,KAAK,CAACuB,GAAN,CAAU,qCAAV,EAAiD;AAAEP,MAAAA,EAAF;AAAMI,MAAAA;AAAN,KAAjD;AACH,GAFD;;AAIA,QAAMI,MAAM,GAAG,MAAM;AACjB,wBACI,QAAC,IAAD;AAAA,8BACI,QAAC,OAAD;AAAS,QAAA,MAAM,EAAC,SAAhB;AAA0B,QAAA,QAAQ,EAAGC,KAAD,IAAW;AAC3CR,UAAAA,KAAK,CAACQ,KAAD,CAAL;AACH;AAFD;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,OAAD;AAAS,QAAA,MAAM,EAAC,OAAhB;AAAwB,QAAA,QAAQ,EAAGA,KAAD,IAAW;AACzCN,UAAAA,QAAQ,CAACM,KAAK,CAAClB,MAAN,CAAaC,KAAd,CAAR;AACH;AAFD;AAAA;AAAA;AAAA;AAAA,cALJ,eASI,QAAC,OAAD;AAAS,QAAA,MAAM,EAAC,aAAhB;AAA8B,QAAA,QAAQ,EAAGiB,KAAD,IAAW;AAC/CJ,UAAAA,cAAc,CAACI,KAAK,CAAClB,MAAN,CAAaC,KAAd,CAAd;AACH;AAFD;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAeH,GAhBD;;AAkBA,sBACI,QAAC,cAAD;AAAgB,IAAA,IAAI,EAAEO,IAAtB;AAA4B,IAAA,WAAW,EAAED,WAAzC;AAAsD,IAAA,QAAQ,EAAEU,MAAM,EAAtE;AACI,IAAA,KAAK,EAAE,0BADX;AACuC,IAAA,IAAI,EAAEF;AAD7C;AAAA;AAAA;AAAA;AAAA,UADJ,CAEyD;AAFzD;AAKH,CAhCM;;GAAMT,Q;;KAAAA,Q;AAkCbA,QAAQ,CAACa,SAAT,GAAqB;AACjBZ,EAAAA,WAAW,EAAEhB,SAAS,CAAC6B,IAAV,CAAeC,UADX;AACuB;AACxCb,EAAAA,IAAI,EAAEjB,SAAS,CAAC+B,IAAV,CAAeD,UAFJ,CAEgB;;AAFhB,CAArB;AAKA,OAAO,MAAME,SAAS,GAAG,SAA2B;AAAA;;AAAA,MAA1B;AAAEhB,IAAAA,WAAF;AAAeC,IAAAA;AAAf,GAA0B;AAAC;AACjD,QAAM,CAACgB,IAAD,EAAOC,OAAP,IAAkBtC,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACuC,OAAD,EAAUC,UAAV,IAAwBxC,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAM4B,IAAI,GAAG,MAAM;AACftB,IAAAA,KAAK,CAACsB,IAAN,CAAW,8BAAX,EACI;AAAES,MAAAA,IAAF;AAAQE,MAAAA;AAAR,KADJ;AAEH,GAHD;;AAKA,QAAMT,MAAM,GAAG,MAAM;AACjB,wBACI,QAAC,IAAD;AAAA,8BACI,QAAC,OAAD;AAAS,QAAA,MAAM,EAAC,MAAhB;AAAuB,QAAA,QAAQ,EAAGW,OAAD,IAAa;AAC1CH,UAAAA,OAAO,CAACG,OAAD,CAAP;AACH;AAFD;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,MAAtB;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,EAAE,EAAC,UAAjB;AAA4B,UAAA,MAAM,EAAC,OAAnC;AACI,UAAA,WAAW,EAAC,gDADhB;AAC4D,UAAA,QAAQ,EAAGV,KAAD,IAAW;AACzES,YAAAA,UAAU,CAACT,KAAK,CAAClB,MAAN,CAAaC,KAAd,CAAV;AACH;AAHL;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAeH,GAhBD;;AAkBA,sBACI,QAAC,cAAD;AAAgB,IAAA,IAAI,EAAEO,IAAtB;AAA4B,IAAA,WAAW,EAAED,WAAzC;AAAsD,IAAA,QAAQ,EAAEU,MAAM,EAAtE;AACI,IAAA,KAAK,EAAE,wBADX;AACqC,IAAA,IAAI,EAAEF;AAD3C;AAAA;AAAA;AAAA;AAAA,UADJ;AAIH,CA/BM;;IAAMQ,S;;MAAAA,S;AAiCbA,SAAS,CAACJ,SAAV,GAAsBb,QAAQ,CAACa,SAA/B","sourcesContent":["import React, { useState } from 'react';\r\nimport { ModalController, ModalPrototype } from '../modal';\r\nimport { Request } from '../textInputs';\r\nimport PropTypes from 'prop-types';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Axios from 'axios';\r\n\r\nexport class ModifyDataButton extends ModalController {\r\n\r\n    state = {\r\n        ...this.state,//Hereda los estados de ModalController (showModal: false)\r\n        article: false//True si y sólo si se está modificando al artículo\r\n    }\r\n\r\n    showModal = e => {//Cuando se presione el botón se ejecuta\r\n        this.setState({ showModal: true, article: e.target.value === 'true' })\r\n        //article toma el valor pasado en el botón y se muestra el modal\r\n    }\r\n\r\n    callModal = () => {\r\n        if (this.props.article)\r\n            return (\r\n                <ModalArt handleClose={this.hideModal} show={this.state.showModal} />\r\n            );\r\n        return (\r\n            <ModalWork handleClose={this.hideModal} show={this.state.showModal} />\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ul className='branched'>\r\n                <li className='title'>\r\n                    Modificar Datos\r\n                </li>\r\n                <li>\r\n                    <ul className='branch'>\r\n                        <li>\r\n                            <button onClick={this.showModal} value={'false'}>\r\n                                Taller\r\n                            </button>\r\n                        </li>\r\n                        <li>\r\n                            <button onClick={this.showModal} value={'true'}>\r\n                                Artículo\r\n                            </button>\r\n                        </li>\r\n                    </ul>\r\n                </li>\r\n                {this.callModal()}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport const ModalArt = ({ handleClose, show }) => {//Se encargará de los forms para modificar datos sobre artículos\r\n    const [id, setId] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n    const post = () => {\r\n        Axios.put('http://localhost:3307/updateArticle', { id, description });\r\n    }\r\n\r\n    const myForm = () => {\r\n        return (\r\n            <Form>\r\n                <Request toShow=\"article\" onChange={(event) => {\r\n                    setId(event);\r\n                }} />\r\n\r\n                <Request toShow=\"price\" onChange={(event) => {\r\n                    setPrice(event.target.value);\r\n                }} />\r\n\r\n                <Request toShow=\"description\" onChange={(event) => {\r\n                    setDescription(event.target.value);\r\n                }} />\r\n            </Form>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <ModalPrototype show={show} handleClose={handleClose} children={myForm()}\r\n            title={'Modificación de artículo'} post={post} />//El modal debe mostrar el form especificado en Article\r\n    );\r\n\r\n}\r\n\r\nModalArt.propTypes = {\r\n    handleClose: PropTypes.func.isRequired, //Función que cierra el modal\r\n    show: PropTypes.bool.isRequired, //True si y sólo si se debe o no ver el modal\r\n}\r\n\r\nexport const ModalWork = ({ handleClose, show }) => {//Se encargará de los forms para dar de alta/baja a los talleres\r\n    const [name, setName] = useState('');\r\n    const [contact, setContact] = useState('');\r\n\r\n    const post = () => {\r\n        Axios.post('http://localhost:3307/create',\r\n            { name, contact });\r\n    }\r\n\r\n    const myForm = () => {\r\n        return (\r\n            <Form>\r\n                <Request toShow=\"name\" onChange={(element) => {\r\n                    setName(element);\r\n                }} />\r\n\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Label>Datos de contacto</Form.Label>\r\n                    <Form.Control as=\"textarea\" height=\"500px\"\r\n                        placeholder=\"Ingrese datos de contacto del tallerista…\" onChange={(event) => {\r\n                            setContact(event.target.value);\r\n                        }} />\r\n                </Form.Group>\r\n            </Form>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <ModalPrototype show={show} handleClose={handleClose} children={myForm()}\r\n            title={'Modificación de taller'} post={post} />\r\n    );\r\n}\r\n\r\nModalWork.propTypes = ModalArt.propTypes;"]},"metadata":{},"sourceType":"module"}
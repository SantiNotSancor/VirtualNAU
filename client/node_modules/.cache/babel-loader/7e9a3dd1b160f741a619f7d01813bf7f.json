{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\OneDrive\\\\Escritorio\\\\fabrica\\\\client\\\\src\\\\textInput.js\";\nimport PropTypes from 'prop-types';\nimport Form from 'react-bootstrap/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Request = _ref => {\n  let {\n    onChange,\n    toShow,\n    label\n  } = _ref;\n  //Pedirá un dato con un input tipo text\n  let placeholder;\n  if (!label) switch (toShow) {\n    case 'name':\n      label = 'Nombre del taller';\n      placeholder = 'Ingrese el nombre del/la tallerista';\n      break;\n\n    case 'article':\n      label = 'Número de artículo';\n      placeholder = 'Ingrese el código único del artículo';\n      break;\n\n    case 'quantityArticle':\n      label = 'Cantidad de artículos';\n      placeholder = 'Ingrese la cantidad de artículos';\n\n    default:\n      console.log(\"ERROR, HA INGRESADO EL toShow \" + toShow + \" EN EL COMPONENTE TEXTINPUT\");\n      throw SyntaxError;\n  }\n  placeholder += '…';\n  return /*#__PURE__*/_jsxDEV(Form.Group, {\n    className: \"mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"text\",\n      placeholder: placeholder,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_c = Request;\nNameRequest.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  //Función a ejecutar cuando se modifica el input\n  toShow: PropTypes.string.isRequired,\n  //'name' para talleres, 'article' para artículos\n  label: PropTypes.string\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Request\");","map":{"version":3,"sources":["C:/Users/PC/OneDrive/Escritorio/fabrica/client/src/textInput.js"],"names":["PropTypes","Form","Request","onChange","toShow","label","placeholder","console","log","SyntaxError","NameRequest","propTypes","func","isRequired","string"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;;AAEA,OAAO,MAAMC,OAAO,GAAG,QAAiC;AAAA,MAAhC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,MAAZ;AAAoBC,IAAAA;AAApB,GAAgC;AAAC;AAErD,MAAIC,WAAJ;AAEA,MAAI,CAACD,KAAL,EACI,QAAQD,MAAR;AACI,SAAK,MAAL;AACIC,MAAAA,KAAK,GAAG,mBAAR;AACAC,MAAAA,WAAW,GAAG,qCAAd;AACA;;AACJ,SAAK,SAAL;AACID,MAAAA,KAAK,GAAG,oBAAR;AACAC,MAAAA,WAAW,GAAG,sCAAd;AACA;;AACJ,SAAK,iBAAL;AACID,MAAAA,KAAK,GAAG,uBAAR;AACAC,MAAAA,WAAW,GAAG,kCAAd;;AACJ;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAY,mCAAmCJ,MAAnC,GAA4C,6BAAxD;AACA,YAAMK,WAAN;AAdR;AAiBJH,EAAAA,WAAW,IAAI,GAAf;AACA,sBACI,QAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,MAAtB;AAAA,4BACI,QAAC,IAAD,CAAM,KAAN;AAAA,gBAAaD;AAAb;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,MAAA,IAAI,EAAC,MAAnB;AAA0B,MAAA,WAAW,EAAEC,WAAvC;AAAoD,MAAA,QAAQ,EAAEH;AAA9D;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CA7BM;KAAMD,O;AA8BbQ,WAAW,CAACC,SAAZ,GAAwB;AACpBR,EAAAA,QAAQ,EAAEH,SAAS,CAACY,IAAV,CAAeC,UADL;AACiB;AACrCT,EAAAA,MAAM,EAAEJ,SAAS,CAACc,MAAV,CAAiBD,UAFL;AAEiB;AACrCR,EAAAA,KAAK,EAAEL,SAAS,CAACc;AAHG,CAAxB","sourcesContent":["import PropTypes from 'prop-types';\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport const Request = ({ onChange, toShow, label }) => {//Pedirá un dato con un input tipo text\r\n\r\n    let placeholder;\r\n\r\n    if (!label)\r\n        switch (toShow) {\r\n            case 'name':\r\n                label = 'Nombre del taller';\r\n                placeholder = 'Ingrese el nombre del/la tallerista';\r\n                break;\r\n            case 'article':\r\n                label = 'Número de artículo';\r\n                placeholder = 'Ingrese el código único del artículo';\r\n                break;\r\n            case 'quantityArticle':\r\n                label = 'Cantidad de artículos';\r\n                placeholder = 'Ingrese la cantidad de artículos';\r\n            default:\r\n                console.log(\"ERROR, HA INGRESADO EL toShow \" + toShow + \" EN EL COMPONENTE TEXTINPUT\");\r\n                throw SyntaxError;\r\n        }\r\n\r\n    placeholder += '…';\r\n    return (\r\n        <Form.Group className=\"mb-3\">\r\n            <Form.Label>{label}</Form.Label>\r\n            <Form.Control type=\"text\" placeholder={placeholder} onChange={onChange} />\r\n        </Form.Group>\r\n    );\r\n}\r\nNameRequest.propTypes = {\r\n    onChange: PropTypes.func.isRequired, //Función a ejecutar cuando se modifica el input\r\n    toShow: PropTypes.string.isRequired, //'name' para talleres, 'article' para artículos\r\n    label: PropTypes.string\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
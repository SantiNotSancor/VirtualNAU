{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\PC\\\\VirtualNAU\\\\client\\\\src\\\\Menu\\\\RegistrationDrop\\\\registrationDrop.js\";\nimport React from 'react';\nimport { ModalArt, ModalWork } from './modals';\nimport { ModalController } from '../../modal';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ArtWorkButton extends ModalController {\n  constructor() {\n    super(...arguments);\n    this.state = { ...this.state,\n      //Hereda los estados de ModalController (showModal: false)\n      registration: false //True si y sólo si se está dando el alta al artículo\n\n    };\n\n    this.showModal = e => {\n      //Cuando se presione el botón se ejecuta\n      this.setState({\n        showModal: true,\n        registration: e.target.value === 'true'\n      }); //registration toma el valor pasado en el botón y se muestra el modal\n    };\n\n    this.callModal = () => {\n      if (this.props.article) return /*#__PURE__*/_jsxDEV(ModalArt, {\n        handleClose: this.hideModal,\n        show: this.state.showModal,\n        registration: this.state.registration\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this);\n      return /*#__PURE__*/_jsxDEV(ModalWork, {\n        handleClose: this.hideModal,\n        show: this.state.showModal,\n        registration: this.state.registration\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"branched\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"title\",\n        children: this.props.article ? 'Artículo' : 'Taller'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"branch\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.showModal,\n              value: 'true',\n              children: \"Alta\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.showModal,\n              value: 'false',\n              children: \"Baja\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), this.callModal()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nArtWorkButton.propTypes = {\n  article: PropTypes.bool.isRequired //Especifica si se debe hacer un botón sobre artículos o talleres\n\n};","map":{"version":3,"sources":["D:/Users/PC/VirtualNAU/client/src/Menu/RegistrationDrop/registrationDrop.js"],"names":["React","ModalArt","ModalWork","ModalController","PropTypes","ArtWorkButton","state","registration","showModal","e","setState","target","value","callModal","props","article","hideModal","render","propTypes","bool","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,UAApC;AACA,SAASC,eAAT,QAAgC,aAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,OAAO,MAAMC,aAAN,SAA4BF,eAA5B,CAA4C;AAAA;AAAA;AAAA,SAE/CG,KAF+C,GAEvC,EACJ,GAAG,KAAKA,KADJ;AACU;AACdC,MAAAA,YAAY,EAAE,KAFV,CAEe;;AAFf,KAFuC;;AAAA,SAO/CC,SAP+C,GAOnCC,CAAC,IAAI;AAAC;AACd,WAAKC,QAAL,CAAc;AAAEF,QAAAA,SAAS,EAAE,IAAb;AAAmBD,QAAAA,YAAY,EAAEE,CAAC,CAACE,MAAF,CAASC,KAAT,KAAmB;AAApD,OAAd,EADa,CAEb;AACH,KAV8C;;AAAA,SAY/CC,SAZ+C,GAYnC,MAAM;AACd,UAAI,KAAKC,KAAL,CAAWC,OAAf,EACI,oBACI,QAAC,QAAD;AAAU,QAAA,WAAW,EAAE,KAAKC,SAA5B;AAAuC,QAAA,IAAI,EAAE,KAAKV,KAAL,CAAWE,SAAxD;AAAmE,QAAA,YAAY,EAAE,KAAKF,KAAL,CAAWC;AAA5F;AAAA;AAAA;AAAA;AAAA,cADJ;AAGJ,0BACI,QAAC,SAAD;AAAW,QAAA,WAAW,EAAE,KAAKS,SAA7B;AAAwC,QAAA,IAAI,EAAE,KAAKV,KAAL,CAAWE,SAAzD;AAAoE,QAAA,YAAY,EAAE,KAAKF,KAAL,CAAWC;AAA7F;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KApB8C;AAAA;;AAsB/CU,EAAAA,MAAM,GAAG;AACL,wBACI;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA,kBACK,KAAKH,KAAL,CAAWC,OAAX,GAAqB,UAArB,GAAkC;AADvC;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAA,+BACI;AAAI,UAAA,SAAS,EAAC,QAAd;AAAA,kCACI;AAAA,mCACI;AAAQ,cAAA,OAAO,EAAE,KAAKP,SAAtB;AAAiC,cAAA,KAAK,EAAE,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAMI;AAAA,mCACI;AAAQ,cAAA,OAAO,EAAE,KAAKA,SAAtB;AAAiC,cAAA,KAAK,EAAE,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ,EAkBK,KAAKK,SAAL,EAlBL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAuBH;;AA9C8C;AAiDnDR,aAAa,CAACa,SAAd,GAA0B;AACtBH,EAAAA,OAAO,EAAEX,SAAS,CAACe,IAAV,CAAeC,UADF,CACa;;AADb,CAA1B","sourcesContent":["import React from 'react';\r\nimport { ModalArt, ModalWork } from './modals';\r\nimport { ModalController } from '../../modal';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class ArtWorkButton extends ModalController {\r\n\r\n    state = {\r\n        ...this.state,//Hereda los estados de ModalController (showModal: false)\r\n        registration: false//True si y sólo si se está dando el alta al artículo\r\n    }\r\n\r\n    showModal = e => {//Cuando se presione el botón se ejecuta\r\n        this.setState({ showModal: true, registration: e.target.value === 'true' })\r\n        //registration toma el valor pasado en el botón y se muestra el modal\r\n    }\r\n\r\n    callModal = () => {\r\n        if (this.props.article)\r\n            return (\r\n                <ModalArt handleClose={this.hideModal} show={this.state.showModal} registration={this.state.registration}/>\r\n            );\r\n        return (\r\n            <ModalWork handleClose={this.hideModal} show={this.state.showModal} registration={this.state.registration}/>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ul className='branched'>\r\n                <li className='title'>\r\n                    {this.props.article ? 'Artículo' : 'Taller'}\r\n                </li>\r\n                <li>\r\n                    <ul className='branch'>\r\n                        <li>\r\n                            <button onClick={this.showModal} value={'true'}>\r\n                                Alta\r\n                            </button>\r\n                        </li>\r\n                        <li>\r\n                            <button onClick={this.showModal} value={'false'}>\r\n                                Baja\r\n                            </button>\r\n                        </li>\r\n                    </ul>\r\n                </li>\r\n                {this.callModal()}\r\n                {/*Llama al Modal encargado de los Artículos*/}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nArtWorkButton.propTypes = {\r\n    article: PropTypes.bool.isRequired //Especifica si se debe hacer un botón sobre artículos o talleres\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\OneDrive\\\\Escritorio\\\\fabrica\\\\client\\\\src\\\\textInputs.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Popover from 'react-bootstrap/Popover';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Button from 'react-bootstrap/Button';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Request = _ref => {\n  let {\n    onChange,\n    toShow,\n    label,\n    reg\n  } = _ref;\n  //Pedirá un dato con un input tipo text\n  let placeholder,\n      auxStorage = label;\n\n  switch (toShow) {\n    case 'name':\n      label = 'Nombre del taller';\n      placeholder = 'Ingrese el nombre del/la tallerista';\n      break;\n\n    case 'article':\n      label = 'Número de artículo';\n      placeholder = 'Ingrese el código único del artículo';\n      break;\n\n    case 'quantityArticle':\n      label = 'Cantidad asignada';\n      placeholder = 'Ingrese la cantidad de artículos';\n      break;\n\n    case 'task':\n      label = 'Número de tarea';\n      placeholder = 'Ingrese el número de tarea';\n      break;\n\n    case 'money':\n      label = 'Monto';\n      placeholder = 'Ingrese el monto a pagar';\n      break;\n\n    case 'price':\n      label = 'Precio';\n      placeholder = 'Ingrese el precio por unidad';\n      break;\n\n    case 'description':\n      label = 'Descripción';\n      placeholder = 'Ingrese una breve descripción del artículo';\n      break;\n\n    default:\n      console.log(\"ERROR, HA INGRESADO EL toShow \" + toShow + \" EN EL COMPONENTE TEXTINPUT\");\n  }\n\n  label = auxStorage ? auxStorage : label;\n  placeholder += '…';\n  return toShow === 'name' && !reg ? /*#__PURE__*/_jsxDEV(NameRequest, {\n    label: label,\n    placeholder: placeholder\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 43\n  }, this) : /*#__PURE__*/_jsxDEV(Form.Group, {\n    className: \"mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n      children: [toShow === 'money' ? /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n        children: \"$\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 41\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(FormControl, {\n        type: \"text\",\n        placeholder: placeholder,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), toShow === 'money' ? /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n        children: \".00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 41\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_c = Request;\nRequest.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  //Función a ejecutar cuando se modifica el input\n  toShow: PropTypes.string.isRequired,\n  reg: PropTypes.bool,\n  //True si se está dando de alta\n  label: PropTypes.string\n};\nexport const NameRequest = _ref2 => {\n  let {\n    label,\n    placeholder\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(Form.Group, {\n    className: \"mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n      children: /*#__PURE__*/_jsxDEV(DropdownWithFilter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n_c2 = NameRequest;\nNameRequest.propTypes = {\n  label: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired\n};\n\nconst DropdownWithFilter = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [list, setList] = useState([]);\n  const target = useRef(null);\n  useEffect(() => {\n    console.log(\"3\");\n    Axios.get('http://localhost:3001/dropdownNames').then(response => {\n      setList(response.data);\n    });\n  }, []);\n\n  const CustomMenu = /*#__PURE__*/_s( /*#__PURE__*/React.forwardRef(_s((_ref3, ref) => {\n    _s();\n\n    let {\n      children\n    } = _ref3;\n    console.log(\"2\");\n    const [value, setValue] = useState('');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        ref: target,\n        defaultValue: value,\n        onChange: e => {\n          setValue(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: React.Children.toArray(children).filter(child => !value || child.props.children.toLowerCase().startsWith(value.toLowerCase()))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }, this);\n  }, \"A2PXPeq8TepW328gUMM4+o8Xryo=\")), \"A2PXPeq8TepW328gUMM4+o8Xryo=\");\n\n  const popover = /*#__PURE__*/_jsxDEV(Popover, {\n    children: [console.log(\"0\"), /*#__PURE__*/_jsxDEV(Dropdown, {\n      children: /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n        as: CustomMenu,\n        children: list.map((element, key) => {\n          return /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            children: element.name\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n    trigger: \"click\",\n    placement: \"right\",\n    overlay: popover,\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      children: \"Press ME\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(DropdownWithFilter, \"nla5+ugeL7OYaih1LoC0YTB9130=\");\n\n_c3 = DropdownWithFilter;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Request\");\n$RefreshReg$(_c2, \"NameRequest\");\n$RefreshReg$(_c3, \"DropdownWithFilter\");","map":{"version":3,"sources":["C:/Users/PC/OneDrive/Escritorio/fabrica/client/src/textInputs.js"],"names":["React","useState","useEffect","useRef","PropTypes","Form","InputGroup","FormControl","Popover","OverlayTrigger","Button","Dropdown","Axios","Request","onChange","toShow","label","reg","placeholder","auxStorage","console","log","propTypes","func","isRequired","string","bool","NameRequest","DropdownWithFilter","list","setList","target","get","then","response","data","CustomMenu","forwardRef","ref","children","value","setValue","e","Children","toArray","filter","child","props","toLowerCase","startsWith","popover","map","element","key","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Form from 'react-bootstrap/Form';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Popover from 'react-bootstrap/Popover';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Axios from 'axios';\r\n\r\nexport const Request = ({ onChange, toShow, label, reg }) => {//Pedirá un dato con un input tipo text\r\n\r\n    let placeholder, auxStorage = label;\r\n\r\n    switch (toShow) {\r\n        case 'name':\r\n            label = 'Nombre del taller';\r\n            placeholder = 'Ingrese el nombre del/la tallerista';\r\n            break;\r\n        case 'article':\r\n            label = 'Número de artículo';\r\n            placeholder = 'Ingrese el código único del artículo';\r\n            break;\r\n        case 'quantityArticle':\r\n            label = 'Cantidad asignada';\r\n            placeholder = 'Ingrese la cantidad de artículos';\r\n            break;\r\n        case 'task':\r\n            label = 'Número de tarea';\r\n            placeholder = 'Ingrese el número de tarea';\r\n            break;\r\n        case 'money':\r\n            label = 'Monto';\r\n            placeholder = 'Ingrese el monto a pagar';\r\n            break;\r\n        case 'price':\r\n            label = 'Precio';\r\n            placeholder = 'Ingrese el precio por unidad';\r\n            break;\r\n        case 'description':\r\n            label = 'Descripción';\r\n            placeholder = 'Ingrese una breve descripción del artículo';\r\n            break;\r\n        default:\r\n            console.log(\"ERROR, HA INGRESADO EL toShow \" + toShow + \" EN EL COMPONENTE TEXTINPUT\");\r\n    }\r\n    label = (auxStorage) ? auxStorage : label;\r\n    placeholder += '…';\r\n    return ((toShow === 'name' && !reg) ? <NameRequest label={label} placeholder={placeholder} /> :\r\n        <Form.Group className=\"mb-3\">\r\n            <Form.Label>{label}</Form.Label>\r\n            <InputGroup>\r\n                {(toShow === 'money') ? <InputGroup.Text>$</InputGroup.Text> : <></>}\r\n                <FormControl type=\"text\" placeholder={placeholder} onChange={onChange} />\r\n                {(toShow === 'money') ? <InputGroup.Text>.00</InputGroup.Text> : <></>}\r\n            </InputGroup>\r\n        </Form.Group>\r\n    );\r\n}\r\nRequest.propTypes = {\r\n    onChange: PropTypes.func.isRequired, //Función a ejecutar cuando se modifica el input\r\n    toShow: PropTypes.string.isRequired,\r\n    reg: PropTypes.bool,//True si se está dando de alta\r\n    label: PropTypes.string\r\n}\r\n\r\nexport const NameRequest = ({ label, placeholder }) => {\r\n\r\n\r\n    return (\r\n        <Form.Group className=\"mb-3\">\r\n            <Form.Label>{label}</Form.Label>\r\n            <InputGroup>\r\n                <DropdownWithFilter />\r\n            </InputGroup>\r\n        </Form.Group>\r\n    );\r\n}\r\nNameRequest.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired\r\n}\r\n\r\n\r\nconst DropdownWithFilter = () => {\r\n    const [list, setList] = useState([]);\r\n    const target = useRef(null);\r\n\r\n    useEffect(() => {\r\n        console.log(\"3\");\r\n        Axios.get('http://localhost:3001/dropdownNames').then((response) => {\r\n            setList(response.data);\r\n        });\r\n    }, []);\r\n\r\n    const CustomMenu = React.forwardRef(\r\n        ({ children }, ref) => {\r\n            console.log(\"2\");\r\n            const [value, setValue] = useState('');\r\n            return (\r\n                <div>\r\n                    <FormControl ref={target}\r\n                        defaultValue = {value}\r\n                        onChange={(e) => {\r\n                            setValue(e.target.value);\r\n                        }}\r\n                    />\r\n                    <ul>\r\n                        {React.Children.toArray(children).filter(\r\n                            (child) =>\r\n                                !value || child.props.children.toLowerCase().startsWith(value.toLowerCase()),\r\n                        )}\r\n                    </ul>\r\n                </div>\r\n            );\r\n        },\r\n    );\r\n\r\n    const popover = (\r\n        <Popover>\r\n            {console.log(\"0\")}\r\n            <Dropdown>\r\n                <Dropdown.Menu as={CustomMenu}>\r\n                    {list.map((element, key) => {\r\n                        return (\r\n                            <Dropdown.Item key={key}>{element.name}</Dropdown.Item>\r\n                        );\r\n                    })}\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n        </Popover>\r\n    );\r\n\r\n    return (\r\n        <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popover}>\r\n            <Button>Press ME</Button>\r\n        </OverlayTrigger>\r\n    );\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
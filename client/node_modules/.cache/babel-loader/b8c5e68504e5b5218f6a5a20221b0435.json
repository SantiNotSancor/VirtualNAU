{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\OneDrive\\\\Escritorio\\\\fabrica\\\\client\\\\src\\\\Menu\\\\RegistrationDrop\\\\modals.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Article } from './articleRegDrop';\nimport { Workshop } from './workshopRegDrop';\nimport { ModalPrototype } from '../../modal';\nimport PropTypes from 'prop-types';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ModalArt = _ref => {\n  _s();\n\n  let {\n    handleClose,\n    show,\n    registration\n  } = _ref;\n  //Se encargará de los forms para dar de alta/baja a los artículos\n  const [id, setId] = useState('');\n  const [price, setPrice] = useState('');\n  const [description, setDescription] = useState('');\n  const [article, setArticle] = useState('');\n\n  const post = () => {\n    if (registration) Axios.post('http://localhost:3001/create', {\n      id,\n      price,\n      description\n    });else Axios.post('http://localhost:3001/create', {\n      article\n    });\n  };\n\n  const MyForm = () => {\n    if (registration) {\n      //de ser true, se está dando el alta, de lo contrario, la baja\n      return /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"N\\xFAmero de Art\\xEDculo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Ingrese el n\\xFAmero \\xFAnico\\u2026\",\n            onChange: event => {\n              setId(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Precio por unidad\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Ingrese el precio\\u2026\",\n            onChange: event => {\n              setPrice(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Descripci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Ingrese una descripci\\xF3n del art\\xEDculo\\u2026\",\n            onChange: event => {\n              setDescription(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this);\n    } else return /*#__PURE__*/_jsxDEV(Form, {\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"N\\xFAmero de art\\xEDculo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Ingrese el c\\xF3digo del art\\xEDculo\\u2026\",\n          onChange: event => {\n            setArticle(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ModalPrototype, {\n    show: show,\n    handleClose: handleClose,\n    children: MyForm,\n    title: registration ? 'Alta' : 'Baja' + 'de artículo',\n    post: post\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this) //El modal debe mostrar el form especificado en Article\n  ;\n};\n\n_s(ModalArt, \"7Lr/L1/HgHYmdhE1rFJXX8Nub0Y=\");\n\n_c = ModalArt;\nModalArt.propTypes = {\n  handleClose: PropTypes.func.isRequired,\n  //Función que cierra el modal\n  show: PropTypes.bool.isRequired,\n  //True si y sólo si se debe o no ver el modal\n  registration: PropTypes.bool.isRequired //True si y sólo si se da un alta\n\n};\nexport const ModalWork = _ref2 => {\n  _s2();\n\n  let {\n    handleClose,\n    show,\n    registration,\n    post\n  } = _ref2;\n  //Se encargará de los forms para dar de alta/baja a los talleres\n  const [name, setName] = useState('');\n  const [contact, setContact] = useState('');\n  return /*#__PURE__*/_jsxDEV(ModalPrototype, {\n    show: show,\n    handleClose: handleClose,\n    children: /*#__PURE__*/_jsxDEV(Workshop, {\n      registration: registration\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 73\n    }, this),\n    title: registration ? 'Alta' : 'Baja' + 'de taller',\n    post: post\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this) //El modal debe mostrar el form especificado en Workshop\n  ;\n};\n\n_s2(ModalWork, \"HhwiK1o0SpuFpY6reDMUNdBW26w=\");\n\n_c2 = ModalWork;\nModalWork.propTypes = ModalArt.propTypes;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ModalArt\");\n$RefreshReg$(_c2, \"ModalWork\");","map":{"version":3,"sources":["C:/Users/PC/OneDrive/Escritorio/fabrica/client/src/Menu/RegistrationDrop/modals.js"],"names":["React","useState","Article","Workshop","ModalPrototype","PropTypes","Form","Button","Axios","ModalArt","handleClose","show","registration","id","setId","price","setPrice","description","setDescription","article","setArticle","post","MyForm","event","target","value","propTypes","func","isRequired","bool","ModalWork","name","setName","contact","setContact"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Article } from './articleRegDrop';\r\nimport { Workshop } from './workshopRegDrop';\r\nimport { ModalPrototype } from '../../modal'\r\nimport PropTypes from 'prop-types';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Axios from 'axios';\r\n\r\nexport const ModalArt = ({ handleClose, show, registration }) => {//Se encargará de los forms para dar de alta/baja a los artículos\r\n\r\n    const [id, setId] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [article, setArticle] = useState('');\r\n    \r\n    const post = () => {\r\n        if(registration)\r\n            Axios.post('http://localhost:3001/create',\r\n                {id, price, description});\r\n        else\r\n            Axios.post('http://localhost:3001/create',\r\n                    {article});\r\n    }\r\n\r\n    const MyForm = () =>{\r\n        if (registration) {//de ser true, se está dando el alta, de lo contrario, la baja\r\n            return (\r\n                <Form>\r\n                    <Form.Group className=\"mb-3\">\r\n                        <Form.Label>Número de Artículo</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Ingrese el número único…\" onChange={(event) => {\r\n                            setId(event.target.value);\r\n                        }} />\r\n                    </Form.Group>\r\n    \r\n                    <Form.Group className=\"mb-3\">\r\n                        <Form.Label>Precio por unidad</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Ingrese el precio…\" onChange={(event) => {\r\n                            setPrice(event.target.value);\r\n                        }} />\r\n                    </Form.Group>\r\n    \r\n                    <Form.Group className=\"mb-3\">\r\n                        <Form.Label>Descripción</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Ingrese una descripción del artículo…\" onChange={(event) => {\r\n                            setDescription(event.target.value);\r\n                        }} />\r\n                    </Form.Group>\r\n                </Form>\r\n            );\r\n        }\r\n        else\r\n            return (\r\n                <Form>\r\n                    <Form.Group className=\"mb-3\">\r\n                        <Form.Label>Número de artículo</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Ingrese el código del artículo…\" onChange={(event) => {\r\n                            setArticle(event.target.value);\r\n                        }} />\r\n                    </Form.Group>\r\n                </Form>\r\n            );\r\n    }\r\n\r\n    return (\r\n        <ModalPrototype show={show} handleClose={handleClose} children={MyForm}\r\n            title={(registration) ? 'Alta' : 'Baja' + 'de artículo'} post={post} />//El modal debe mostrar el form especificado en Article\r\n    );\r\n\r\n}\r\n\r\nModalArt.propTypes = {\r\n    handleClose: PropTypes.func.isRequired, //Función que cierra el modal\r\n    show: PropTypes.bool.isRequired, //True si y sólo si se debe o no ver el modal\r\n    registration: PropTypes.bool.isRequired //True si y sólo si se da un alta\r\n}\r\n\r\nexport const ModalWork = ({ handleClose, show, registration, post }) => {//Se encargará de los forms para dar de alta/baja a los talleres\r\n    const [name, setName] = useState('');\r\n    const [contact, setContact] = useState('');\r\n\r\n    return (\r\n        <ModalPrototype show={show} handleClose={handleClose} children={<Workshop registration={registration} />}\r\n            title={(registration) ? 'Alta' : 'Baja' + 'de taller'} post={post} />//El modal debe mostrar el form especificado en Workshop\r\n    );\r\n}\r\n\r\nModalWork.propTypes = ModalArt.propTypes;"]},"metadata":{},"sourceType":"module"}
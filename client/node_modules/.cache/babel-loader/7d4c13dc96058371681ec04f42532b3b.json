{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\OneDrive\\\\Escritorio\\\\fabrica\\\\client\\\\src\\\\Menu\\\\deliverTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from 'react';\nimport { ModalOpener } from './modalOpener';\nimport { Request } from '../textInputs';\nimport Form from 'react-bootstrap/Form';\nimport image from './Images/DeliverTask.svg';\nimport moment from 'moment';\nimport Axios from 'axios';\nimport Table from 'react-bootstrap/Table';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class DeliverTask extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      task: '',\n      quantity: '',\n      money: '',\n      weight: '',\n      spare: false,\n      error: false\n    };\n\n    this.changeValue = (state, val) => {\n      this.setState({\n        [state]: val\n      });\n    };\n\n    this.myForm = () => {\n      return /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Request, {\n          toShow: \"name\",\n          onChange: element => {\n            this.setState({\n              name: element\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TaskRequest, {\n          name: this.state.name,\n          onChange: (data, task, error) => {\n            this.setState({\n              task,\n              quantity: data.quantity,\n              money: data.money,\n              weight: data.weight,\n              error\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.post = () => {\n      Axios.post('http://localhost:3001/newPart', {\n        task: this.state.task,\n        date: moment(new Date()).format('DD/MM/YYYY'),\n        quantity: this.state.quantity,\n        weight: this.state.weight,\n        money: this.state.money\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(ModalOpener, {\n      buttonText: \"Recibir tarea\",\n      children: this.myForm(),\n      className: 'title',\n      logo: image,\n      title: 'Ingreso de tarea',\n      post: this.post,\n      error: this.state.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this) //Crea un botón que abre a un modal en el que aparecerá lo devuelto en this.myForm\n    ;\n  }\n\n}\nexport const TaskRequest = _ref => {\n  _s();\n\n  let {\n    onChange,\n    name\n  } = _ref;\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState('Elegir tarea');\n  const [parts, setParts] = useState([]);\n  const [input, setInput] = useState({\n    quantity: 0,\n    weight: 0,\n    money: 0\n  });\n  const [selectedTask, setSelectedTask] = useState('');\n  useEffect(() => {\n    if (name === '') return;\n    Axios.post('http://localhost:3001/getTasks', {\n      name\n    }).then(response => {\n      if (response.data.length === 0) return;\n      setTasks(response.data);\n    });\n  }, [name]);\n  useEffect(() => {\n    Axios.post('http://localhost:3001/getParts', {\n      task: selectedTask.id\n    }).then(response => setParts(response.data));\n  }, [selectedTask]);\n  useEffect(() => {\n    onChange(input, selectedTask.id, input.quantity > 0 && input.weight > 0 && input.money >= 0);\n  }, [input]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const inputField = (property, total) => {\n    return /*#__PURE__*/_jsxDEV(FormControl, {\n      value: input[property],\n      onChange: e => {\n        if (isNaN(e.target.value)) return;\n        let aux = { ...input\n        };\n        aux[property] = total[property] < e.target.value ? total[property] : e.target.value;\n        aux[property] = aux[property] < 0 ? 0 : aux[property];\n        property === 'quantity' ? aux[property] = Math.round(aux[property]) : aux[property].toFixed(2);\n        setInput({ ...aux\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this);\n  };\n\n  const getTable = () => {\n    let total = {\n      quantity: selectedTask.quantity,\n      weight: selectedTask.weight,\n      money: selectedTask.quantity * selectedTask.price\n    };\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [parts.map((part, index) => {\n        total = {\n          quantity: total.quantity - part.quantity,\n          weight: total.weight - part.weight,\n          money: total.money - part.money\n        };\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: part.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: part.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: total.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: part.weight\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: total.weight\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: '$' + part.money\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: '$' + total.money\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: moment(new Date()).format('DD/MM/YYYY')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: inputField('quantity', total)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: total.quantity - input.quantity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: inputField('weight', total)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: (total.weight - input.weight).toFixed(2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: inputField('money', total)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: '$' + (total.money - input.money).toFixed(2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        'justifyContent': 'space-between',\n        'display': 'flex',\n        'alignItems': 'baseline'\n      },\n      children: [/*#__PURE__*/_jsxDEV(DropdownButton, {\n        title: title,\n        onSelect: e => {\n          setTitle('T' + tasks[e].id + ': ' + tasks[e].article_id + ' (' + tasks[e].article_description + ') x' + tasks[e].quantity + ' a $' + tasks[e].price);\n          setSelectedTask(tasks[e]);\n        },\n        children: tasks.map((task, index) => {\n          return /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: index,\n            children: task.id + ': ' + task.article_id + ' (' + task.article_description + ') x' + task.quantity + ' a $' + task.price\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: selectedTask === '' ? null : selectedTask.deadline\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), title === 'Elegir tarea' ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Fecha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Cantidad entregada\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Cantidad total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Peso entregado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Peso total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Dinero entregado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Dinero total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: selectedTask.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: selectedTask.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: selectedTask.weight\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: '$' + selectedTask.price * selectedTask.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 25\n        }, this), getTable()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TaskRequest, \"reT0MbOWZ19VQOuGX+C+/baGakc=\");\n\n_c = TaskRequest;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskRequest\");","map":{"version":3,"sources":["C:/Users/PC/OneDrive/Escritorio/fabrica/client/src/Menu/deliverTask.js"],"names":["React","Component","useState","useEffect","ModalOpener","Request","Form","image","moment","Axios","Table","FormControl","Dropdown","DropdownButton","DeliverTask","state","task","quantity","money","weight","spare","error","changeValue","val","setState","myForm","element","name","data","post","date","Date","format","render","TaskRequest","onChange","tasks","setTasks","title","setTitle","parts","setParts","input","setInput","selectedTask","setSelectedTask","then","response","length","id","inputField","property","total","e","isNaN","target","value","aux","Math","round","toFixed","getTable","price","map","part","index","article_id","article_description","deadline"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\r\nimport { ModalOpener } from './modalOpener';\r\nimport { Request } from '../textInputs';\r\nimport Form from 'react-bootstrap/Form';\r\nimport image from './Images/DeliverTask.svg';\r\nimport moment from 'moment';\r\nimport Axios from 'axios';\r\nimport Table from 'react-bootstrap/Table';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\n\r\n\r\nexport class DeliverTask extends Component {\r\n    state = {\r\n        task: '',\r\n        quantity: '',\r\n        money: '',\r\n        weight: '',\r\n        spare: false,\r\n        error: false\r\n    }\r\n\r\n    changeValue = (state, val) => {\r\n        this.setState({ [state]: val });\r\n    }\r\n\r\n    myForm = () => {\r\n        return (\r\n            <Form>\r\n                <Request toShow=\"name\" onChange={(element) => {\r\n                    this.setState({ name: element });\r\n                }} />\r\n\r\n                <TaskRequest name={this.state.name} onChange={(data, task, error) => {\r\n                    this.setState({ task, quantity: data.quantity, money: data.money, weight: data.weight, error });\r\n                }} />\r\n            </Form>\r\n        );\r\n    }\r\n\r\n    post = () => {\r\n        Axios.post('http://localhost:3001/newPart',\r\n            {\r\n                task: this.state.task, date: moment(new Date()).format('DD/MM/YYYY'), quantity: this.state.quantity,\r\n                weight: this.state.weight, money: this.state.money\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ModalOpener buttonText='Recibir tarea' children={this.myForm()}\r\n                className={'title'} logo={image} title={'Ingreso de tarea'} post={this.post} error={this.state.error} />\r\n            //Crea un botón que abre a un modal en el que aparecerá lo devuelto en this.myForm\r\n        );\r\n    }\r\n}\r\n\r\nexport const TaskRequest = ({ onChange, name }) => {\r\n\r\n    const [tasks, setTasks] = useState([]);\r\n    const [title, setTitle] = useState('Elegir tarea');\r\n    const [parts, setParts] = useState([]);\r\n    const [input, setInput] = useState({ quantity: 0, weight: 0, money: 0 });\r\n    const [selectedTask, setSelectedTask] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (name === '')\r\n            return;\r\n        Axios.post('http://localhost:3001/getTasks', { name }).then((response) => {\r\n            if (response.data.length === 0)\r\n                return;\r\n            setTasks(response.data);\r\n        })\r\n    }, [name]);\r\n\r\n    useEffect(() => {\r\n        Axios.post('http://localhost:3001/getParts', { task: selectedTask.id }).then((response) =>\r\n            setParts(response.data)\r\n        );\r\n    }, [selectedTask]);\r\n\r\n    useEffect(() => {\r\n        onChange(input, selectedTask.id,\r\n            (input.quantity > 0 && input.weight > 0 && input.money >= 0));\r\n    }, [input]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const inputField = (property, total) => {\r\n        \r\n        return(\r\n        <FormControl value={input[property]} onChange={(e) => {\r\n            if (isNaN(e.target.value))\r\n                return;\r\n            let aux = { ...input };\r\n            aux[property] = (total[property] < e.target.value) ? total[property] : e.target.value;\r\n            aux[property] = (aux[property] < 0) ? 0 : aux[property];\r\n            property === 'quantity'? aux[property] = Math.round(aux[property]) : aux[property].toFixed(2);\r\n            setInput({ ...aux });\r\n        }} />\r\n        );\r\n    }\r\n\r\n    const getTable = () => {\r\n\r\n        let total = {\r\n            quantity: selectedTask.quantity,\r\n            weight: selectedTask.weight,\r\n            money: selectedTask.quantity * selectedTask.price\r\n        };\r\n        return (\r\n            <>\r\n                {parts.map((part, index) => {\r\n                    total = {\r\n                        quantity: total.quantity - part.quantity,\r\n                        weight: total.weight - part.weight,\r\n                        money: total.money - part.money\r\n                    };\r\n\r\n                    return (\r\n                        <tr key={index}>\r\n                            <td>{part.date}</td>\r\n                            <td>{part.quantity}</td>\r\n                            <td>{total.quantity}</td>\r\n                            <td>{part.weight}</td>\r\n                            <td>{total.weight}</td>\r\n                            <td>{'$' + part.money}</td>\r\n                            <td>{'$' + total.money}</td>\r\n                        </tr>\r\n                    );\r\n                })}\r\n                <tr>\r\n\r\n                    <td>{moment(new Date()).format('DD/MM/YYYY')}</td>\r\n\r\n                    <td>{inputField('quantity', total)}</td>\r\n\r\n                    <td>{total.quantity - input.quantity}</td>\r\n\r\n                    <td>{inputField('weight', total)}</td>\r\n\r\n                    <td>{(total.weight - input.weight).toFixed(2)}</td>\r\n\r\n                    <td>{inputField('money', total)}</td>\r\n\r\n                    <td>{'$' + (total.money - input.money).toFixed(2)}</td>\r\n\r\n                </tr>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={{'justifyContent': 'space-between', 'display': 'flex', 'alignItems': 'baseline'}}>\r\n                <DropdownButton title={title} onSelect={(e) => {\r\n                    setTitle('T' + tasks[e].id + ': ' + tasks[e].article_id + ' (' + tasks[e].article_description + ') x' + tasks[e].quantity + ' a $' + tasks[e].price);\r\n                    setSelectedTask(tasks[e]);\r\n                }}>\r\n                    {tasks.map((task, index) => {\r\n                        return (\r\n                            <Dropdown.Item key={task.id} eventKey={index}>\r\n                                {task.id + ': ' + task.article_id + ' (' + task.article_description + ') x' + task.quantity + ' a $' + task.price}\r\n                            </Dropdown.Item>\r\n                        );\r\n                    })}\r\n                </DropdownButton>\r\n                <h4>\r\n                    {(selectedTask === '') ? null : selectedTask.deadline}\r\n                </h4>\r\n            </div>\r\n            {title === 'Elegir tarea' ? <></> :\r\n                <Table striped bordered>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Fecha</th>\r\n                            <th>Cantidad entregada</th>\r\n                            <th>Cantidad total</th>\r\n                            <th>Peso entregado</th>\r\n                            <th>Peso total</th>\r\n                            <th>Dinero entregado</th>\r\n                            <th>Dinero total</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>{selectedTask.date}</td>\r\n                            <td></td>\r\n                            <td>{selectedTask.quantity}</td>\r\n                            <td></td>\r\n                            <td>{selectedTask.weight}</td>\r\n                            <td></td>\r\n                            <td>{'$' + selectedTask.price * selectedTask.quantity}</td>\r\n                        </tr>\r\n                        {getTable()}\r\n                    </tbody>\r\n                </Table>}\r\n        </>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}
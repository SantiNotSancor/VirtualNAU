{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\OneDrive\\\\Escritorio\\\\fabrica\\\\src\\\\modal.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Modal from 'react-bootstrap/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ModalController extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      showModal: false //True si y sólo si se debe mostrar el modal\n\n    };\n\n    this.showModal = () => {\n      //A llamar cuando se quiere mostrar el modal\n      this.setState({\n        showModal: true\n      });\n    };\n\n    this.hideModal = () => {\n      //A llamar cuando se quiere esconder el modal\n      this.setState({\n        showModal: false\n      });\n    };\n  }\n\n}\nexport const ModalPrototype = _ref => {\n  let {\n    show,\n    handleClose,\n    children\n  } = _ref;\n  //Debe ser invocada para crear el modal. Ver props \n  return /*#__PURE__*/_jsxDEV(Modal, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 13\n  }, this) // <Modal show={show} onHide={handleClose}>\n  //     <Modal.Header closeButton>\n  //         <Modal.Title>HI</Modal.Title>\n  //     </Modal.Header>\n  //     <Modal.Body>\n  //         {children}\n  //     </Modal.Body>\n  //     <Modal.Footer>\n  //         <button onClick={handleClose}>Close</button>\n  //     </Modal.Footer>\n  // </Modal>\n  ;\n};\n_c = ModalPrototype;\nModalPrototype.propTypes = {\n  show: PropTypes.bool.isRequired,\n  //Boolean que especifica si se debe o no mostrar el modal\n  handleClose: PropTypes.func.isRequired,\n  //Función que cerrará el modal al presionar el botón\n  children: PropTypes.element.isRequired //Hijo que aparecerá en el modal\n\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalPrototype\");","map":{"version":3,"sources":["C:/Users/PC/OneDrive/Escritorio/fabrica/src/modal.js"],"names":["React","Component","PropTypes","Modal","ModalController","state","showModal","setState","hideModal","ModalPrototype","show","handleClose","children","propTypes","bool","isRequired","func","element"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,sCAAP;AACA,OAAOC,KAAP,MAAkB,uBAAlB;;AAEA,OAAO,MAAMC,eAAN,SAA8BH,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAE3CI,KAF2C,GAEnC;AACJC,MAAAA,SAAS,EAAE,KADP,CACY;;AADZ,KAFmC;;AAAA,SAM3CA,SAN2C,GAM/B,MAAM;AAAC;AACf,WAAKC,QAAL,CAAc;AAAED,QAAAA,SAAS,EAAE;AAAb,OAAd;AACH,KAR0C;;AAAA,SAU3CE,SAV2C,GAU/B,MAAM;AAAC;AACf,WAAKD,QAAL,CAAc;AAAED,QAAAA,SAAS,EAAE;AAAb,OAAd;AACH,KAZ0C;AAAA;;AAAA;AAiB/C,OAAO,MAAMG,cAAc,GAAG,QAAmC;AAAA,MAAlC;AAACC,IAAAA,IAAD;AAAOC,IAAAA,WAAP;AAAoBC,IAAAA;AAApB,GAAkC;AAAC;AAE1D,sBACI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,UADJ,CAEQ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZR;AAeP,CAjBM;KAAMH,c;AAmBbA,cAAc,CAACI,SAAf,GAA2B;AACvBH,EAAAA,IAAI,EAAER,SAAS,CAACY,IAAV,CAAeC,UADE;AACS;AAChCJ,EAAAA,WAAW,EAAET,SAAS,CAACc,IAAV,CAAeD,UAFL;AAEgB;AACvCH,EAAAA,QAAQ,EAAEV,SAAS,CAACe,OAAV,CAAkBF,UAHL,CAGe;;AAHf,CAA3B","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nexport class ModalController extends Component {//Debe ser extendida por el elemento que va a abrir el modal\r\n\r\n    state = {\r\n        showModal: false//True si y sólo si se debe mostrar el modal\r\n    }\r\n\r\n    showModal = () => {//A llamar cuando se quiere mostrar el modal\r\n        this.setState({ showModal: true });\r\n    }\r\n\r\n    hideModal = () => {//A llamar cuando se quiere esconder el modal\r\n        this.setState({ showModal: false });\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const ModalPrototype = ({show, handleClose, children}) => {//Debe ser invocada para crear el modal. Ver props \r\n    \r\n        return (\r\n            <Modal></Modal>\r\n                // <Modal show={show} onHide={handleClose}>\r\n                //     <Modal.Header closeButton>\r\n                //         <Modal.Title>HI</Modal.Title>\r\n                //     </Modal.Header>\r\n                //     <Modal.Body>\r\n                //         {children}\r\n                //     </Modal.Body>\r\n                //     <Modal.Footer>\r\n                //         <button onClick={handleClose}>Close</button>\r\n                //     </Modal.Footer>\r\n                // </Modal>\r\n        );\r\n    \r\n}\r\n\r\nModalPrototype.propTypes = {\r\n    show: PropTypes.bool.isRequired,//Boolean que especifica si se debe o no mostrar el modal\r\n    handleClose: PropTypes.func.isRequired,//Función que cerrará el modal al presionar el botón\r\n    children: PropTypes.element.isRequired//Hijo que aparecerá en el modal\r\n}"]},"metadata":{},"sourceType":"module"}
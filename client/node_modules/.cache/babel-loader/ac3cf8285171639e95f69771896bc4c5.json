{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\OneDrive\\\\Escritorio\\\\fabrica\\\\client\\\\src\\\\Menu\\\\modalOpener.js\";\nimport React from 'react';\nimport { ModalController, ModalPrototype } from '../modal';\nimport PropTypes from 'prop-types'; //Crea un botón que abre un modal\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ModalOpener extends ModalController {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.showModal,\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"logo-button\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: this.props.logo,\n              width: \"70%\",\n              height: \"70%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 14,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: this.props.className,\n            children: this.props.buttonText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalPrototype, {\n        show: this.state.showModal,\n        handleClose: this.hideModal,\n        footer: this.props.footer,\n        children: this.props.children,\n        title: this.props.title,\n        post: () => {\n          if (!this.state.error) {\n            this.props.post();\n            this.hideModal();\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nModalOpener.propTypes = {\n  post: PropTypes.func.isRequired,\n  //Enviará los datos al back-end\n  title: PropTypes.string.isRequired,\n  //Título del modal\n  className: PropTypes.string,\n  //Texto que le dará clase a el div\n  logo: PropTypes.string.isRequired,\n  //Dirección relativa donde se encuentra el logo\n  buttonText: PropTypes.string.isRequired,\n  //Texto que aparecerá en el botón\n  children: PropTypes.element.isRequired,\n  //Hijo que aparecerá en el modal\n  error: PropTypes.bool\n};\nModalOpener.defaultProps = {\n  error: false\n};","map":{"version":3,"sources":["C:/Users/PC/OneDrive/Escritorio/fabrica/client/src/Menu/modalOpener.js"],"names":["React","ModalController","ModalPrototype","PropTypes","ModalOpener","render","showModal","props","logo","className","buttonText","state","hideModal","footer","children","title","error","post","propTypes","func","isRequired","string","element","bool","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,EAA0BC,cAA1B,QAAgD,UAAhD;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;;AAEA,OAAO,MAAMC,WAAN,SAA0BH,eAA1B,CAA0C;AAE7CI,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAE,KAAKC,SAAtB;AAAA,+BACI;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA,kCACI;AAAA,mCAAI;AAAK,cAAA,GAAG,EAAE,KAAKC,KAAL,CAAWC,IAArB;AAA2B,cAAA,KAAK,EAAC,KAAjC;AAAuC,cAAA,MAAM,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAI,YAAA,SAAS,EAAE,KAAKD,KAAL,CAAWE,SAA1B;AAAA,sBAAsC,KAAKF,KAAL,CAAWG;AAAjD;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI,QAAC,cAAD;AAAgB,QAAA,IAAI,EAAE,KAAKC,KAAL,CAAWL,SAAjC;AAA4C,QAAA,WAAW,EAAE,KAAKM,SAA9D;AAAyE,QAAA,MAAM,EAAE,KAAKL,KAAL,CAAWM,MAA5F;AACI,QAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWO,QADzB;AACmC,QAAA,KAAK,EAAE,KAAKP,KAAL,CAAWQ,KADrD;AAC4D,QAAA,IAAI,EAAE,MAAM;AAChE,cAAG,CAAC,KAAKJ,KAAL,CAAWK,KAAf,EAAsB;AAClB,iBAAKT,KAAL,CAAWU,IAAX;AACA,iBAAKL,SAAL;AACH;AACA;AANT;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAkBH;;AArB4C;AAyBjDR,WAAW,CAACc,SAAZ,GAAwB;AACpBD,EAAAA,IAAI,EAAEd,SAAS,CAACgB,IAAV,CAAeC,UADD;AACY;AAChCL,EAAAA,KAAK,EAAEZ,SAAS,CAACkB,MAAV,CAAiBD,UAFJ;AAEe;AACnCX,EAAAA,SAAS,EAAEN,SAAS,CAACkB,MAHD;AAGQ;AAC5Bb,EAAAA,IAAI,EAAEL,SAAS,CAACkB,MAAV,CAAiBD,UAJH;AAIc;AAClCV,EAAAA,UAAU,EAAEP,SAAS,CAACkB,MAAV,CAAiBD,UALT;AAKoB;AACxCN,EAAAA,QAAQ,EAAEX,SAAS,CAACmB,OAAV,CAAkBF,UANR;AAMmB;AACvCJ,EAAAA,KAAK,EAAEb,SAAS,CAACoB;AAPG,CAAxB;AAUAnB,WAAW,CAACoB,YAAZ,GAA2B;AACvBR,EAAAA,KAAK,EAAE;AADgB,CAA3B","sourcesContent":["import React from 'react';\r\nimport { ModalController, ModalPrototype } from '../modal';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Crea un botón que abre un modal\r\n\r\nexport class ModalOpener extends ModalController {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button onClick={this.showModal}>{/*Hereda la función desde ModalController*/}\r\n                    <ul className='logo-button'>\r\n                        <li><img src={this.props.logo} width='70%' height='70%' /></li>\r\n                        <li className={this.props.className}>{this.props.buttonText}</li>\r\n                    </ul>\r\n                </button>\r\n                <ModalPrototype show={this.state.showModal} handleClose={this.hideModal} footer={this.props.footer}\r\n                    children={this.props.children} title={this.props.title} post={() => {\r\n                        if(!this.state.error) {\r\n                            this.props.post();\r\n                            this.hideModal();   \r\n                        }\r\n                        }}/>\r\n                {/*Crea un Modal que se muestra si this.state.showModal y con hijo(s) this.props.children*/}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nModalOpener.propTypes = {\r\n    post: PropTypes.func.isRequired,//Enviará los datos al back-end\r\n    title: PropTypes.string.isRequired,//Título del modal\r\n    className: PropTypes.string,//Texto que le dará clase a el div\r\n    logo: PropTypes.string.isRequired,//Dirección relativa donde se encuentra el logo\r\n    buttonText: PropTypes.string.isRequired,//Texto que aparecerá en el botón\r\n    children: PropTypes.element.isRequired,//Hijo que aparecerá en el modal\r\n    error: PropTypes.bool\r\n}\r\n\r\nModalOpener.defaultProps = {\r\n    error: false\r\n}"]},"metadata":{},"sourceType":"module"}
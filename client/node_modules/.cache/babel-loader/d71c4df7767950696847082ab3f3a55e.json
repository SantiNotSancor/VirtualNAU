{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lab2\\\\Documents\\\\GitHub\\\\VirtualNAU\\\\client\\\\src\\\\Vendor\\\\addStock.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useEffect, useState } from 'react';\nimport { ModalOpener } from '../modalOpener';\nimport { Request, TaskRequest } from '../textInputs';\nimport Axios from 'axios';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\nimport Table from 'react-bootstrap/Table';\nimport moment from 'moment'; //import image from './Images/addStock.svg';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  responsable: '',\n  date: moment(new Date()).format(\"DD/MM/YYYY\"),\n  material: [] //Una lista que tendrá objetos de la forma {id, quantity} (descripción y nombre están guardados en una tabla)\n\n};\nexport class AsignTaskButton extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = initialState;\n  }\n\n  myForm() {\n    return /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: e => e.preventDefault(),\n      children: [/*#__PURE__*/_jsxDEV(Request, {\n        toShow: \"responsable\",\n        onChange: event => {\n          this.setState({\n            name: event\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        id: \"taskTable\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Nombre\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Descripci\\xF3n\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Cantidad\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Peso\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Metros\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            onChange: row => {\n              let aux = { ...this.state.material\n              };\n              aux.push(row);\n              this.setState({\n                material: aux\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(ModalOpener, {\n      buttonText: \"A\\xF1adir stock\",\n      handleClose: this.resetState,\n      className: 'title'\n      /*logo={image}*/\n      ,\n      title: 'Añadir stock',\n      post: this.post,\n      children: this.myForm()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport const Input = _ref => {\n  _s();\n\n  let {\n    onChange\n  } = _ref;\n  const [input, setInput] = useState({\n    id: '',\n    name: '',\n    description: '',\n    quantity: '',\n    weight: '',\n    meters: ''\n  });\n  useEffect(() => onChange(input), [input]);\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    style: {\n      'backgroundColor': 'green'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        value: input.id //ID\n        ,\n        onChange: e => {\n          let aux = { ...input\n          };\n          aux.id = e.target.value;\n          setInput({ ...aux\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        value: input.name //Nombre\n        ,\n        onChange: e => {\n          let aux = { ...input\n          };\n          aux.name = e.target.value;\n          setInput({ ...aux\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        value: input.description //Descripción\n        ,\n        onChange: e => {\n          let aux = { ...input\n          };\n          aux.description = e.target.value;\n          setInput({ ...aux\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        value: input.quantity //Cantidad\n        ,\n        onChange: e => {\n          let aux = { ...input\n          };\n          aux.quantity = e.target.value;\n          setInput({ ...aux\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        value: input.weight //Peso\n        ,\n        onChange: e => {\n          let aux = { ...input\n          };\n          aux.weight = e.target.value;\n          setInput({ ...aux\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        value: input.meters //Metros\n        ,\n        onChange: e => {\n          let aux = { ...input\n          };\n          aux.meters = e.target.value;\n          setInput({ ...aux\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {//Eliminar fila\n        },\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Input, \"odNZ6nlR6OVgotk06GiWhr9vEhQ=\");\n\n_c = Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["C:/Users/Lab2/Documents/GitHub/VirtualNAU/client/src/Vendor/addStock.js"],"names":["React","Component","useEffect","useState","ModalOpener","Request","TaskRequest","Axios","Form","FormControl","Button","Table","moment","initialState","responsable","date","Date","format","material","AsignTaskButton","state","myForm","e","preventDefault","event","setState","name","row","aux","push","render","resetState","post","Input","onChange","input","setInput","id","description","quantity","weight","meters","target","value"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState } from 'react';\r\nimport { ModalOpener } from '../modalOpener';\r\nimport { Request, TaskRequest } from '../textInputs';\r\nimport Axios from 'axios';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Table from 'react-bootstrap/Table';\r\nimport moment from 'moment';\r\n//import image from './Images/addStock.svg';\r\n\r\nconst initialState = {\r\n    responsable: '',\r\n    date: moment(new Date()).format(\"DD/MM/YYYY\"),\r\n    material: []\r\n    //Una lista que tendrá objetos de la forma {id, quantity} (descripción y nombre están guardados en una tabla)\r\n}\r\n\r\nexport class AsignTaskButton extends Component {\r\n    state = initialState;\r\n\r\n    myForm() {\r\n        return (\r\n            <Form onSubmit={e => e.preventDefault()}>\r\n                {/* Se hará un formulario para que el usuario complete los datos de la materia prima; fecha actual, responsable, nombre, descripción y cantidad  */}\r\n                <Request toShow=\"responsable\" onChange={(event) => {\r\n                    this.setState({ name: event });\r\n                }} />\r\n                <Table striped bordered id=\"taskTable\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Nombre</th>\r\n                            <th>Descripción</th>\r\n                            <th>Cantidad</th>\r\n                            <th>Peso</th>\r\n                            <th>Metros</th>\r\n                            <th></th>{/* Botón de eliminar fila */}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <Input onChange={(row) => {\r\n                            let aux = { ...this.state.material };\r\n                            aux.push(row);\r\n                            this.setState({ material: aux })}\r\n                            } />\r\n                    </tbody>\r\n                </Table>\r\n            </Form>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ModalOpener buttonText='Añadir stock' handleClose={this.resetState}\r\n                className={'title'} /*logo={image}*/ title={'Añadir stock'} post={this.post} children={this.myForm()} />\r\n        );\r\n    }\r\n}\r\n\r\nexport const Input = ({ onChange }) => {\r\n\r\n    const [input, setInput] = useState({ id: '', name: '', description: '', quantity: '', weight: '', meters: '' });\r\n\r\n    useEffect(() => onChange(input), [input]);\r\n\r\n    return (\r\n        <tr style={{ 'backgroundColor': 'green' }}>{/*Muestra el primero*/}\r\n            <td><FormControl value={input.id}//ID\r\n                onChange={(e) => {\r\n                    let aux = { ...input };\r\n                    aux.id = e.target.value;\r\n                    setInput({ ...aux });}}/>\r\n            </td>\r\n            <td><FormControl value={input.name}//Nombre\r\n                onChange={(e) => {\r\n                    let aux = { ...input };\r\n                    aux.name = e.target.value;\r\n                    setInput({ ...aux });}}/></td>\r\n            <td><FormControl value={input.description}//Descripción\r\n                onChange={(e) => {\r\n                    let aux = { ...input };\r\n                    aux.description = e.target.value;\r\n                    setInput({ ...aux });}}/></td>\r\n            <td><FormControl value={input.quantity}//Cantidad\r\n                onChange={(e) => {\r\n                    let aux = { ...input };\r\n                    aux.quantity = e.target.value;\r\n                    setInput({ ...aux });}}/></td>\r\n            <td><FormControl value={input.weight}//Peso\r\n                onChange={(e) => {\r\n                    let aux = { ...input };\r\n                    aux.weight = e.target.value;\r\n                    setInput({ ...aux });}}/></td>\r\n            <td><FormControl value={input.meters}//Metros\r\n                onChange={(e) => {\r\n                    let aux = { ...input };\r\n                    aux.meters = e.target.value;\r\n                    setInput({ ...aux });}}/></td>\r\n            <td><Button onClick={() => {\r\n                //Eliminar fila\r\n            }}>X</Button></td>\r\n        </tr>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}
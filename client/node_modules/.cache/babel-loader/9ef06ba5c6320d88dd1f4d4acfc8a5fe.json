{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\OneDrive\\\\Escritorio\\\\fabrica\\\\client\\\\src\\\\Menu\\\\asignTask.js\";\nimport React, { Component } from 'react';\nimport { ModalOpener } from './modalOpener';\nimport { Request, TaskRequest } from '../textInputs';\nimport image from './Images/AsignTask.svg';\nimport Axios from 'axios';\nimport Form from 'react-bootstrap/Form';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class AsignTaskButton extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      name: '',\n      task: '',\n      deadline: '',\n      weight: '',\n      threads: '',\n      price: '',\n      //Auto-asignar\n      packages: '',\n      description: '',\n      quantity: '',\n      //Otros\n      selectedTask: null,\n      tasks: [],\n      title: 'Elegir Tarea'\n    };\n\n    this.myForm = () => {\n      Axios.post('http://localhost:3001/getTasks', {\n        state: 'toAsign'\n      }).then(response => {\n        this.setState({\n          tasks: response.data\n        });\n      });\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [this.state.selectedTask ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Bultos: \", this.state.selectedTask.packages]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Descripci\\xF3n: \", this.state.selectedTask.article_description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Cantidad: \", this.state.selectedTask.quantity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true) : null, /*#__PURE__*/_jsxDEV(Request, {\n          toShow: \"name\",\n          onChange: event => {\n            this.setState({\n              name: event\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Request, {\n          toShow: \"deadline\",\n          onChange: event => {\n            this.setState({\n              deadline: event.target.value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TaskRequest, {\n          setSelectedTask: e => this.setState({\n            selectedTask: e\n          }),\n          tasks: this.state.tasks,\n          title: this.state.title,\n          setTitle: e => {\n            this.setState({\n              title: e\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Request, {\n          toShow: \"weight\",\n          onChange: event => {\n            this.setState({\n              weight: event.target.value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Request, {\n          toShow: \"price\",\n          onChange: event => {\n            this.setState({\n              price: event.target.value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Request, {\n          toShow: \"threads\",\n          onChange: event => {\n            this.setState({\n              threads: event.target.value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n    };\n\n    this.post = () => {\n      let aux = this.state;\n      console.log(aux.task);\n      Axios.put('http://localhost:3001/asignTask', {\n        name: aux.name,\n        task: this.state.selectedTask.id,\n        deadline: aux.deadline,\n        weight: aux.weight,\n        threads: aux.threads,\n        price: aux.price,\n        exitDate: moment(new Date()).format(\"DD/MM/YYYY\")\n      });\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.selectedTask === prevState.selectedTask) return;\n    Axios.post('http://localhost:3001/getPrices', {\n      name: this.state.name,\n      article: this.state.selectedTask.article_id\n    }).then(response => {\n      //Se debe encontrar el mayor de los id que sean menores a selectedTask.id o el mayor, si no tiene menores\n      let currentId = this.state.selectedTask.id,\n          aux = 0;\n      response.data.map(task => {\n        if (task.id > aux && task.id < currentId || task.id > currentId && (aux === 0 || aux > currentId)) aux = task;\n      });\n      this.setState({\n        price: aux.price\n      });\n      console.log(aux);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(ModalOpener, {\n      buttonText: \"Remito\",\n      close: () => this.setState({\n        selectedTask: null,\n        title: 'Elegir Tarea'\n      }),\n      className: 'title',\n      logo: image,\n      title: 'Asignar Tarea',\n      post: this.post,\n      children: this.myForm()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this) //Crea un botón que abre a un modal en el que aparecerá lo devuelto en this.myForm\n    ;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/PC/OneDrive/Escritorio/fabrica/client/src/Menu/asignTask.js"],"names":["React","Component","ModalOpener","Request","TaskRequest","image","Axios","Form","moment","AsignTaskButton","state","name","task","deadline","weight","threads","price","packages","description","quantity","selectedTask","tasks","title","myForm","post","then","response","setState","data","article_description","event","target","value","e","aux","console","log","put","id","exitDate","Date","format","componentDidUpdate","prevProps","prevState","article","article_id","currentId","map","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { ModalOpener } from './modalOpener';\r\nimport { Request, TaskRequest } from '../textInputs';\r\nimport image from './Images/AsignTask.svg';\r\nimport Axios from 'axios';\r\nimport Form from 'react-bootstrap/Form';\r\nimport moment from 'moment';\r\n\r\nexport class AsignTaskButton extends Component {\r\n    state = {\r\n        name: '',\r\n        task: '',\r\n        deadline: '',\r\n        weight: '',\r\n        threads: '',\r\n        price: '',\r\n        //Auto-asignar\r\n        packages: '',\r\n        description: '',\r\n        quantity: '',\r\n        //Otros\r\n        selectedTask: null,\r\n        tasks: [],\r\n        title: 'Elegir Tarea'\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.state.selectedTask === prevState.selectedTask)\r\n            return;\r\n        Axios.post('http://localhost:3001/getPrices',\r\n            { name: this.state.name, article: this.state.selectedTask.article_id }).then((response) => {\r\n                //Se debe encontrar el mayor de los id que sean menores a selectedTask.id o el mayor, si no tiene menores\r\n                let currentId = this.state.selectedTask.id, aux = 0;\r\n                response.data.map((task) => {\r\n                    if((task.id > aux && task.id < currentId) || (task.id > currentId && (aux === 0 || aux > currentId)))\r\n                        aux = task;\r\n                })\r\n                this.setState({ price: aux.price });\r\n                console.log(aux);\r\n            });\r\n    }\r\n\r\n    myForm = () => {\r\n        Axios.post('http://localhost:3001/getTasks', { state: 'toAsign' }).then((response) => {\r\n            this.setState({ tasks: response.data });\r\n        });\r\n        return (\r\n            <>\r\n                {this.state.selectedTask ?\r\n                    <>\r\n                        <h3>Bultos: {this.state.selectedTask.packages}</h3>\r\n                        <h3>Descripción: {this.state.selectedTask.article_description}</h3>\r\n                        <h3>Cantidad: {this.state.selectedTask.quantity}</h3>\r\n                    </>\r\n                    : null}\r\n\r\n                <Request toShow=\"name\" onChange={(event) => {\r\n                    this.setState({ name: event });\r\n                }} />\r\n\r\n                <Request toShow=\"deadline\" onChange={(event) => {\r\n                    this.setState({ deadline: event.target.value });\r\n                }} />\r\n\r\n                <TaskRequest setSelectedTask={(e) => this.setState({ selectedTask: e })} tasks={this.state.tasks}\r\n                    title={this.state.title} setTitle={(e) => { this.setState({ title: e }) }} />\r\n\r\n                <Request toShow=\"weight\" onChange={(event) => {\r\n                    this.setState({ weight: event.target.value });\r\n                }} />\r\n\r\n                <Request toShow=\"price\" onChange={(event) => {\r\n                    this.setState({ price: event.target.value });\r\n                }} />\r\n\r\n                <Request toShow=\"threads\" onChange={(event) => {\r\n                    this.setState({ threads: event.target.value });\r\n                }} />\r\n            </>\r\n        );\r\n    }\r\n\r\n    post = () => {\r\n        let aux = this.state\r\n        console.log(aux.task);\r\n        Axios.put('http://localhost:3001/asignTask', {\r\n            name: aux.name, task: this.state.selectedTask.id, deadline: aux.deadline, weight: aux.weight, threads: aux.threads,\r\n            price: aux.price, exitDate: moment(new Date()).format(\"DD/MM/YYYY\")\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ModalOpener buttonText='Remito' close={() => this.setState({ selectedTask: null, title: 'Elegir Tarea' })}\r\n                className={'title'} logo={image} title={'Asignar Tarea'} post={this.post} children={this.myForm()} />\r\n            //Crea un botón que abre a un modal en el que aparecerá lo devuelto en this.myForm\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}
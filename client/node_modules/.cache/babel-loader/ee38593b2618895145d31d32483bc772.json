{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\OneDrive\\\\Escritorio\\\\fabrica\\\\client\\\\src\\\\Menu\\\\modifyData.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { ModalController, ModalPrototype } from '../modal';\nimport { Request } from '../textInput';\nimport PropTypes from 'prop-types';\nimport Form from 'react-bootstrap/Form';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ModifyDataButton extends ModalController {\n  constructor() {\n    super(...arguments);\n    this.state = { ...this.state,\n      //Hereda los estados de ModalController (showModal: false)\n      article: false //True si y sólo si se está modificando al artículo\n\n    };\n\n    this.showModal = e => {\n      //Cuando se presione el botón se ejecuta\n      this.setState({\n        showModal: true,\n        article: e.target.value === 'true'\n      }); //article toma el valor pasado en el botón y se muestra el modal\n    };\n\n    this.callModal = () => {\n      if (this.props.article) return /*#__PURE__*/_jsxDEV(ModalArt, {\n        handleClose: this.hideModal,\n        show: this.state.showModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this);\n      return /*#__PURE__*/_jsxDEV(ModalWork, {\n        handleClose: this.hideModal,\n        show: this.state.showModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"branched\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"title\",\n        children: \"Modificar Datos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"branch\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.showModal,\n              value: 'false',\n              children: \"Taller\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.showModal,\n              value: 'true',\n              children: \"Art\\xEDculo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), this.callModal()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport const ModalArt = _ref => {\n  _s();\n\n  let {\n    handleClose,\n    show\n  } = _ref;\n  //Se encargará de los forms para modificar datos sobre artículos\n  const [id, setId] = useState('');\n  const [price, setPrice] = useState('');\n  const [description, setDescription] = useState('');\n\n  const post = () => {\n    Axios.post('http://localhost:3001/create', {\n      id,\n      price,\n      description\n    }).then(() => {\n      console.log('Artículos>Alta');\n    });\n  };\n\n  const myForm = () => {\n    return /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Request, {\n        toShow: \"article\",\n        onChange: event => {\n          setId(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Request, {\n        toShow: \"price\",\n        onChange: event => {\n          setPrice(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Request, {\n        toShow: \"description\",\n        onChange: event => {\n          setDescription(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ModalPrototype, {\n    show: show,\n    handleClose: handleClose,\n    children: myForm(),\n    title: 'Modificación de artículo',\n    post: post\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this) //El modal debe mostrar el form especificado en Article\n  ;\n};\n\n_s(ModalArt, \"3eKn0r14hb8SC+BYk+GbZkoEQ/8=\");\n\n_c = ModalArt;\nModalArt.propTypes = {\n  handleClose: PropTypes.func.isRequired,\n  //Función que cierra el modal\n  show: PropTypes.bool.isRequired,\n  //True si y sólo si se debe o no ver el modal\n  registration: PropTypes.bool.isRequired //True si y sólo si se da un alta\n\n};\nexport const ModalWork = _ref2 => {\n  _s2();\n\n  let {\n    handleClose,\n    show,\n    registration\n  } = _ref2;\n  //Se encargará de los forms para dar de alta/baja a los talleres\n  const [name, setName] = useState('');\n  const [contact, setContact] = useState('');\n\n  const post = () => {\n    if (registration) Axios.post('http://localhost:3001/create', {\n      name,\n      contact\n    });else Axios.post('http://localhost:3001/create', {\n      name\n    });\n  };\n\n  const myForm = () => {\n    if (registration) //de ser true, se está dando el alta, de lo contrario, la baja\n      return /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Request, {\n          toShow: \"name\",\n          onChange: event => {\n            setName(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Datos de contacto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            height: \"500px\",\n            placeholder: \"Ingrese datos de contacto del tallerista\\u2026\",\n            onChange: event => {\n              setContact(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this);else return /*#__PURE__*/_jsxDEV(Request, {\n      toShow: \"name\",\n      onChange: event => {\n        setName(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ModalPrototype, {\n    show: show,\n    handleClose: handleClose,\n    children: myForm(),\n    title: (registration ? 'Alta' : 'Baja') + ' de taller',\n    post: post\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 9\n  }, this) //El modal debe mostrar el form especificado en Workshop\n  ;\n};\n\n_s2(ModalWork, \"HhwiK1o0SpuFpY6reDMUNdBW26w=\");\n\n_c2 = ModalWork;\nModalWork.propTypes = ModalArt.propTypes;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ModalArt\");\n$RefreshReg$(_c2, \"ModalWork\");","map":{"version":3,"sources":["C:/Users/PC/OneDrive/Escritorio/fabrica/client/src/Menu/modifyData.js"],"names":["React","useState","ModalController","ModalPrototype","Request","PropTypes","Form","Axios","ModifyDataButton","state","article","showModal","e","setState","target","value","callModal","props","hideModal","render","ModalArt","handleClose","show","id","setId","price","setPrice","description","setDescription","post","then","console","log","myForm","event","propTypes","func","isRequired","bool","registration","ModalWork","name","setName","contact","setContact"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { ModalController, ModalPrototype } from '../modal';\r\nimport { Request } from '../textInput';\r\nimport PropTypes from 'prop-types';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Axios from 'axios';\r\n\r\nexport class ModifyDataButton extends ModalController {\r\n\r\n    state = {\r\n        ...this.state,//Hereda los estados de ModalController (showModal: false)\r\n        article: false//True si y sólo si se está modificando al artículo\r\n    }\r\n\r\n    showModal = e => {//Cuando se presione el botón se ejecuta\r\n        this.setState({ showModal: true, article: e.target.value === 'true' })\r\n        //article toma el valor pasado en el botón y se muestra el modal\r\n    }\r\n\r\n    callModal = () => {\r\n        if (this.props.article)\r\n            return (\r\n                <ModalArt handleClose={this.hideModal} show={this.state.showModal} />\r\n            );\r\n        return (\r\n            <ModalWork handleClose={this.hideModal} show={this.state.showModal} />\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ul className='branched'>\r\n                <li className='title'>\r\n                    Modificar Datos\r\n                </li>\r\n                <li>\r\n                    <ul className='branch'>\r\n                        <li>\r\n                            <button onClick={this.showModal} value={'false'}>\r\n                                Taller\r\n                            </button>\r\n                        </li>\r\n                        <li>\r\n                            <button onClick={this.showModal} value={'true'}>\r\n                                Artículo\r\n                            </button>\r\n                        </li>\r\n                    </ul>\r\n                </li>\r\n                {this.callModal()}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport const ModalArt = ({ handleClose, show }) => {//Se encargará de los forms para modificar datos sobre artículos\r\n\r\n    const [id, setId] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n    const post = () => {\r\n        Axios.post('http://localhost:3001/create',\r\n            { id, price, description }).then(() => {\r\n                console.log('Artículos>Alta');\r\n            });\r\n    }\r\n\r\n    const myForm = () => {\r\n        return (\r\n            <Form>\r\n                <Request toShow=\"article\" onChange={(event) => {\r\n                    setId(event.target.value);\r\n                }} />\r\n\r\n                <Request toShow=\"price\" onChange={(event) => {\r\n                    setPrice(event.target.value);\r\n                }} />\r\n\r\n                <Request toShow=\"description\" onChange={(event) => {\r\n                    setDescription(event.target.value);\r\n                }} />\r\n            </Form>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <ModalPrototype show={show} handleClose={handleClose} children={myForm()}\r\n            title={'Modificación de artículo'} post={post} />//El modal debe mostrar el form especificado en Article\r\n    );\r\n\r\n}\r\n\r\nModalArt.propTypes = {\r\n    handleClose: PropTypes.func.isRequired, //Función que cierra el modal\r\n    show: PropTypes.bool.isRequired, //True si y sólo si se debe o no ver el modal\r\n    registration: PropTypes.bool.isRequired //True si y sólo si se da un alta\r\n}\r\n\r\nexport const ModalWork = ({ handleClose, show, registration }) => {//Se encargará de los forms para dar de alta/baja a los talleres\r\n    const [name, setName] = useState('');\r\n    const [contact, setContact] = useState('');\r\n\r\n    const post = () => {\r\n        if (registration)\r\n            Axios.post('http://localhost:3001/create',\r\n                { name, contact });\r\n        else\r\n            Axios.post('http://localhost:3001/create',\r\n                { name });\r\n    }\r\n\r\n    const myForm = () => {\r\n        if (registration)//de ser true, se está dando el alta, de lo contrario, la baja\r\n            return (\r\n                <Form>\r\n                    <Request toShow=\"name\" onChange={(event) => {\r\n                        setName(event.target.value);\r\n                    }} />\r\n\r\n                    <Form.Group className=\"mb-3\">\r\n                        <Form.Label>Datos de contacto</Form.Label>\r\n                        <Form.Control as=\"textarea\" height=\"500px\"\r\n                            placeholder=\"Ingrese datos de contacto del tallerista…\" onChange={(event) => {\r\n                                setContact(event.target.value);\r\n                            }} />\r\n                    </Form.Group>\r\n                </Form>\r\n            );\r\n        else\r\n            return (\r\n                <Request toShow=\"name\" onChange={(event) => {\r\n                    setName(event.target.value);\r\n                }} />\r\n            );\r\n    }\r\n\r\n    return (\r\n        <ModalPrototype show={show} handleClose={handleClose} children={myForm()}\r\n            title={((registration) ? 'Alta' : 'Baja') + ' de taller'} post={post} />//El modal debe mostrar el form especificado en Workshop\r\n    );\r\n}\r\n\r\nModalWork.propTypes = ModalArt.propTypes;"]},"metadata":{},"sourceType":"module"}
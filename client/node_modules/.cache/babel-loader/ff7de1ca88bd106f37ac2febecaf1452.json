{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\OneDrive\\\\Escritorio\\\\fabrica\\\\client\\\\src\\\\textInputs.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Popover from 'react-bootstrap/Popover';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Axios from 'axios';\nimport Button from 'react-bootstrap/Button';\nimport { ModalArt, ModalWork } from './Menu/RegistrationDrop/modals';\nimport './autocomplete.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Request = _ref => {\n  let {\n    onChange,\n    toShow,\n    label\n  } = _ref;\n  //Pedirá un dato con un input tipo text\n  let placeholder,\n      auxStorage = label;\n\n  switch (toShow) {\n    case 'name':\n      label = 'Nombre del taller';\n      placeholder = 'Ingrese el nombre del/la tallerista';\n      break;\n\n    case 'article':\n      label = 'Número de artículo';\n      placeholder = 'Ingrese el código único del artículo';\n      break;\n\n    case 'quantityArticle':\n      label = 'Cantidad asignada';\n      placeholder = 'Ingrese la cantidad de artículos';\n      break;\n\n    case 'task':\n      label = 'Número de tarea';\n      placeholder = 'Ingrese el número de tarea';\n      break;\n\n    case 'money':\n      label = 'Monto';\n      placeholder = 'Ingrese el monto a pagar';\n      break;\n\n    case 'price':\n      label = 'Precio por unidad';\n      placeholder = 'Ingrese el precio por unidad';\n      break;\n\n    case 'description':\n      label = 'Descripción';\n      placeholder = 'Ingrese una breve descripción del artículo';\n      break;\n\n    case 'regName':\n      label = 'Nombre del taller';\n      placeholder = 'Ingrese el nombre del/la tallerista';\n      break;\n\n    case 'regArticle':\n      label = 'Número de artículo';\n      placeholder = 'Ingrese el código del artículo';\n      break;\n\n    case 'weight':\n      label = 'Peso de la tarea';\n      placeholder = 'Ingrese el peso entregado';\n      break;\n\n    case 'deadline':\n      label = 'Fecha de entrega';\n      placeholder = 'Ingrese la fecha de entrega (DD/MM/AAAA)';\n      break;\n\n    default:\n      console.log(\"ERROR, HA INGRESADO EL toShow \" + toShow + \" EN EL COMPONENTE TEXTINPUT\");\n  }\n\n  label = auxStorage ? auxStorage : label;\n  placeholder += '…';\n  return toShow === 'name' ? /*#__PURE__*/_jsxDEV(NameRequest, {\n    label: label,\n    placeholder: placeholder,\n    onChange: onChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 35\n  }, this) : toShow === 'article' ? /*#__PURE__*/_jsxDEV(ArticleRequest, {\n    label: label,\n    placeholder: placeholder,\n    onChange: onChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 35\n  }, this) : /*#__PURE__*/_jsxDEV(Form.Group, {\n    className: \"mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n      children: [toShow === 'money' ? /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n        children: \"$\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 45\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(FormControl, {\n        type: \"text\",\n        placeholder: placeholder,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this), toShow === 'money' ? /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n        children: \".00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 45\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 13\n  }, this);\n};\n_c = Request;\nRequest.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  //Función a ejecutar cuando se modifica el input\n  toShow: PropTypes.string.isRequired,\n  label: PropTypes.string\n};\n\nconst ArticleRequest = _ref2 => {\n  _s();\n\n  let {\n    label,\n    placeholder,\n    onChange\n  } = _ref2;\n  const [id, setId] = useState('');\n  const [description, setDescription] = useState('');\n  const [error, setError] = useState(false);\n  const [show, setShow] = useState(false);\n\n  const getDescription = userInput => {\n    Axios.post('http://localhost:3001/getDescriptionWhere', {\n      id: userInput\n    }).then(response => {\n      setError(response.data.length === 0);\n      if (response.data.length !== 0) setDescription(response.data[0].description);else setDescription('');\n    });\n  };\n\n  const popover = /*#__PURE__*/_jsxDEV(Popover, {\n    children: [/*#__PURE__*/_jsxDEV(Popover.Header, {\n      as: \"h3\",\n      children: \"Descripci\\xF3n de art\\xEDculo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Popover.Body, {\n      children: error ? /*#__PURE__*/_jsxDEV(\"em\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No existe este c\\xF3digo de art\\xEDculo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            setId('');\n            setShow(true);\n          },\n          children: \"Ingresar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this) : description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n\n  if (!show) return /*#__PURE__*/_jsxDEV(Form.Group, {\n    className: \"mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n      children: /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n        show: id !== '',\n        placement: \"right\",\n        overlay: popover,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          type: \"text\",\n          placeholder: placeholder,\n          onChange: e => {\n            onChange(e);\n            setId(e.target.value);\n            getDescription(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 13\n  }, this);\n  return /*#__PURE__*/_jsxDEV(ModalArt, {\n    handleClose: () => setShow(false),\n    show: show,\n    registration: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 13\n  }, this);\n};\n\n_s(ArticleRequest, \"vZjh/PdfQwD8FJg6Im9aIu64ZGM=\");\n\n_c2 = ArticleRequest;\nArticleRequest.propTypes = {\n  label: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nconst NameRequest = _ref3 => {\n  _s2();\n\n  let {\n    label,\n    placeholder,\n    onChange\n  } = _ref3;\n  const [list, setList] = useState([]);\n  useEffect(() => {\n    getList();\n  }, []);\n\n  const getList = () => {\n    Axios.get('http://localhost:3001/getNames').then(response => {\n      setList(response.data);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form.Group, {\n    className: \"mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n      suggestions: list.map(element => {\n        return element.name;\n      }),\n      onChange: onChange,\n      placeholder: placeholder,\n      updateList: getList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(NameRequest, \"ZBNfaudzy8bVxb8UgkyyMnLdlWY=\");\n\n_c3 = NameRequest;\nNameRequest.propTypes = ArticleRequest.propTypes;\n\nclass Autocomplete extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      const {\n        suggestions\n      } = this.props;\n      const userInput = e.currentTarget.value; // Filter our suggestions that don't contain the user's input\n\n      const filteredSuggestions = suggestions.filter(suggestion => suggestion.toLowerCase().indexOf(userInput.toLowerCase()) > -1);\n      this.setState({\n        activeSuggestion: 0,\n        filteredSuggestions,\n        showSuggestions: true,\n        userInput: e.currentTarget.value\n      });\n      this.props.onChange(e.currentTarget.value);\n    };\n\n    this.onClick = e => {\n      this.setState({\n        activeSuggestion: 0,\n        filteredSuggestions: [],\n        showSuggestions: false,\n        userInput: e.currentTarget.innerText\n      });\n      this.props.onChange(e.currentTarget.innerText);\n    };\n\n    this.state = {\n      // The active selection's index\n      activeSuggestion: 0,\n      // The suggestions that match the user's input\n      filteredSuggestions: [],\n      // Whether or not the suggestion list is shown\n      showSuggestions: false,\n      // What the user has entered\n      userInput: \"\",\n      showModal: false\n    };\n  }\n\n  render() {\n    const {\n      onChange,\n      onClick,\n      onKeyDown,\n      state: {\n        activeSuggestion,\n        filteredSuggestions,\n        showSuggestions,\n        userInput\n      }\n    } = this;\n    let suggestionsListComponent;\n\n    if (showSuggestions && userInput) {\n      if (filteredSuggestions.length) {\n        suggestionsListComponent = /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"suggestions\",\n          children: filteredSuggestions.map((suggestion, index) => {\n            let className; // Flag the active suggestion with a class\n\n            if (index === activeSuggestion) {\n              className = \"suggestion-active\";\n            }\n\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: className,\n              onClick: onClick,\n              children: suggestion\n            }, suggestion, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 21\n        }, this);\n      } else {\n        suggestionsListComponent = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-suggestions\",\n          children: [/*#__PURE__*/_jsxDEV(\"em\", {\n            children: \"El taller ingresado no existe \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              this.setState({\n                showModal: true\n              });\n            },\n            children: \"Ingresar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 21\n        }, this);\n      }\n    }\n\n    if (!this.state.showModal) return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        placeholder: this.props.placeholder,\n        type: \"text\",\n        onChange: onChange,\n        onKeyDown: onKeyDown,\n        value: userInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 21\n      }, this), suggestionsListComponent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 17\n    }, this);else return /*#__PURE__*/_jsxDEV(ModalWork, {\n      handleClose: () => {\n        this.setState({\n          showModal: false\n        });\n        this.props.updateList();\n      },\n      show: this.state.showModal,\n      registration: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 21\n    }, this);\n  }\n\n}\n\nAutocomplete.propTypes = {\n  suggestions: PropTypes.instanceOf(Array).isRequired,\n  onChange: PropTypes.func.isRequired,\n  placeholder: PropTypes.string,\n  updateList: PropTypes.func.isRequired\n};\nAutocomplete.defaultProps = {\n  placeholder: 'Ingrese el nombre del/la tallerista'\n};\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Request\");\n$RefreshReg$(_c2, \"ArticleRequest\");\n$RefreshReg$(_c3, \"NameRequest\");","map":{"version":3,"sources":["C:/Users/PC/OneDrive/Escritorio/fabrica/client/src/textInputs.js"],"names":["React","useState","useEffect","Component","Fragment","PropTypes","Form","InputGroup","FormControl","Popover","OverlayTrigger","Axios","Button","ModalArt","ModalWork","Request","onChange","toShow","label","placeholder","auxStorage","console","log","propTypes","func","isRequired","string","ArticleRequest","id","setId","description","setDescription","error","setError","show","setShow","getDescription","userInput","post","then","response","data","length","popover","e","target","value","NameRequest","list","setList","getList","get","map","element","name","Autocomplete","constructor","props","suggestions","currentTarget","filteredSuggestions","filter","suggestion","toLowerCase","indexOf","setState","activeSuggestion","showSuggestions","onClick","innerText","state","showModal","render","onKeyDown","suggestionsListComponent","index","className","updateList","instanceOf","Array","defaultProps"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,SAArC,EAAgDC,QAAhD,QAAgE,OAAhE;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,gCAApC;AACA,OAAO,oBAAP;;;AAEA,OAAO,MAAMC,OAAO,GAAG,QAAiC;AAAA,MAAhC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,MAAZ;AAAoBC,IAAAA;AAApB,GAAgC;AAAC;AAErD,MAAIC,WAAJ;AAAA,MAAiBC,UAAU,GAAGF,KAA9B;;AAEA,UAAQD,MAAR;AACI,SAAK,MAAL;AACIC,MAAAA,KAAK,GAAG,mBAAR;AACAC,MAAAA,WAAW,GAAG,qCAAd;AACA;;AACJ,SAAK,SAAL;AACID,MAAAA,KAAK,GAAG,oBAAR;AACAC,MAAAA,WAAW,GAAG,sCAAd;AACA;;AACJ,SAAK,iBAAL;AACID,MAAAA,KAAK,GAAG,mBAAR;AACAC,MAAAA,WAAW,GAAG,kCAAd;AACA;;AACJ,SAAK,MAAL;AACID,MAAAA,KAAK,GAAG,iBAAR;AACAC,MAAAA,WAAW,GAAG,4BAAd;AACA;;AACJ,SAAK,OAAL;AACID,MAAAA,KAAK,GAAG,OAAR;AACAC,MAAAA,WAAW,GAAG,0BAAd;AACA;;AACJ,SAAK,OAAL;AACID,MAAAA,KAAK,GAAG,mBAAR;AACAC,MAAAA,WAAW,GAAG,8BAAd;AACA;;AACJ,SAAK,aAAL;AACID,MAAAA,KAAK,GAAG,aAAR;AACAC,MAAAA,WAAW,GAAG,4CAAd;AACA;;AACJ,SAAK,SAAL;AACID,MAAAA,KAAK,GAAG,mBAAR;AACAC,MAAAA,WAAW,GAAG,qCAAd;AACA;;AACJ,SAAK,YAAL;AACID,MAAAA,KAAK,GAAG,oBAAR;AACAC,MAAAA,WAAW,GAAG,gCAAd;AACA;;AACJ,SAAK,QAAL;AACID,MAAAA,KAAK,GAAG,kBAAR;AACAC,MAAAA,WAAW,GAAG,2BAAd;AACA;;AACA,SAAK,UAAL;AACID,MAAAA,KAAK,GAAG,kBAAR;AACAC,MAAAA,WAAW,GAAG,0CAAd;AACA;;AACR;AACIE,MAAAA,OAAO,CAACC,GAAR,CAAY,mCAAmCL,MAAnC,GAA4C,6BAAxD;AA9CR;;AAgDAC,EAAAA,KAAK,GAAIE,UAAD,GAAeA,UAAf,GAA4BF,KAApC;AACAC,EAAAA,WAAW,IAAI,GAAf;AACA,SAASF,MAAM,KAAK,MAAZ,gBAAsB,QAAC,WAAD;AAAa,IAAA,KAAK,EAAEC,KAApB;AAA2B,IAAA,WAAW,EAAEC,WAAxC;AAAqD,IAAA,QAAQ,EAAEH;AAA/D;AAAA;AAAA;AAAA;AAAA,UAAtB,GACFC,MAAM,KAAK,SAAZ,gBAAyB,QAAC,cAAD;AAAgB,IAAA,KAAK,EAAEC,KAAvB;AAA8B,IAAA,WAAW,EAAEC,WAA3C;AAAwD,IAAA,QAAQ,EAAEH;AAAlE;AAAA;AAAA;AAAA;AAAA,UAAzB,gBACG,QAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,MAAtB;AAAA,4BACI,QAAC,IAAD,CAAM,KAAN;AAAA,gBAAaE;AAAb;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,UAAD;AAAA,iBACMD,MAAM,KAAK,OAAZ,gBAAuB,QAAC,UAAD,CAAY,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAvB,gBAA8D,qCADnE,eAEI,QAAC,WAAD;AAAa,QAAA,IAAI,EAAC,MAAlB;AAAyB,QAAA,WAAW,EAAEE,WAAtC;AAAmD,QAAA,QAAQ,EAAEH;AAA7D;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGMC,MAAM,KAAK,OAAZ,gBAAuB,QAAC,UAAD,CAAY,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAvB,gBAAgE,qCAHrE;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFR;AAWH,CAjEM;KAAMF,O;AAmEbA,OAAO,CAACQ,SAAR,GAAoB;AAChBP,EAAAA,QAAQ,EAAEX,SAAS,CAACmB,IAAV,CAAeC,UADT;AACqB;AACrCR,EAAAA,MAAM,EAAEZ,SAAS,CAACqB,MAAV,CAAiBD,UAFT;AAGhBP,EAAAA,KAAK,EAAEb,SAAS,CAACqB;AAHD,CAApB;;AAMA,MAAMC,cAAc,GAAG,SAAsC;AAAA;;AAAA,MAArC;AAAET,IAAAA,KAAF;AAASC,IAAAA,WAAT;AAAsBH,IAAAA;AAAtB,GAAqC;AAEzD,QAAM,CAACY,EAAD,EAAKC,KAAL,IAAc5B,QAAQ,CAAC,EAAD,CAA5B;AACA,QAAM,CAAC6B,WAAD,EAAcC,cAAd,IAAgC9B,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAAC+B,KAAD,EAAQC,QAAR,IAAoBhC,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACiC,IAAD,EAAOC,OAAP,IAAkBlC,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAMmC,cAAc,GAAIC,SAAD,IAAe;AAClC1B,IAAAA,KAAK,CAAC2B,IAAN,CAAW,2CAAX,EAAwD;AAAEV,MAAAA,EAAE,EAAES;AAAN,KAAxD,EAA2EE,IAA3E,CAAiFC,QAAD,IAAc;AAC1FP,MAAAA,QAAQ,CAACO,QAAQ,CAACC,IAAT,CAAcC,MAAd,KAAyB,CAA1B,CAAR;AACA,UAAIF,QAAQ,CAACC,IAAT,CAAcC,MAAd,KAAyB,CAA7B,EACIX,cAAc,CAACS,QAAQ,CAACC,IAAT,CAAc,CAAd,EAAiBX,WAAlB,CAAd,CADJ,KAGIC,cAAc,CAAC,EAAD,CAAd;AACP,KAND;AAOH,GARD;;AAUA,QAAMY,OAAO,gBACT,QAAC,OAAD;AAAA,4BACI,QAAC,OAAD,CAAS,MAAT;AAAgB,MAAA,EAAE,EAAC,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,OAAD,CAAS,IAAT;AAAA,gBACKX,KAAK,gBACF;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,MAAM;AACnBH,YAAAA,KAAK,CAAC,EAAD,CAAL;AACAM,YAAAA,OAAO,CAAC,IAAD,CAAP;AACH,WAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADE,GAQAL;AATV;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;;AAkBA,MAAI,CAACI,IAAL,EACI,oBACI,QAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,MAAtB;AAAA,4BACI,QAAC,IAAD,CAAM,KAAN;AAAA,gBAAahB;AAAb;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,UAAD;AAAA,6BACI,QAAC,cAAD;AAAgB,QAAA,IAAI,EAAEU,EAAE,KAAK,EAA7B;AAAiC,QAAA,SAAS,EAAC,OAA3C;AAAmD,QAAA,OAAO,EAAEe,OAA5D;AAAA,+BACI,QAAC,WAAD;AAAa,UAAA,IAAI,EAAC,MAAlB;AAAyB,UAAA,WAAW,EAAExB,WAAtC;AAAmD,UAAA,QAAQ,EAAGyB,CAAD,IAAO;AAChE5B,YAAAA,QAAQ,CAAC4B,CAAD,CAAR;AACAf,YAAAA,KAAK,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAAL;AACAV,YAAAA,cAAc,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACH;AAJD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaJ,sBAAQ,QAAC,QAAD;AAAU,IAAA,WAAW,EAAE,MAAMX,OAAO,CAAC,KAAD,CAApC;AAA6C,IAAA,IAAI,EAAED,IAAnD;AAAyD,IAAA,YAAY,EAAE;AAAvE;AAAA;AAAA;AAAA;AAAA,UAAR;AACH,CAlDD;;GAAMP,c;;MAAAA,c;AAoDNA,cAAc,CAACJ,SAAf,GAA2B;AACvBL,EAAAA,KAAK,EAAEb,SAAS,CAACqB,MAAV,CAAiBD,UADD;AAEvBN,EAAAA,WAAW,EAAEd,SAAS,CAACqB,MAAV,CAAiBD,UAFP;AAGvBT,EAAAA,QAAQ,EAAEX,SAAS,CAACmB,IAAV,CAAeC;AAHF,CAA3B;;AAMA,MAAMsB,WAAW,GAAG,SAAsC;AAAA;;AAAA,MAArC;AAAE7B,IAAAA,KAAF;AAASC,IAAAA,WAAT;AAAsBH,IAAAA;AAAtB,GAAqC;AAEtD,QAAM,CAACgC,IAAD,EAAOC,OAAP,IAAkBhD,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZgD,IAAAA,OAAO;AACV,GAFQ,EAEN,EAFM,CAAT;;AAGA,QAAMA,OAAO,GAAG,MAAM;AAClBvC,IAAAA,KAAK,CAACwC,GAAN,CAAU,gCAAV,EAA4CZ,IAA5C,CAAkDC,QAAD,IAAc;AAC3DS,MAAAA,OAAO,CAACT,QAAQ,CAACC,IAAV,CAAP;AACH,KAFD;AAGH,GAJD;;AAKA,sBACI,QAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,MAAtB;AAAA,4BACI,QAAC,IAAD,CAAM,KAAN;AAAA,gBAAavB;AAAb;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,YAAD;AAAc,MAAA,WAAW,EAAE8B,IAAI,CAACI,GAAL,CAAUC,OAAD,IAAa;AAAE,eAAOA,OAAO,CAACC,IAAf;AAAqB,OAA7C,CAA3B;AACI,MAAA,QAAQ,EAAEtC,QADd;AACwB,MAAA,WAAW,EAAEG,WADrC;AACkD,MAAA,UAAU,EAAE+B;AAD9D;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAnBD;;IAAMH,W;;MAAAA,W;AAqBNA,WAAW,CAACxB,SAAZ,GAAwBI,cAAc,CAACJ,SAAvC;;AAEA,MAAMgC,YAAN,SAA2BpD,SAA3B,CAAqC;AAYjCqD,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAgBnBzC,QAhBmB,GAgBR4B,CAAC,IAAI;AACZ,YAAM;AAAEc,QAAAA;AAAF,UAAkB,KAAKD,KAA7B;AACA,YAAMpB,SAAS,GAAGO,CAAC,CAACe,aAAF,CAAgBb,KAAlC,CAFY,CAIZ;;AACA,YAAMc,mBAAmB,GAAGF,WAAW,CAACG,MAAZ,CACxBC,UAAU,IACNA,UAAU,CAACC,WAAX,GAAyBC,OAAzB,CAAiC3B,SAAS,CAAC0B,WAAV,EAAjC,IAA4D,CAAC,CAFzC,CAA5B;AAKA,WAAKE,QAAL,CAAc;AACVC,QAAAA,gBAAgB,EAAE,CADR;AAEVN,QAAAA,mBAFU;AAGVO,QAAAA,eAAe,EAAE,IAHP;AAIV9B,QAAAA,SAAS,EAAEO,CAAC,CAACe,aAAF,CAAgBb;AAJjB,OAAd;AAMA,WAAKW,KAAL,CAAWzC,QAAX,CAAoB4B,CAAC,CAACe,aAAF,CAAgBb,KAApC;AACH,KAjCkB;;AAAA,SAmCnBsB,OAnCmB,GAmCTxB,CAAC,IAAI;AACX,WAAKqB,QAAL,CAAc;AACVC,QAAAA,gBAAgB,EAAE,CADR;AAEVN,QAAAA,mBAAmB,EAAE,EAFX;AAGVO,QAAAA,eAAe,EAAE,KAHP;AAIV9B,QAAAA,SAAS,EAAEO,CAAC,CAACe,aAAF,CAAgBU;AAJjB,OAAd;AAMA,WAAKZ,KAAL,CAAWzC,QAAX,CAAoB4B,CAAC,CAACe,aAAF,CAAgBU,SAApC;AACH,KA3CkB;;AAGf,SAAKC,KAAL,GAAa;AACT;AACAJ,MAAAA,gBAAgB,EAAE,CAFT;AAGT;AACAN,MAAAA,mBAAmB,EAAE,EAJZ;AAKT;AACAO,MAAAA,eAAe,EAAE,KANR;AAOT;AACA9B,MAAAA,SAAS,EAAE,EARF;AASTkC,MAAAA,SAAS,EAAE;AATF,KAAb;AAWH;;AA+BDC,EAAAA,MAAM,GAAG;AACL,UAAM;AACFxD,MAAAA,QADE;AAEFoD,MAAAA,OAFE;AAGFK,MAAAA,SAHE;AAIFH,MAAAA,KAAK,EAAE;AACHJ,QAAAA,gBADG;AAEHN,QAAAA,mBAFG;AAGHO,QAAAA,eAHG;AAIH9B,QAAAA;AAJG;AAJL,QAUF,IAVJ;AAYA,QAAIqC,wBAAJ;;AAEA,QAAIP,eAAe,IAAI9B,SAAvB,EAAkC;AAC9B,UAAIuB,mBAAmB,CAAClB,MAAxB,EAAgC;AAC5BgC,QAAAA,wBAAwB,gBACpB;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA,oBACKd,mBAAmB,CAACR,GAApB,CAAwB,CAACU,UAAD,EAAaa,KAAb,KAAuB;AAC5C,gBAAIC,SAAJ,CAD4C,CAG5C;;AACA,gBAAID,KAAK,KAAKT,gBAAd,EAAgC;AAC5BU,cAAAA,SAAS,GAAG,mBAAZ;AACH;;AAED,gCACI;AAAI,cAAA,SAAS,EAAEA,SAAf;AAA2C,cAAA,OAAO,EAAER,OAApD;AAAA,wBACKN;AADL,eAA+BA,UAA/B;AAAA;AAAA;AAAA;AAAA,oBADJ;AAKH,WAbA;AADL;AAAA;AAAA;AAAA;AAAA,gBADJ;AAkBH,OAnBD,MAmBO;AACHY,QAAAA,wBAAwB,gBACpB;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAE,MAAM;AACnB,mBAAKT,QAAL,CAAc;AACVM,gBAAAA,SAAS,EAAE;AADD,eAAd;AAIH,aALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ;AAWH;AACJ;;AAED,QAAI,CAAC,KAAKD,KAAL,CAAWC,SAAhB,EACI,oBACI,QAAC,QAAD;AAAA,8BACI,QAAC,WAAD;AACI,QAAA,WAAW,EAAE,KAAKd,KAAL,CAAWtC,WAD5B;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,QAAQ,EAAEH,QAHd;AAII,QAAA,SAAS,EAAEyD,SAJf;AAKI,QAAA,KAAK,EAAEpC;AALX;AAAA;AAAA;AAAA;AAAA,cADJ,EAQKqC,wBARL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CADJ,KAcI,oBAAQ,QAAC,SAAD;AAAW,MAAA,WAAW,EAAE,MAAM;AAClC,aAAKT,QAAL,CAAc;AAAEM,UAAAA,SAAS,EAAE;AAAb,SAAd;AACA,aAAKd,KAAL,CAAWoB,UAAX;AACH,OAHO;AAIJ,MAAA,IAAI,EAAE,KAAKP,KAAL,CAAWC,SAJb;AAIwB,MAAA,YAAY,EAAE;AAJtC;AAAA;AAAA;AAAA;AAAA,YAAR;AAKP;;AA9HgC;;AAA/BhB,Y,CACKhC,S,GAAY;AACfmC,EAAAA,WAAW,EAAErD,SAAS,CAACyE,UAAV,CAAqBC,KAArB,EAA4BtD,UAD1B;AAEfT,EAAAA,QAAQ,EAAEX,SAAS,CAACmB,IAAV,CAAeC,UAFV;AAGfN,EAAAA,WAAW,EAAEd,SAAS,CAACqB,MAHR;AAIfmD,EAAAA,UAAU,EAAExE,SAAS,CAACmB,IAAV,CAAeC;AAJZ,C;AADjB8B,Y,CAQKyB,Y,GAAe;AAClB7D,EAAAA,WAAW,EAAE;AADK,C","sourcesContent":["import React, { useState, useEffect, Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Form from 'react-bootstrap/Form';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Popover from 'react-bootstrap/Popover';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport Axios from 'axios';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { ModalArt, ModalWork } from './Menu/RegistrationDrop/modals'\r\nimport './autocomplete.css';\r\n\r\nexport const Request = ({ onChange, toShow, label }) => {//Pedirá un dato con un input tipo text\r\n\r\n    let placeholder, auxStorage = label;\r\n\r\n    switch (toShow) {\r\n        case 'name':\r\n            label = 'Nombre del taller';\r\n            placeholder = 'Ingrese el nombre del/la tallerista';\r\n            break;\r\n        case 'article':\r\n            label = 'Número de artículo';\r\n            placeholder = 'Ingrese el código único del artículo';\r\n            break;\r\n        case 'quantityArticle':\r\n            label = 'Cantidad asignada';\r\n            placeholder = 'Ingrese la cantidad de artículos';\r\n            break;\r\n        case 'task':\r\n            label = 'Número de tarea';\r\n            placeholder = 'Ingrese el número de tarea';\r\n            break;\r\n        case 'money':\r\n            label = 'Monto';\r\n            placeholder = 'Ingrese el monto a pagar';\r\n            break;\r\n        case 'price':\r\n            label = 'Precio por unidad';\r\n            placeholder = 'Ingrese el precio por unidad';\r\n            break;\r\n        case 'description':\r\n            label = 'Descripción';\r\n            placeholder = 'Ingrese una breve descripción del artículo';\r\n            break;\r\n        case 'regName':\r\n            label = 'Nombre del taller';\r\n            placeholder = 'Ingrese el nombre del/la tallerista';\r\n            break;\r\n        case 'regArticle':\r\n            label = 'Número de artículo';\r\n            placeholder = 'Ingrese el código del artículo';\r\n            break;\r\n        case 'weight':\r\n            label = 'Peso de la tarea';\r\n            placeholder = 'Ingrese el peso entregado';\r\n            break;\r\n            case 'deadline':\r\n                label = 'Fecha de entrega';\r\n                placeholder = 'Ingrese la fecha de entrega (DD/MM/AAAA)';\r\n                break;\r\n        default:\r\n            console.log(\"ERROR, HA INGRESADO EL toShow \" + toShow + \" EN EL COMPONENTE TEXTINPUT\");\r\n    }\r\n    label = (auxStorage) ? auxStorage : label;\r\n    placeholder += '…';\r\n    return ((toShow === 'name') ? <NameRequest label={label} placeholder={placeholder} onChange={onChange} /> :\r\n        ((toShow === 'article') ? <ArticleRequest label={label} placeholder={placeholder} onChange={onChange} /> :\r\n            <Form.Group className=\"mb-3\">\r\n                <Form.Label>{label}</Form.Label>\r\n                <InputGroup>\r\n                    {(toShow === 'money') ? <InputGroup.Text>$</InputGroup.Text> : <></>}\r\n                    <FormControl type=\"text\" placeholder={placeholder} onChange={onChange} />\r\n                    {(toShow === 'money') ? <InputGroup.Text>.00</InputGroup.Text> : <></>}\r\n                </InputGroup>\r\n            </Form.Group>)\r\n    );\r\n}\r\n\r\nRequest.propTypes = {\r\n    onChange: PropTypes.func.isRequired, //Función a ejecutar cuando se modifica el input\r\n    toShow: PropTypes.string.isRequired,\r\n    label: PropTypes.string\r\n}\r\n\r\nconst ArticleRequest = ({ label, placeholder, onChange }) => {\r\n\r\n    const [id, setId] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [error, setError] = useState(false);\r\n    const [show, setShow] = useState(false);\r\n\r\n    const getDescription = (userInput) => {\r\n        Axios.post('http://localhost:3001/getDescriptionWhere', { id: userInput }).then((response) => {\r\n            setError(response.data.length === 0);\r\n            if (response.data.length !== 0)\r\n                setDescription(response.data[0].description);\r\n            else\r\n                setDescription('');\r\n        });\r\n    }\r\n\r\n    const popover = (\r\n        <Popover>\r\n            <Popover.Header as=\"h3\">Descripción de artículo</Popover.Header>\r\n            <Popover.Body>\r\n                {error ?\r\n                    <em>\r\n                        <p>No existe este código de artículo</p>\r\n                        <Button onClick={() => {\r\n                            setId('');\r\n                            setShow(true);\r\n                        }}>Ingresar</Button>\r\n                    </em>\r\n                    : description}\r\n            </Popover.Body>\r\n        </Popover >\r\n    );\r\n\r\n\r\n    if (!show)\r\n        return (\r\n            <Form.Group className=\"mb-3\">\r\n                <Form.Label>{label}</Form.Label>\r\n                <InputGroup>\r\n                    <OverlayTrigger show={id !== ''} placement=\"right\" overlay={popover}>\r\n                        <FormControl type=\"text\" placeholder={placeholder} onChange={(e) => {\r\n                            onChange(e);\r\n                            setId(e.target.value)\r\n                            getDescription(e.target.value);\r\n                        }} />\r\n                    </OverlayTrigger>\r\n                </InputGroup>\r\n            </Form.Group>);\r\n    return (<ModalArt handleClose={() => setShow(false)} show={show} registration={true} />);\r\n}\r\n\r\nArticleRequest.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired\r\n}\r\n\r\nconst NameRequest = ({ label, placeholder, onChange }) => {\r\n\r\n    const [list, setList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getList();\r\n    }, []);\r\n    const getList = () => {\r\n        Axios.get('http://localhost:3001/getNames').then((response) => {\r\n            setList(response.data);\r\n        });\r\n    }\r\n    return (\r\n        <Form.Group className=\"mb-3\">\r\n            <Form.Label>{label}</Form.Label>\r\n            <Autocomplete suggestions={list.map((element) => { return element.name })}\r\n                onChange={onChange} placeholder={placeholder} updateList={getList} />\r\n        </Form.Group>\r\n    );\r\n}\r\n\r\nNameRequest.propTypes = ArticleRequest.propTypes;\r\n\r\nclass Autocomplete extends Component {\r\n    static propTypes = {\r\n        suggestions: PropTypes.instanceOf(Array).isRequired,\r\n        onChange: PropTypes.func.isRequired,\r\n        placeholder: PropTypes.string,\r\n        updateList: PropTypes.func.isRequired\r\n    };\r\n\r\n    static defaultProps = {\r\n        placeholder: 'Ingrese el nombre del/la tallerista'\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            // The active selection's index\r\n            activeSuggestion: 0,\r\n            // The suggestions that match the user's input\r\n            filteredSuggestions: [],\r\n            // Whether or not the suggestion list is shown\r\n            showSuggestions: false,\r\n            // What the user has entered\r\n            userInput: \"\",\r\n            showModal: false\r\n        };\r\n    }\r\n\r\n    onChange = e => {\r\n        const { suggestions } = this.props;\r\n        const userInput = e.currentTarget.value;\r\n\r\n        // Filter our suggestions that don't contain the user's input\r\n        const filteredSuggestions = suggestions.filter(\r\n            suggestion =>\r\n                suggestion.toLowerCase().indexOf(userInput.toLowerCase()) > -1\r\n        );\r\n\r\n        this.setState({\r\n            activeSuggestion: 0,\r\n            filteredSuggestions,\r\n            showSuggestions: true,\r\n            userInput: e.currentTarget.value\r\n        });\r\n        this.props.onChange(e.currentTarget.value);\r\n    };\r\n\r\n    onClick = e => {\r\n        this.setState({\r\n            activeSuggestion: 0,\r\n            filteredSuggestions: [],\r\n            showSuggestions: false,\r\n            userInput: e.currentTarget.innerText\r\n        });\r\n        this.props.onChange(e.currentTarget.innerText);\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            onChange,\r\n            onClick,\r\n            onKeyDown,\r\n            state: {\r\n                activeSuggestion,\r\n                filteredSuggestions,\r\n                showSuggestions,\r\n                userInput\r\n            }\r\n        } = this;\r\n\r\n        let suggestionsListComponent;\r\n\r\n        if (showSuggestions && userInput) {\r\n            if (filteredSuggestions.length) {\r\n                suggestionsListComponent = (\r\n                    <ul className=\"suggestions\">\r\n                        {filteredSuggestions.map((suggestion, index) => {\r\n                            let className;\r\n\r\n                            // Flag the active suggestion with a class\r\n                            if (index === activeSuggestion) {\r\n                                className = \"suggestion-active\";\r\n                            }\r\n\r\n                            return (\r\n                                <li className={className} key={suggestion} onClick={onClick}>\r\n                                    {suggestion}\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                );\r\n            } else {\r\n                suggestionsListComponent = (\r\n                    <div className=\"no-suggestions\">\r\n                        <em>El taller ingresado no existe </em>\r\n                        <Button onClick={() => {\r\n                            this.setState({\r\n                                showModal: true\r\n                            })\r\n\r\n                        }}>Ingresar</Button>\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n\r\n        if (!this.state.showModal)\r\n            return (\r\n                <Fragment>\r\n                    <FormControl\r\n                        placeholder={this.props.placeholder}\r\n                        type=\"text\"\r\n                        onChange={onChange}\r\n                        onKeyDown={onKeyDown}\r\n                        value={userInput}\r\n                    />\r\n                    {suggestionsListComponent}\r\n                </Fragment>\r\n            );\r\n        else\r\n            return (<ModalWork handleClose={() => {\r\n                this.setState({ showModal: false });\r\n                this.props.updateList();\r\n            }}\r\n                show={this.state.showModal} registration={true} />);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\OneDrive\\\\Escritorio\\\\fabrica\\\\client\\\\src\\\\Menu\\\\deliverTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from 'react';\nimport { ModalOpener } from './modalOpener';\nimport { Request } from '../textInputs';\nimport Form from 'react-bootstrap/Form';\nimport image from './Images/DeliverTask.svg';\nimport moment from 'moment';\nimport Axios from 'axios';\nimport Table from 'react-bootstrap/Table';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class DeliverTask extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      task: '',\n      quantity: '',\n      money: '',\n      weight: '',\n      spare: false,\n      error: false\n    };\n\n    this.changeValue = (state, val) => {\n      this.setState({\n        [state]: val\n      });\n    };\n\n    this.myForm = () => {\n      return /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Request, {\n          toShow: \"name\",\n          onChange: element => {\n            this.setState({\n              name: element\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TaskRequest, {\n          name: this.state.name,\n          onChange: (data, task, error) => {\n            this.setState({\n              task,\n              quantity: data.quantity,\n              money: data.money,\n              weight: data.weight,\n              error\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.post = () => {\n      Axios.post('http://localhost:3001/newPart', {\n        task: this.state.task,\n        date: moment(new Date()).format(\"DD/MM/YYYY\"),\n        quantity: this.state.quantity,\n        weight: this.state.weight,\n        money: this.state.money\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(ModalOpener, {\n      buttonText: \"Recibir tarea\",\n      children: this.myForm(),\n      className: 'title',\n      logo: image,\n      title: 'Ingreso de tarea',\n      post: this.post,\n      error: this.state.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this) //Crea un botón que abre a un modal en el que aparecerá lo devuelto en this.myForm\n    ;\n  }\n\n}\nexport const TaskRequest = _ref => {\n  _s();\n\n  let {\n    onChange,\n    name\n  } = _ref;\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState('Elegir tarea');\n  const [parts, setParts] = useState([]);\n  const [input, setInput] = useState({\n    quantity: 0,\n    weight: 0,\n    money: 0\n  });\n  const [selectedTask, setSelectedTask] = useState('');\n  useEffect(() => {\n    if (name === '') return;\n    Axios.post('http://localhost:3001/getTasks', {\n      name\n    }).then(response => {\n      if (response.data.length === 0) return;\n      setTasks(response.data);\n    });\n  }, [name]);\n  useEffect(() => {\n    Axios.post('http://localhost:3001/getParts', {\n      task: selectedTask.id\n    }).then(response => setParts(response.data));\n  }, [selectedTask]);\n  useEffect(() => {\n    onChange(input, selectedTask.id, input.quantity > 0 && input.weight > 0 && input.money >= 0);\n  }, [input]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const getTable = () => {\n    let total = {\n      quantity: selectedTask.quantity,\n      weight: selectedTask.weight,\n      money: selectedTask.quantity * selectedTask.price\n    };\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [parts.map((part, index) => {\n        total = {\n          quantity: total.quantity - part.quantity,\n          weight: total.weight - part.weight,\n          money: total.money - part.money\n        };\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: part.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: part.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: total.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: part.weight\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: total.weight\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: '$' + part.money\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: '$' + total.money\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: moment(new Date()).format(\"DD/MM/YYYY\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            value: input.quantity,\n            onChange: e => {\n              if (isNaN(e.target.value)) return;\n              let aux = { ...input\n              };\n              aux.quantity = total.quantity < e.target.value ? total.quantity : e.target.value;\n              aux.quantity = e.target.value < 0 ? 0 : e.target.value;\n              aux.quantity = Math.round(e.target.value);\n              setInput({ ...aux\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: total.quantity - input.quantity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            value: input.weight,\n            onChange: e => {\n              if (isNaN(e.target.value)) return;\n              let aux = { ...input\n              };\n              aux.weight = total.weight < e.target.value ? total.weight : e.target.value;\n              aux.weight = e.target.value < 0 ? 0 : e.target.value;\n              setInput({ ...aux\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: total.weight - input.weight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            value: '$' + input.money,\n            onChange: e => {\n              if (isNaN(e.target.value)) return;\n              let aux = { ...input\n              };\n              aux.money = total.money < e.target.value ? total.money : e.target.value;\n              aux.money = e.target.value < 0 ? 0 : e.target.value;\n              setInput({ ...aux\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: '$' + (total.money - input.money)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DropdownButton, {\n      title: title,\n      onSelect: e => {\n        setTitle('T' + tasks[e].id + \": \" + tasks[e].article_id + \" (\" + tasks[e].article_description + \") x\" + tasks[e].quantity);\n        setSelectedTask(tasks[e]);\n      },\n      children: tasks.map((task, index) => {\n        return /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          eventKey: index,\n          children: task.id + \": \" + task.article_id + \" (\" + task.article_description + \") x\" + task.quantity\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this), title === 'Elegir tarea' ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Fecha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Cantidad entregada\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Cantidad total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Peso entregado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Peso total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Dinero entregado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Dinero total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: selectedTask.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: selectedTask.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: selectedTask.weight\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: '$' + selectedTask.price * selectedTask.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 25\n        }, this), getTable()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TaskRequest, \"reT0MbOWZ19VQOuGX+C+/baGakc=\");\n\n_c = TaskRequest;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskRequest\");","map":{"version":3,"sources":["C:/Users/PC/OneDrive/Escritorio/fabrica/client/src/Menu/deliverTask.js"],"names":["React","Component","useState","useEffect","ModalOpener","Request","Form","image","moment","Axios","Table","FormControl","Dropdown","DropdownButton","DeliverTask","state","task","quantity","money","weight","spare","error","changeValue","val","setState","myForm","element","name","data","post","date","Date","format","render","TaskRequest","onChange","tasks","setTasks","title","setTitle","parts","setParts","input","setInput","selectedTask","setSelectedTask","then","response","length","id","getTable","total","price","map","part","index","e","isNaN","target","value","aux","Math","round","article_id","article_description"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\r\nimport { ModalOpener } from './modalOpener';\r\nimport { Request } from '../textInputs';\r\nimport Form from 'react-bootstrap/Form';\r\nimport image from './Images/DeliverTask.svg';\r\nimport moment from 'moment';\r\nimport Axios from 'axios';\r\nimport Table from 'react-bootstrap/Table';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\n\r\n\r\nexport class DeliverTask extends Component {\r\n    state = {\r\n        task: '',\r\n        quantity: '',\r\n        money: '',\r\n        weight: '',\r\n        spare: false,\r\n        error: false\r\n    }\r\n\r\n    changeValue = (state, val) => {\r\n        this.setState({ [state]: val });\r\n    }\r\n\r\n    myForm = () => {\r\n        return (\r\n            <Form>\r\n                <Request toShow=\"name\" onChange={(element) => {\r\n                    this.setState({ name: element });\r\n                }} />\r\n\r\n                <TaskRequest name={this.state.name} onChange={(data, task, error) => {\r\n                    this.setState({ task, quantity: data.quantity, money: data.money, weight: data.weight, error });\r\n                }} />\r\n            </Form>\r\n        );\r\n    }\r\n\r\n    post = () => {\r\n        Axios.post('http://localhost:3001/newPart',\r\n            {\r\n                task: this.state.task, date: moment(new Date()).format(\"DD/MM/YYYY\"), quantity: this.state.quantity,\r\n                weight: this.state.weight, money: this.state.money\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ModalOpener buttonText='Recibir tarea' children={this.myForm()}\r\n                className={'title'} logo={image} title={'Ingreso de tarea'} post={this.post} error={this.state.error}/>\r\n            //Crea un botón que abre a un modal en el que aparecerá lo devuelto en this.myForm\r\n        );\r\n    }\r\n}\r\n\r\nexport const TaskRequest = ({ onChange, name }) => {\r\n\r\n    const [tasks, setTasks] = useState([]);\r\n    const [title, setTitle] = useState('Elegir tarea');\r\n    const [parts, setParts] = useState([]);\r\n    const [input, setInput] = useState({ quantity: 0, weight: 0, money: 0 });\r\n    const [selectedTask, setSelectedTask] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (name === '')\r\n            return;\r\n        Axios.post('http://localhost:3001/getTasks', { name }).then((response) => {\r\n            if (response.data.length === 0)\r\n                return;\r\n            setTasks(response.data);\r\n        })\r\n    }, [name]);\r\n\r\n    useEffect(() => {\r\n        Axios.post('http://localhost:3001/getParts', { task: selectedTask.id }).then((response) =>\r\n            setParts(response.data)\r\n        );\r\n    }, [selectedTask]);\r\n\r\n    useEffect(() => {\r\n        onChange(input, selectedTask.id,\r\n            (input.quantity > 0 && input.weight > 0 && input.money >= 0));\r\n    }, [input]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const getTable = () => {\r\n\r\n        let total = {\r\n            quantity: selectedTask.quantity,\r\n            weight: selectedTask.weight,\r\n            money: selectedTask.quantity * selectedTask.price\r\n        };\r\n        return (\r\n            <>\r\n                {parts.map((part, index) => {\r\n                    total = {\r\n                        quantity: total.quantity - part.quantity,\r\n                        weight: total.weight - part.weight,\r\n                        money: total.money - part.money\r\n                    };\r\n\r\n                    return (\r\n                        <tr key={index}>\r\n                            <td>{part.date}</td>\r\n                            <td>{part.quantity}</td>\r\n                            <td>{total.quantity}</td>\r\n                            <td>{part.weight}</td>\r\n                            <td>{total.weight}</td>\r\n                            <td>{'$' + part.money}</td>\r\n                            <td>{'$' + total.money}</td>\r\n                        </tr>\r\n                    );\r\n                })}\r\n                <tr>\r\n\r\n                    <td>{moment(new Date()).format(\"DD/MM/YYYY\")}</td>\r\n\r\n                    <td><FormControl value={input.quantity} onChange={(e) => {\r\n                        if(isNaN(e.target.value))\r\n                            return;\r\n                        let aux = { ...input };\r\n                        aux.quantity = (total.quantity < e.target.value) ? total.quantity : e.target.value;\r\n                        aux.quantity = (e.target.value < 0) ? 0 : e.target.value;\r\n                        aux.quantity = Math.round(e.target.value);\r\n                        setInput({ ...aux });\r\n                    }} /></td>\r\n\r\n                    <td>{total.quantity - input.quantity}</td>\r\n\r\n                    <td><FormControl value={input.weight} onChange={(e) => {\r\n                        if(isNaN(e.target.value))\r\n                            return;\r\n                        let aux = { ...input };\r\n                        aux.weight = (total.weight < e.target.value) ? total.weight : e.target.value;\r\n                        aux.weight = (e.target.value < 0) ? 0 : e.target.value;\r\n                        setInput({ ...aux });\r\n                    }} /></td>\r\n\r\n                    <td>{total.weight - input.weight}</td>\r\n\r\n                    <td><FormControl value={'$'+input.money} onChange={(e) => {\r\n                        if(isNaN(e.target.value))\r\n                            return;\r\n                        let aux = { ...input };\r\n                        aux.money = (total.money < e.target.value) ? total.money : e.target.value;\r\n                        aux.money = (e.target.value < 0) ? 0 : e.target.value;\r\n                        setInput({ ...aux });\r\n                    }} /></td>\r\n\r\n                    <td>{'$' + (total.money - input.money)}</td>\r\n\r\n                </tr>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <DropdownButton title={title} onSelect={(e) => {\r\n                setTitle('T' + tasks[e].id + \": \" + tasks[e].article_id + \" (\" + tasks[e].article_description + \") x\" + tasks[e].quantity);\r\n                setSelectedTask(tasks[e]);\r\n            }}>\r\n                {tasks.map((task, index) => {\r\n                    return (\r\n                        <Dropdown.Item key={task.id} eventKey={index}>\r\n                            {task.id + \": \" + task.article_id + \" (\" + task.article_description + \") x\" + task.quantity}\r\n                        </Dropdown.Item>\r\n                    );\r\n                })}\r\n            </DropdownButton>\r\n            {title === 'Elegir tarea' ? <></> :\r\n                <Table striped bordered>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Fecha</th>\r\n                            <th>Cantidad entregada</th>\r\n                            <th>Cantidad total</th>\r\n                            <th>Peso entregado</th>\r\n                            <th>Peso total</th>\r\n                            <th>Dinero entregado</th>\r\n                            <th>Dinero total</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>{selectedTask.date}</td>\r\n                            <td></td>\r\n                            <td>{selectedTask.quantity}</td>\r\n                            <td></td>\r\n                            <td>{selectedTask.weight}</td>\r\n                            <td></td>\r\n                            <td>{'$' + selectedTask.price * selectedTask.quantity}</td>\r\n                        </tr>\r\n                        {getTable()}\r\n                    </tbody>\r\n                </Table>}\r\n        </>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}
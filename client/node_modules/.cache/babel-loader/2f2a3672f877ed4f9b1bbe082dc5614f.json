{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\OneDrive\\\\Escritorio\\\\fabrica\\\\client\\\\src\\\\Menu\\\\asignTask.js\";\nimport React, { Component } from 'react';\nimport { ModalOpener } from './modalOpener';\nimport { Request, TaskRequest } from '../textInputs';\nimport image from './Images/AsignTask.svg';\nimport Axios from 'axios';\nimport Form from 'react-bootstrap/Form';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class AsignTaskButton extends Component {\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.selectedTask === prevState.selectedTask) return;\n    console.log(this.state.selectedTask);\n    this.setState({\n      packages: this.state.selectedTask.packages,\n      task: this.state.selectedTask.id,\n      description: this.state.selectedTask.article_description,\n      quantity: this.state.selectedTask.quantity\n    });\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      task: '',\n      deadline: '',\n      weight: '',\n      threads: '',\n      price: '',\n      //Auto-asignar\n      packages: '',\n      description: '',\n      quantity: '',\n      //Otros\n      selectedTask: [],\n      tasks: [],\n      title: 'Elegir Tarea'\n    };\n\n    this.myForm = () => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [this.state.packages ? /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Bultos: \", this.state.packages]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 39\n        }, this) : null, this.state.description ? /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Descripci\\xF3n: \", this.state.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 42\n        }, this) : null, this.state.quantity ? /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Cantidad: \", this.state.quantity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 39\n        }, this) : null, /*#__PURE__*/_jsxDEV(Request, {\n          toShow: \"name\",\n          onChange: event => {\n            this.setState({\n              name: event\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Request, {\n          toShow: \"deadline\",\n          onChange: event => {\n            this.setState({\n              deadline: event.target.value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TaskRequest, {\n          setSelectedTask: e => this.setState({\n            selectedTask: e\n          }),\n          tasks: this.state.tasks,\n          title: this.state.title,\n          setTitle: e => {\n            this.setState({\n              title: e\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Request, {\n          toShow: \"weight\",\n          onChange: event => {\n            this.setState({\n              weight: event.target.value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Request, {\n          toShow: \"price\",\n          onChange: event => {\n            this.setState({\n              price: event.target.value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Request, {\n          toShow: \"threads\",\n          onChange: event => {\n            this.setState({\n              threads: event.target.value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n    };\n\n    this.post = () => {\n      let aux = this.state,\n          selectedTask = this.state.selectedTask;\n      console.log(aux.task);\n      Axios.put('http://localhost:3001/asignTask', {\n        name: aux.name,\n        task: aux.task,\n        deadline: aux.deadline,\n        weight: aux.weight,\n        threads: aux.threads,\n        price: aux.price,\n        exitDate: moment(new Date()).format(\"DD/MM/YYYY\")\n      }).then(response => console.log(response));\n    };\n\n    Axios.post('http://localhost:3001/getTasks', {\n      state: 'toAsign'\n    }).then(response => {\n      this.setState({\n        tasks: response.data\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(ModalOpener, {\n      buttonText: \"Taller\",\n      children: this.myForm(),\n      className: 'title',\n      logo: image,\n      title: 'Asignar Tarea',\n      post: this.post\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this) //Crea un botón que abre a un modal en el que aparecerá lo devuelto en this.myForm\n    ;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/PC/OneDrive/Escritorio/fabrica/client/src/Menu/asignTask.js"],"names":["React","Component","ModalOpener","Request","TaskRequest","image","Axios","Form","moment","AsignTaskButton","componentDidUpdate","prevProps","prevState","state","selectedTask","console","log","setState","packages","task","id","description","article_description","quantity","constructor","props","name","deadline","weight","threads","price","tasks","title","myForm","event","target","value","e","post","aux","put","exitDate","Date","format","then","response","data","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { ModalOpener } from './modalOpener';\r\nimport { Request, TaskRequest } from '../textInputs';\r\nimport image from './Images/AsignTask.svg';\r\nimport Axios from 'axios';\r\nimport Form from 'react-bootstrap/Form';\r\nimport moment from 'moment';\r\n\r\nexport class AsignTaskButton extends Component {\r\n    state = {\r\n        name: '',\r\n        task: '',\r\n        deadline: '',\r\n        weight: '',\r\n        threads: '',\r\n        price: '',\r\n        //Auto-asignar\r\n        packages: '',\r\n        description: '',\r\n        quantity: '',\r\n        //Otros\r\n        selectedTask: [],\r\n        tasks: [],\r\n        title: 'Elegir Tarea'\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.state.selectedTask === prevState.selectedTask)\r\n          return;\r\n        console.log(this.state.selectedTask);\r\n        this.setState({ packages: this.state.selectedTask.packages, task: this.state.selectedTask.id,\r\n            description: this.state.selectedTask.article_description, quantity: this.state.selectedTask.quantity });\r\n      }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        Axios.post('http://localhost:3001/getTasks', { state: 'toAsign' }).then((response) => {\r\n            this.setState({ tasks: response.data });\r\n        });\r\n    }\r\n\r\n    myForm = () => {\r\n        return (\r\n            <>\r\n                {this.state.packages? <h3>Bultos: {this.state.packages}</h3> : null}\r\n                {this.state.description? <h3>Descripción: {this.state.description}</h3> : null}\r\n                {this.state.quantity? <h3>Cantidad: {this.state.quantity}</h3> : null}\r\n\r\n                <Request toShow=\"name\" onChange={(event) => {\r\n                    this.setState({ name: event });\r\n                }} />\r\n\r\n                <Request toShow=\"deadline\" onChange={(event) => {\r\n                    this.setState({ deadline: event.target.value });\r\n                }} />\r\n\r\n                <TaskRequest setSelectedTask={(e) => this.setState({ selectedTask: e })} tasks={this.state.tasks}\r\n                    title={this.state.title} setTitle={(e) => { this.setState({ title: e }) }} />\r\n\r\n                <Request toShow=\"weight\" onChange={(event) => {\r\n                    this.setState({ weight: event.target.value });\r\n                }} />\r\n\r\n                <Request toShow=\"price\" onChange={(event) => {\r\n                    this.setState({ price: event.target.value });\r\n                }} />\r\n\r\n                <Request toShow=\"threads\" onChange={(event) => {\r\n                    this.setState({ threads: event.target.value });\r\n                }} />\r\n            </>\r\n        );\r\n    }\r\n\r\n    post = () => {\r\n        let aux = this.state, selectedTask = this.state.selectedTask;\r\n        console.log(aux.task);\r\n        Axios.put('http://localhost:3001/asignTask', { \r\n            name: aux.name, task: aux.task, deadline: aux.deadline, weight: aux.weight, threads: aux.threads,\r\n            price: aux.price, exitDate: moment(new Date()).format(\"DD/MM/YYYY\")\r\n        }).then((response) => console.log(response));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ModalOpener buttonText='Taller' children={this.myForm()}\r\n                className={'title'} logo={image} title={'Asignar Tarea'} post={this.post} />\r\n            //Crea un botón que abre a un modal en el que aparecerá lo devuelto en this.myForm\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\OneDrive\\\\Escritorio\\\\fabrica\\\\client\\\\src\\\\Menu\\\\deliverTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from 'react';\nimport { ModalOpener } from './modalOpener';\nimport { Request, TaskRequest } from '../textInputs';\nimport Form from 'react-bootstrap/Form';\nimport image from './Images/DeliverTask.svg';\nimport moment from 'moment';\nimport Axios from 'axios';\nimport Table from 'react-bootstrap/Table';\nimport FormControl from 'react-bootstrap/FormControl';\nimport { ModalPrototype } from '../modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  error: true,\n  errors: [true, true],\n  showObsModal: false,\n  task: '',\n  name: '',\n  quantity: '',\n  money: '',\n  weight: '',\n  threads: '',\n  price: '',\n  faulty: '',\n  completed: false,\n  calification: '',\n  observation: ''\n};\nexport class DeliverTaskButton extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = initialState;\n\n    this.resetState = () => {\n      this.setState(initialState);\n    };\n\n    this.updateError = (index, error) => {\n      let errors = [...this.state.errors];\n      errors[index] = error;\n      this.setState({\n        errors\n      });\n      let aux = false;\n      errors.map((e, key) => {\n        aux = aux && key === index ? error : e;\n      });\n      this.setState({\n        error: aux\n      });\n    };\n\n    this.myForm = () => {\n      return /*#__PURE__*/_jsxDEV(Form, {\n        id: \"toPrint\",\n        children: [/*#__PURE__*/_jsxDEV(Request, {\n          toShow: \"name\",\n          onChange: (value, error) => {\n            this.setState({\n              name: value\n            });\n            this.updateError(0, error);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: this.state.name,\n          onChange: (data, price, faulty, task, error, completed) => {\n            this.setState({\n              task,\n              quantity: data.quantity,\n              money: data.money,\n              weight: data.weight,\n              threads: data.threads,\n              completed,\n              price,\n              faulty\n            });\n            this.updateError(1, error);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.post = () => {\n      let aux = this.state;\n      this.resetState();\n      Axios.post('http://localhost:3001/getTasks', {\n        id: aux.task\n      }).then(response => {\n        Axios.put('http://localhost:3001/payWorkshop', {\n          name: response.data[0].name,\n          money: aux.money - aux.quantity * aux.price\n        });\n      });\n      Axios.post('http://localhost:3001/newPart', {\n        task: aux.task,\n        date: moment(new Date()).format('DD/MM/YYYY'),\n        quantity: aux.quantity,\n        weight: Number(aux.weight).toFixed(1),\n        money: Number(aux.money).toFixed(1),\n        threads: aux.threads\n      }).then(() => {\n        if (aux.completed) this.setState({\n          showObsModal: true\n        });\n      });\n    };\n\n    this.completelyReturned = () => {\n      console.log('HI');\n      Axios.put('http://localhost:3001/printObs', {\n        id: this.state.task,\n        observations: this.state.observation,\n        calification: this.state.calification,\n        faulty: this.state.faulty\n      });\n      this.setState({\n        showObsModal: false\n      });\n    };\n\n    this.print = () => {\n      if (this.state.error) {\n        alert('Error. No se puede imprimir una boleta invÃ¡lida.');\n        return;\n      }\n\n      var printContents = document.getElementById('toPrint').innerHTML;\n      var originalContents = document.body.innerHTML;\n      document.body.innerHTML = printContents;\n      window.print();\n      document.body.innerHTML = originalContents;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ModalOpener, {\n        buttonText: \"Recibir tarea\",\n        children: this.myForm(),\n        logo: image,\n        className: \"title\",\n        footer: {\n          label: 'Imprimir',\n          func: this.print,\n          show: !!document.getElementById(\"taskTable\")\n        },\n        title: \"Ingreso de tarea\",\n        post: this.post,\n        error: this.state.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalPrototype, {\n        show: this.state.showObsModal,\n        post: this.completelyReturned,\n        title: \"Calificar\",\n        handleClose: () => {\n          this.completelyReturned();\n          this.resetState();\n        },\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Request, {\n            toShow: \"observation\",\n            onChange: e => this.setState({\n              observation: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Request, {\n            toShow: \"calification\",\n            onChange: e => this.setState({\n              calification: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\nexport const Input = _ref => {\n  _s();\n\n  let {\n    onChange,\n    name\n  } = _ref;\n  const [title, setTitle] = useState('Elegir tarea');\n  const [tasks, setTasks] = useState([]);\n  const [parts, setParts] = useState([]);\n  const [input, setInput] = useState({\n    quantity: 0,\n    weight: 0,\n    money: 0,\n    threads: 0\n  });\n  const [selectedTask, setSelectedTask] = useState('');\n  const [refund, setRefund] = useState(false);\n  const [completed, setCompleted] = useState(false);\n  const [account, setAccount] = useState('');\n  const [quantityBackUp, setQuantityBackUp] = useState('');\n  useEffect(() => {\n    setInput({\n      quantity: 0,\n      weight: 0,\n      money: 0,\n      threads: 0\n    });\n    Axios.post('http://localhost:3001/getParts', {\n      task: selectedTask.id\n    }).then(response => setParts(response.data));\n    if (name) Axios.post('http://localhost:3001/getAccount', {\n      name\n    }).then(response => setAccount(response.data[0].money));\n  }, [selectedTask]);\n  useEffect(() => {\n    let delivered = input.quantity;\n    let totalMoney = selectedTask.quantity * selectedTask.price - account;\n    parts.map(part => delivered += part.quantity);\n\n    if (quantityBackUp !== input.quantity) {\n      input.money = input.quantity * selectedTask.price;\n      if (input.money > totalMoney) input.money = totalMoney;\n      setQuantityBackUp(input.quantity);\n    }\n\n    onChange(input, selectedTask.price, selectedTask.quantity - delivered, selectedTask.id, !(input.quantity !== 0 && input.weight !== 0), delivered === selectedTask.quantity || completed);\n  }, [input, completed, refund]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const inputField = (property, total) => {\n    return /*#__PURE__*/_jsxDEV(FormControl, {\n      value: input[property],\n      onChange: e => {\n        if (isNaN(e.target.value) || total[property] < e.target.value && property !== 'money') return;\n        let aux = { ...input\n        };\n        aux[property] = e.target.value;\n        aux[property] = refund ? -Math.abs(aux[property]) : aux[property] < 0 ? 0 : aux[property];\n        if (property === 'quantity' || property === 'threads') aux[property] = Math.round(aux[property]);\n        setInput({ ...aux\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this);\n  };\n\n  const getTable = () => {\n    let total = {\n      quantity: selectedTask.quantity,\n      weight: selectedTask.weight,\n      money: selectedTask.quantity * selectedTask.price - account,\n      threads: selectedTask.threads\n    };\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [parts.map((part, index) => {\n        total = {\n          quantity: total.quantity - part.quantity,\n          weight: total.weight - part.weight,\n          money: total.money - part.money,\n          threads: total.threads - part.threads\n        };\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: part.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: part.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: total.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: Number(part.weight).toFixed(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: Number(total.weight).toFixed(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: part.threads\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: total.threads\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: '$' + Number(part.money).toFixed(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: '$' + Number(total.money).toFixed(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: moment(new Date()).format('DD/MM/YYYY')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: inputField('quantity', total)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: total.quantity - input.quantity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: inputField('weight', total)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: (total.weight - input.weight).toFixed(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: inputField('threads', total)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: total.threads - input.threads\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: inputField('money', total)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: '$' + (total.money - input.money).toFixed(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  };\n\n  const getExceeded = () => {\n    //Devuelve true si se excediÃ³ la fecha de entrega\n    if (!selectedTask.deadline) return;\n    let today = new Date();\n    today.setHours(0, 0, 0, 0);\n    var dateParts = selectedTask.deadline.split('/');\n    var deadline = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\n    return today > deadline;\n  };\n\n  if (name !== '') {\n    Axios.post('http://localhost:3001/getTasks', {\n      name,\n      state: 'asigned'\n    }).then(response => {\n      if (response.data.length === 0) return;\n      setTasks(response.data);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        'justifyContent': 'space-between',\n        'display': 'flex',\n        'alignItems': 'baseline'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TaskRequest, {\n        setSelectedTask: setSelectedTask,\n        tasks: tasks,\n        title: title,\n        setTitle: setTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          'color': getExceeded() ? 'red' : 'green'\n        },\n        children: selectedTask === '' ? null : selectedTask.deadline\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }, this), title === 'Elegir tarea' ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n        onChange: () => {\n          setRefund(!refund);\n          input.money = -input.money;\n          input.quantity = -input.quantity;\n          input.threads = -input.threads;\n          input.weight = -input.weight;\n        },\n        label: \"Devoluci\\xF3n o correcci\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n        onChange: () => setCompleted(!completed),\n        label: \"Tarea cerrada\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        id: \"taskTable\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Fecha\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Cantidad entregada por el taller\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Cantidad total de la tarea\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Peso entregado por el taller\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Peso total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Hilos devueltos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Hilos totales\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Dinero entregado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Dinero total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              'backgroundColor': 'green'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: selectedTask.exitDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: selectedTask.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: selectedTask.weight\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: selectedTask.threads\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: '$' + account + ' (A CTA)'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: '$' + selectedTask.price * selectedTask.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 29\n          }, this), getTable()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_s(Input, \"BmUiLrZJWQkCwSvh2OvKe1WBWv4=\");\n\n_c = Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["C:/Users/PC/OneDrive/Escritorio/fabrica/client/src/Menu/deliverTask.js"],"names":["React","Component","useState","useEffect","ModalOpener","Request","TaskRequest","Form","image","moment","Axios","Table","FormControl","ModalPrototype","initialState","error","errors","showObsModal","task","name","quantity","money","weight","threads","price","faulty","completed","calification","observation","DeliverTaskButton","state","resetState","setState","updateError","index","aux","map","e","key","myForm","value","data","post","id","then","response","put","date","Date","format","Number","toFixed","completelyReturned","console","log","observations","print","alert","printContents","document","getElementById","innerHTML","originalContents","body","window","render","label","func","show","target","Input","onChange","title","setTitle","tasks","setTasks","parts","setParts","input","setInput","selectedTask","setSelectedTask","refund","setRefund","setCompleted","account","setAccount","quantityBackUp","setQuantityBackUp","delivered","totalMoney","part","inputField","property","total","isNaN","Math","abs","round","getTable","getExceeded","deadline","today","setHours","dateParts","split","length","exitDate"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\r\nimport { ModalOpener } from './modalOpener';\r\nimport { Request, TaskRequest } from '../textInputs';\r\nimport Form from 'react-bootstrap/Form';\r\nimport image from './Images/DeliverTask.svg';\r\nimport moment from 'moment';\r\nimport Axios from 'axios';\r\nimport Table from 'react-bootstrap/Table';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport { ModalPrototype } from '../modal';\r\n\r\nconst initialState = {\r\n    error: true,\r\n    errors: [true, true],\r\n    showObsModal: false,\r\n    task: '',\r\n    name: '',\r\n    quantity: '',\r\n    money: '',\r\n    weight: '',\r\n    threads: '',\r\n    price: '',\r\n    faulty: '',\r\n    completed: false,\r\n    calification: '',\r\n    observation: ''\r\n}\r\n\r\nexport class DeliverTaskButton extends Component {\r\n\r\n    state = initialState;\r\n\r\n    resetState = () => {\r\n        this.setState(initialState);\r\n    }\r\n\r\n    updateError = (index, error) => {\r\n        let errors = [...this.state.errors];\r\n        errors[index] = error;\r\n        this.setState({ errors });\r\n\r\n        let aux = false;\r\n        errors.map((e, key) => {\r\n            aux = aux && (key === index) ? error : e;\r\n        });\r\n        this.setState({ error: aux });\r\n    }\r\n\r\n    myForm = () => {\r\n        return (\r\n            <Form id='toPrint'>\r\n                <Request toShow='name' onChange={(value, error) => {\r\n                    this.setState({ name: value });\r\n                    this.updateError(0, error);\r\n                }} />\r\n                <Input name={this.state.name} onChange={(data, price, faulty, task, error, completed) => {\r\n                    this.setState({\r\n                        task, quantity: data.quantity, money: data.money, weight: data.weight,\r\n                        threads: data.threads, completed, price, faulty\r\n                    });\r\n                    this.updateError(1, error);\r\n                }} />\r\n            </Form>\r\n        );\r\n    }\r\n\r\n    post = () => {\r\n        let aux = this.state;\r\n        this.resetState();\r\n        Axios.post('http://localhost:3001/getTasks', { id: aux.task }).then((response) => {\r\n            Axios.put('http://localhost:3001/payWorkshop',\r\n                { name: response.data[0].name, money: aux.money - aux.quantity * aux.price })\r\n        });\r\n        Axios.post('http://localhost:3001/newPart',\r\n            {\r\n                task: aux.task, date: moment(new Date()).format('DD/MM/YYYY'), quantity: aux.quantity,\r\n                weight: Number(aux.weight).toFixed(1), money: Number(aux.money).toFixed(1), threads: aux.threads\r\n            }).then(() => {\r\n                if (aux.completed)\r\n                    this.setState({ showObsModal: true });\r\n            });\r\n    }\r\n\r\n    completelyReturned = () => {\r\n        console.log('HI');\r\n        Axios.put('http://localhost:3001/printObs',\r\n            { id: this.state.task, observations: this.state.observation, calification: this.state.calification,\r\n                faulty: this.state.faulty });\r\n        this.setState({ showObsModal: false })\r\n    }\r\n\r\n    print = () => {\r\n        if(this.state.error) {\r\n            alert('Error. No se puede imprimir una boleta invÃ¡lida.');\r\n            return;\r\n        }\r\n        var printContents = document.getElementById('toPrint').innerHTML;\r\n        var originalContents = document.body.innerHTML;\r\n        document.body.innerHTML = printContents;\r\n        window.print();\r\n        document.body.innerHTML = originalContents;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <ModalOpener buttonText=\"Recibir tarea\" children={this.myForm()} logo={image} className=\"title\"\r\n                    footer={{ label: 'Imprimir', func: this.print, show: !!document.getElementById(\"taskTable\") }}\r\n                    title=\"Ingreso de tarea\" post={this.post} error={this.state.error} />\r\n                {/*Crea un botÃ³n que abre a un modal en el que aparecerÃ¡ lo devuelto en this.myForm*/}\r\n\r\n                <ModalPrototype show={this.state.showObsModal} post={this.completelyReturned} title=\"Calificar\"\r\n                    handleClose={() => {\r\n                        this.completelyReturned();\r\n                        this.resetState();\r\n                    }}>\r\n                    <>\r\n                        <Request toShow=\"observation\" onChange={(e) => this.setState({ observation: e.target.value })} />\r\n                        <Request toShow=\"calification\" onChange={(e) => this.setState({ calification: e.target.value })} />\r\n                    </>\r\n                </ModalPrototype>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport const Input = ({ onChange, name }) => {\r\n\r\n    const [title, setTitle] = useState('Elegir tarea');\r\n    const [tasks, setTasks] = useState([]);\r\n    const [parts, setParts] = useState([]);\r\n    const [input, setInput] = useState({ quantity: 0, weight: 0, money: 0, threads: 0 });\r\n    const [selectedTask, setSelectedTask] = useState('');\r\n    const [refund, setRefund] = useState(false);\r\n    const [completed, setCompleted] = useState(false);\r\n    const [account, setAccount] = useState('');\r\n    const [quantityBackUp, setQuantityBackUp] = useState('');\r\n\r\n    useEffect(() => {\r\n        setInput({ quantity: 0, weight: 0, money: 0, threads: 0 });\r\n        Axios.post('http://localhost:3001/getParts', { task: selectedTask.id }).then(response => setParts(response.data));\r\n        if (name)\r\n            Axios.post('http://localhost:3001/getAccount', { name }).then(response => setAccount(response.data[0].money));\r\n    }, [selectedTask]);\r\n\r\n    useEffect(() => {\r\n        let delivered = input.quantity;\r\n        let totalMoney = selectedTask.quantity * selectedTask.price - account;\r\n        parts.map(part => delivered += part.quantity);\r\n\r\n        if (quantityBackUp !== input.quantity) {\r\n            input.money = input.quantity * selectedTask.price;\r\n            if (input.money > totalMoney)\r\n                input.money = totalMoney;\r\n            setQuantityBackUp(input.quantity);\r\n        }\r\n        onChange(input, selectedTask.price, selectedTask.quantity - delivered, selectedTask.id,\r\n            !(input.quantity !== 0 && input.weight !== 0), (delivered === selectedTask.quantity || completed));\r\n    }, [input, completed, refund]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const inputField = (property, total) => {\r\n        return (\r\n            <FormControl value={input[property]}\r\n                onChange={(e) => {\r\n                    if (isNaN(e.target.value) || (total[property] < e.target.value && property !== 'money'))\r\n                        return;\r\n                    let aux = { ...input };\r\n                    aux[property] = e.target.value;\r\n                    aux[property] = (refund) ?\r\n                        -Math.abs(aux[property]) :\r\n                        (aux[property] < 0) ? 0 : aux[property];\r\n                    if (property === 'quantity' || property === 'threads')\r\n                        aux[property] = Math.round(aux[property]);\r\n                    setInput({ ...aux });\r\n                }} />\r\n        );\r\n    }\r\n\r\n    const getTable = () => {\r\n\r\n        let total = {\r\n            quantity: selectedTask.quantity,\r\n            weight: selectedTask.weight,\r\n            money: selectedTask.quantity * selectedTask.price - account,\r\n            threads: selectedTask.threads\r\n        };\r\n        return (\r\n            <>\r\n                {parts.map((part, index) => {\r\n                    total = {\r\n                        quantity: total.quantity - part.quantity,\r\n                        weight: total.weight - part.weight,\r\n                        money: total.money - part.money,\r\n                        threads: total.threads - part.threads,\r\n                    };\r\n                    return (\r\n                        <tr key={index}>{/*Muestra el medio*/}\r\n                            <td>{part.date}</td>\r\n                            <td>{part.quantity}</td>\r\n                            <td>{total.quantity}</td>\r\n                            <td>{Number(part.weight).toFixed(1)}</td>\r\n                            <td>{Number(total.weight).toFixed(1)}</td>\r\n                            <td>{part.threads}</td>\r\n                            <td>{total.threads}</td>\r\n                            <td>{'$' + Number(part.money).toFixed(1)}</td>\r\n                            <td>{'$' + Number(total.money).toFixed(1)}</td>\r\n                        </tr>\r\n                    );\r\n                })}\r\n                <tr>{/*Muestra la Ãºltima fila*/}\r\n                    <td>{moment(new Date()).format('DD/MM/YYYY')}</td>\r\n                    <td>{inputField('quantity', total)}</td>\r\n                    <td>{total.quantity - input.quantity}</td>\r\n                    <td>{inputField('weight', total)}</td>\r\n                    <td>{(total.weight - input.weight).toFixed(1)}</td>\r\n                    <td>{inputField('threads', total)}</td>\r\n                    <td>{total.threads - input.threads}</td>\r\n                    <td>{inputField('money', total)}</td>\r\n                    <td>{'$' + (total.money - input.money).toFixed(1)}</td>\r\n                </tr>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const getExceeded = () => {//Devuelve true si se excediÃ³ la fecha de entrega\r\n        if (!selectedTask.deadline)\r\n            return;\r\n        let today = new Date();\r\n        today.setHours(0, 0, 0, 0);\r\n        var dateParts = selectedTask.deadline.split('/');\r\n        var deadline = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        return today > deadline;\r\n    }\r\n\r\n    if (name !== '') {\r\n        Axios.post('http://localhost:3001/getTasks', { name, state: 'asigned' }).then((response) => {\r\n            if (response.data.length === 0)\r\n                return;\r\n            setTasks(response.data);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={{ 'justifyContent': 'space-between', 'display': 'flex', 'alignItems': 'baseline' }}>\r\n                <TaskRequest setSelectedTask={setSelectedTask} tasks={tasks} title={title} setTitle={setTitle} />\r\n                <h4 style={{ 'color': getExceeded() ? 'red' : 'green' }}>\r\n                    {(selectedTask === '') ? null : selectedTask.deadline}\r\n                </h4>\r\n            </div>\r\n            {title === 'Elegir tarea' ? <></> :\r\n                <>\r\n                    <Form.Check onChange={() => {\r\n                        setRefund(!refund);\r\n                        input.money = -input.money;\r\n                        input.quantity = -input.quantity;\r\n                        input.threads = -input.threads;\r\n                        input.weight = -input.weight;\r\n                    }} label=\"DevoluciÃ³n o correcciÃ³n\" />\r\n                    <Form.Check onChange={() => setCompleted(!completed)} label=\"Tarea cerrada\" />\r\n                    <Table striped bordered id=\"taskTable\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Fecha</th>\r\n                                <th>Cantidad entregada por el taller</th>\r\n                                <th>Cantidad total de la tarea</th>\r\n                                <th>Peso entregado por el taller</th>\r\n                                <th>Peso total</th>\r\n                                <th>Hilos devueltos</th>\r\n                                <th>Hilos totales</th>\r\n                                <th>Dinero entregado</th>\r\n                                <th>Dinero total</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr style={{ 'backgroundColor': 'green' }}>{/*Muestra el primero*/}\r\n                                <td>{selectedTask.exitDate}</td>\r\n                                <td></td>\r\n                                <td>{selectedTask.quantity}</td>\r\n                                <td></td>\r\n                                <td>{selectedTask.weight}</td>\r\n                                <td></td>\r\n                                <td>{selectedTask.threads}</td>\r\n                                <td>{'$' + account + ' (A CTA)'}</td>\r\n                                <td>{'$' + selectedTask.price * selectedTask.quantity}</td>\r\n                            </tr>\r\n                            {getTable()}\r\n                        </tbody>\r\n                    </Table>\r\n                </>\r\n            }\r\n        </>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}
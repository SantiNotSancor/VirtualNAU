{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lab2\\\\Documents\\\\GitHub\\\\VirtualNAU\\\\client\\\\src\\\\WorkshopsAdm\\\\deliverTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from 'react';\nimport { ModalOpener } from '../modalOpener';\nimport { Request, TaskRequest } from '../textInputs';\nimport Form from 'react-bootstrap/Form';\nimport image from './Images/DeliverTask.svg';\nimport moment from 'moment';\nimport Axios from 'axios';\nimport Table from 'react-bootstrap/Table';\nimport FormControl from 'react-bootstrap/FormControl';\nimport { ModalPrototype } from '../modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  error: true,\n  errors: [true, true],\n  showObsModal: false,\n  task: '',\n  name: '',\n  quantity: '',\n  money: '',\n  weight: '',\n  threads: '',\n  price: '',\n  faulty: '',\n  completed: false,\n  calification: '',\n  observation: '',\n  paid: false\n};\nexport class DeliverTaskButton extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = initialState;\n    this.form = /*#__PURE__*/React.createRef();\n\n    this.resetState = () => {\n      this.setState(initialState);\n    };\n\n    this.updateError = (index, error) => {\n      let errors = [...this.state.errors];\n      errors[index] = error;\n      this.setState({\n        errors\n      });\n      let aux = false;\n      errors.map((e, key) => aux = aux && key === index ? error : e);\n      this.setState({\n        error: aux\n      });\n    };\n\n    this.handleEnter = event => {\n      if (event.key.toLowerCase() !== 'enter') return;\n      const form = this.form.current;\n      const index = [...form].indexOf(event.target);\n      if (form.elements[index + 1]) form.elements[index + 1].focus();\n    };\n\n    this.myForm = () => {\n      return /*#__PURE__*/_jsxDEV(Form, {\n        id: \"toPrint\",\n        ref: this.form,\n        onSubmit: e => e.preventDefault(),\n        children: [/*#__PURE__*/_jsxDEV(Request, {\n          toShow: \"name\",\n          handleEnter: this.handleEnter,\n          onChange: (value, error) => {\n            this.setState({\n              name: value\n            });\n            this.updateError(0, error);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: this.state.name,\n          onChange: (data, price, faulty, task, completed, paid) => {\n            this.setState({\n              task,\n              quantity: data.quantity,\n              money: data.money,\n              weight: data.weight,\n              threads: data.threads,\n              completed,\n              price,\n              faulty,\n              paid\n            });\n            this.updateError(1, false);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.post = () => {\n      let aux = this.state;\n      let paid = false; //TODO: Debe ser true si y sólo si se pagó por completo a la tarea\n\n      if (!aux.completed) this.resetState();\n      Axios.post('http://localhost:3307/getTasks', {\n        id: aux.task\n      }).then(response => {\n        Axios.put('http://localhost:3307/payWorkshop', {\n          name: response.data[0].name,\n          money: aux.money - aux.quantity * aux.price\n        });\n      });\n      Axios.post('http://localhost:3307/newPart', {\n        name: aux.name,\n        task: aux.task,\n        date: moment(new Date()).format('DD/MM/YYYY'),\n        quantity: aux.quantity,\n        weight: Number(aux.weight).toFixed(1),\n        money: Number(aux.money).toFixed(1),\n        threads: aux.threads,\n        paid\n      }).then(() => {\n        if (aux.completed) this.setState({\n          showObsModal: true\n        });\n      });\n    };\n\n    this.completelyReturned = () => {\n      Axios.put('http://localhost:3307/printObs', {\n        id: this.state.task,\n        observations: this.state.observation,\n        calification: this.state.calification,\n        faulty: this.state.faulty\n      });\n    };\n\n    this.print = () => {\n      if (this.state.error) {\n        alert('Error. No se puede imprimir una boleta inválida.');\n        return;\n      }\n\n      var printContents = document.getElementById('toPrint').innerHTML;\n      var originalContents = document.body.innerHTML;\n      document.body.innerHTML = printContents;\n      window.print();\n      document.body.innerHTML = originalContents;\n    };\n\n    this.sendObs = () => {\n      this.completelyReturned();\n      this.resetState();\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ModalOpener, {\n        buttonText: \"Recibir tarea\",\n        children: this.myForm(),\n        logo: image,\n        className: \"title\",\n        footer: {\n          label: 'Imprimir',\n          func: this.print,\n          show: !!document.getElementById(\"taskTable\")\n        },\n        title: \"Ingreso de tarea\",\n        post: this.post,\n        error: this.state.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalPrototype, {\n        title: \"Calificar\",\n        show: this.state.showObsModal,\n        post: this.sendObs,\n        handleClose: this.sendObs,\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Request, {\n            toShow: \"observation\",\n            onChange: e => this.setState({\n              observation: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Request, {\n            toShow: \"calification\",\n            onChange: e => this.setState({\n              calification: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\nexport const Input = _ref => {\n  _s();\n\n  let {\n    onChange,\n    name\n  } = _ref;\n  const [title, setTitle] = useState('Elegir tarea'); //Título del selectBox. Primero va a ser 'Elegir tarea' pero luego va a mostrar la tarea elegida\n\n  const [tasks, setTasks] = useState([]); //Todas las tareas que no se le pagaron por completo al taller\n\n  const [parts, setParts] = useState([]); //Todas las entregas parciales de la tarea elegida\n\n  const [input, setInput] = useState({\n    quantity: 0,\n    weight: 0,\n    money: 0,\n    threads: 0\n  }); //Lo ingresado por el usuario en la tabla\n\n  const [selectedTask, setSelectedTask] = useState(''); //La tarea elegida\n\n  const [refund, setRefund] = useState(false); //Está cargando una devolución?\n\n  const [completed, setCompleted] = useState(false); //El taller entregó el total de la mercadería?\n\n  const [account, setAccount] = useState(''); //Dinero que le fue pagado al taller anteriormente (la cuenta corriente) y que ahora se utilizará para pagar la tarea\n\n  const [quantityBackUp, setQuantityBackUp] = useState(''); //Una variable auxiliar para recordar la cantidad\n\n  useEffect(() => {\n    //Cuando selectedTask cambia...\n    setInput({\n      quantity: 0,\n      weight: 0,\n      money: 0,\n      threads: 0\n    }); //Resetear los valores de Input (porque el usuario no ingresó nada)\n\n    Axios.post('http://localhost:3307/getParts', {\n      task: selectedTask.id\n    }).then(response => setParts(response.data)); //Recuperar partes desde la BD y asignarselas a parts\n\n    if (name) //Si se sabe el nombre del taller...\n      Axios.post('http://localhost:3307/getAccount', {\n        name\n      }).then(response => {\n        //Recuperar de la BD la cuenta corriente del taller\n        let totalMoney = selectedTask.quantity * selectedTask.price,\n            res = response.data[0].money; //totalMoney es lo que se deberá pagar por la tarea entera y res es la cuenta corriente del taller\n\n        setAccount(totalMoney < res ? totalMoney : res); //account debe ser el menor de totalMoney y res, ya que si totalMoney es mayor a res, no alcanza a pagar todo, mientras que si totalMoney es menor a res, el taller va a tener un resto de cuenta corriente\n\n        Axios.put('http://localhost:3307/setAccount', {\n          leftover: totalMoney < res ? res - totalMoney : 0,\n          name\n        }); //Actualizar el dinero que posee a cuenta el taller\n      });\n  }, [selectedTask]);\n  useEffect(() => {\n    let delivered = input.quantity,\n        totalMoney = selectedTask.quantity * selectedTask.price; //delivered es la cantidad total devuelta por el taller (en todas las partes) y totalMoney es lo que se deberá pagar por la tarea entera\n\n    parts.map(part => delivered += part.quantity); //Sumar a delivered todas las cantidades entregadas en cada parte\n\n    if (quantityBackUp !== input.quantity) {\n      //???\n      input.money = input.quantity * selectedTask.price - account; //Le recomienda al usuario pagar todo lo que debe pagar (lo entregado en esta parte * el precio acordado - la cuenta corriente de esta parte)\n\n      if (input.money > totalMoney) //Si lo ingresado por el usuario excede lo total a pagar...\n        input.money = totalMoney; //Asignar lo ingresado por el usuario lo total a pagar ???\n\n      setQuantityBackUp(input.quantity); //???\n    }\n\n    onChange(input, selectedTask.price, selectedTask.quantity - delivered, selectedTask.id, //Se envían los cambios\n    delivered === selectedTask.quantity || completed, totalMoney - input.quantity < 0); //onChange(data, price, faulty, task, completed, paid)//objeto con todo lo ingresado, precio, artículos fallados, id de tarea, si se entregaron todos los artículos y si se pagó la totalidad de la tarea\n  }, [input, completed, refund]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const inputField = (property, total) => {\n    //Función que devuelve un inputbox para ingresar datos al objeto input. propery\n    //property es la propiedad de input que se quiere modificar con el inputbox y total es el objeto que contiene todos los totales\n    return /*#__PURE__*/_jsxDEV(FormControl, {\n      value: input[property] //Asignar al inputbox la variable input[property], es decir que cada vez que el inputbox se modifica, la variable también y vice versa\n      ,\n      onChange: e => {\n        //Cuando cambia el inputbox...\n        if (isNaN(e.target.value) || total[property] < e.target.value && property !== 'money') //Si el valor es inválido...\n          return; //Cancelar\n\n        let aux = { ...input\n        };\n        aux[property] = e.target.value;\n        aux[property] = refund ? //Si se está haciendo una devolución de mercadería o se contó mal la mercadería en una parte anterior\n        -Math.abs(aux[property]) : //Poner en negativo lo ingresado (así se suma y no se resta al total)\n        aux[property] < 0 ? 0 : aux[property]; //Si la propiedad es negativa, convertir en 0\n\n        if (property === 'quantity' || property === 'threads') //Si la propiedad es cantidad o hilos...\n          aux[property] = Math.round(aux[property]); //No puede ser decimal\n\n        setInput({ ...aux\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this);\n  };\n\n  const getTable = () => {\n    let total = {\n      quantity: selectedTask.quantity,\n      weight: selectedTask.weight,\n      money: selectedTask.quantity * selectedTask.price - account,\n      threads: selectedTask.threads\n    };\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [parts.map((part, index) => {\n        total = {\n          quantity: total.quantity - part.quantity,\n          weight: total.weight - part.weight,\n          money: total.money - part.money,\n          threads: total.threads - part.threads\n        };\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: part.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: part.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: total.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: Number(part.weight).toFixed(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: Number(total.weight).toFixed(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: part.threads\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: total.threads\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: '$' + Number(part.money).toFixed(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: '$' + Number(part.account).toFixed(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 29\n          }, this), \"//TODO:\", /*#__PURE__*/_jsxDEV(\"td\", {\n            children: '$' + Number(total.money).toFixed(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: moment(new Date()).format('DD/MM/YYYY')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: inputField('quantity', total)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: total.quantity - input.quantity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: inputField('weight', total)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: (total.weight - input.weight).toFixed(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: inputField('threads', total)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: total.threads - input.threads\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: inputField('money', total)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: '$' + account\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: '$' + (total.money - input.money - account).toFixed(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  };\n\n  const getExceeded = () => {\n    //Devuelve true si se excedió la fecha de entrega\n    if (!selectedTask.deadline) return;\n    let today = new Date();\n    today.setHours(0, 0, 0, 0);\n    var dateParts = selectedTask.deadline.split('/');\n    var deadline = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\n    return today > deadline;\n  };\n\n  if (name !== '') {\n    Axios.post('http://localhost:3307/getUnpaidTasks', {\n      name\n    }).then(response => {\n      if (response.data.length === 0) return;\n      setTasks(response.data);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        'justifyContent': 'space-between',\n        'display': 'flex',\n        'alignItems': 'baseline'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TaskRequest, {\n        setSelectedTask: setSelectedTask,\n        tasks: tasks,\n        title: title,\n        setTitle: setTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          'color': getExceeded() ? 'red' : 'green'\n        },\n        children: selectedTask === '' ? null : selectedTask.deadline\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }, this), title === 'Elegir tarea' ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n        onChange: () => {\n          setRefund(!refund);\n          input.money = -input.money;\n          input.quantity = -input.quantity;\n          input.threads = -input.threads;\n          input.weight = -input.weight;\n        },\n        label: \"Devoluci\\xF3n o correcci\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n        onChange: () => setCompleted(!completed),\n        label: \"Tarea cerrada\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        id: \"taskTable\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Fecha\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Cantidad entregada por el taller\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Cantidad total de la tarea\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Peso entregado por el taller\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Peso total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Hilos devueltos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Hilos totales\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Dinero entregado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Dinero a cuenta\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Dinero total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              'backgroundColor': 'green'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: selectedTask.exitDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: selectedTask.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: selectedTask.weight\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: selectedTask.threads\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: '$' + account\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: '$' + selectedTask.price * selectedTask.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 29\n          }, this), getTable()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_s(Input, \"BmUiLrZJWQkCwSvh2OvKe1WBWv4=\");\n\n_c = Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["C:/Users/Lab2/Documents/GitHub/VirtualNAU/client/src/WorkshopsAdm/deliverTask.js"],"names":["React","Component","useState","useEffect","ModalOpener","Request","TaskRequest","Form","image","moment","Axios","Table","FormControl","ModalPrototype","initialState","error","errors","showObsModal","task","name","quantity","money","weight","threads","price","faulty","completed","calification","observation","paid","DeliverTaskButton","state","form","createRef","resetState","setState","updateError","index","aux","map","e","key","handleEnter","event","toLowerCase","current","indexOf","target","elements","focus","myForm","preventDefault","value","data","post","id","then","response","put","date","Date","format","Number","toFixed","completelyReturned","observations","print","alert","printContents","document","getElementById","innerHTML","originalContents","body","window","sendObs","render","label","func","show","Input","onChange","title","setTitle","tasks","setTasks","parts","setParts","input","setInput","selectedTask","setSelectedTask","refund","setRefund","setCompleted","account","setAccount","quantityBackUp","setQuantityBackUp","totalMoney","res","leftover","delivered","part","inputField","property","total","isNaN","Math","abs","round","getTable","getExceeded","deadline","today","setHours","dateParts","split","length","exitDate"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,eAArC;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,SAASC,cAAT,QAA+B,UAA/B;;;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,IADU;AAEjBC,EAAAA,MAAM,EAAE,CAAC,IAAD,EAAO,IAAP,CAFS;AAGjBC,EAAAA,YAAY,EAAE,KAHG;AAIjBC,EAAAA,IAAI,EAAE,EAJW;AAKjBC,EAAAA,IAAI,EAAE,EALW;AAMjBC,EAAAA,QAAQ,EAAE,EANO;AAOjBC,EAAAA,KAAK,EAAE,EAPU;AAQjBC,EAAAA,MAAM,EAAE,EARS;AASjBC,EAAAA,OAAO,EAAE,EATQ;AAUjBC,EAAAA,KAAK,EAAE,EAVU;AAWjBC,EAAAA,MAAM,EAAE,EAXS;AAYjBC,EAAAA,SAAS,EAAE,KAZM;AAajBC,EAAAA,YAAY,EAAE,EAbG;AAcjBC,EAAAA,WAAW,EAAE,EAdI;AAejBC,EAAAA,IAAI,EAAE;AAfW,CAArB;AAkBA,OAAO,MAAMC,iBAAN,SAAgC7B,SAAhC,CAA0C;AAAA;AAAA;AAAA,SAC7C8B,KAD6C,GACrCjB,YADqC;AAAA,SAE7CkB,IAF6C,gBAEtChC,KAAK,CAACiC,SAAN,EAFsC;;AAAA,SAI7CC,UAJ6C,GAIhC,MAAM;AACf,WAAKC,QAAL,CAAcrB,YAAd;AACH,KAN4C;;AAAA,SAQ7CsB,WAR6C,GAQ/B,CAACC,KAAD,EAAQtB,KAAR,KAAkB;AAC5B,UAAIC,MAAM,GAAG,CAAC,GAAG,KAAKe,KAAL,CAAWf,MAAf,CAAb;AACAA,MAAAA,MAAM,CAACqB,KAAD,CAAN,GAAgBtB,KAAhB;AACA,WAAKoB,QAAL,CAAc;AAAEnB,QAAAA;AAAF,OAAd;AAEA,UAAIsB,GAAG,GAAG,KAAV;AACAtB,MAAAA,MAAM,CAACuB,GAAP,CAAW,CAACC,CAAD,EAAIC,GAAJ,KACPH,GAAG,GAAGA,GAAG,IAAKG,GAAG,KAAKJ,KAAhB,GAAyBtB,KAAzB,GAAiCyB,CAD3C;AAGA,WAAKL,QAAL,CAAc;AAAEpB,QAAAA,KAAK,EAAEuB;AAAT,OAAd;AACH,KAlB4C;;AAAA,SAoB7CI,WApB6C,GAoB9BC,KAAD,IAAW;AACrB,UAAIA,KAAK,CAACF,GAAN,CAAUG,WAAV,OAA4B,OAAhC,EACI;AACJ,YAAMZ,IAAI,GAAG,KAAKA,IAAL,CAAUa,OAAvB;AACA,YAAMR,KAAK,GAAG,CAAC,GAAGL,IAAJ,EAAUc,OAAV,CAAkBH,KAAK,CAACI,MAAxB,CAAd;AACA,UAAIf,IAAI,CAACgB,QAAL,CAAcX,KAAK,GAAG,CAAtB,CAAJ,EACIL,IAAI,CAACgB,QAAL,CAAcX,KAAK,GAAG,CAAtB,EAAyBY,KAAzB;AACP,KA3B4C;;AAAA,SA6B7CC,MA7B6C,GA6BpC,MAAM;AACX,0BACI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,SAAT;AAAmB,QAAA,GAAG,EAAE,KAAKlB,IAA7B;AAAmC,QAAA,QAAQ,EAAEQ,CAAC,IAAIA,CAAC,CAACW,cAAF,EAAlD;AAAA,gCACI,QAAC,OAAD;AAAS,UAAA,MAAM,EAAC,MAAhB;AAAuB,UAAA,WAAW,EAAE,KAAKT,WAAzC;AAAsD,UAAA,QAAQ,EAAE,CAACU,KAAD,EAAQrC,KAAR,KAAkB;AAC9E,iBAAKoB,QAAL,CAAc;AAAEhB,cAAAA,IAAI,EAAEiC;AAAR,aAAd;AACA,iBAAKhB,WAAL,CAAiB,CAAjB,EAAoBrB,KAApB;AACH;AAHD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAE,KAAKgB,KAAL,CAAWZ,IAAxB;AAA8B,UAAA,QAAQ,EAAE,CAACkC,IAAD,EAAO7B,KAAP,EAAcC,MAAd,EAAsBP,IAAtB,EAA4BQ,SAA5B,EAAuCG,IAAvC,KAAgD;AACpF,iBAAKM,QAAL,CAAc;AACVjB,cAAAA,IADU;AACJE,cAAAA,QAAQ,EAAEiC,IAAI,CAACjC,QADX;AACqBC,cAAAA,KAAK,EAAEgC,IAAI,CAAChC,KADjC;AACwCC,cAAAA,MAAM,EAAE+B,IAAI,CAAC/B,MADrD;AAEVC,cAAAA,OAAO,EAAE8B,IAAI,CAAC9B,OAFJ;AAEaG,cAAAA,SAFb;AAEwBF,cAAAA,KAFxB;AAE+BC,cAAAA,MAF/B;AAEuCI,cAAAA;AAFvC,aAAd;AAIA,iBAAKO,WAAL,CAAiB,CAAjB,EAAoB,KAApB;AACH;AAND;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAeH,KA7C4C;;AAAA,SA+C7CkB,IA/C6C,GA+CtC,MAAM;AACT,UAAIhB,GAAG,GAAG,KAAKP,KAAf;AACA,UAAIF,IAAI,GAAG,KAAX,CAFS,CAEQ;;AACjB,UAAI,CAACS,GAAG,CAACZ,SAAT,EACI,KAAKQ,UAAL;AACJxB,MAAAA,KAAK,CAAC4C,IAAN,CAAW,gCAAX,EAA6C;AAAEC,QAAAA,EAAE,EAAEjB,GAAG,CAACpB;AAAV,OAA7C,EAA+DsC,IAA/D,CAAqEC,QAAD,IAAc;AAC9E/C,QAAAA,KAAK,CAACgD,GAAN,CAAU,mCAAV,EACI;AAAEvC,UAAAA,IAAI,EAAEsC,QAAQ,CAACJ,IAAT,CAAc,CAAd,EAAiBlC,IAAzB;AAA+BE,UAAAA,KAAK,EAAEiB,GAAG,CAACjB,KAAJ,GAAYiB,GAAG,CAAClB,QAAJ,GAAekB,GAAG,CAACd;AAArE,SADJ;AAEH,OAHD;AAIAd,MAAAA,KAAK,CAAC4C,IAAN,CAAW,+BAAX,EACI;AACInC,QAAAA,IAAI,EAAEmB,GAAG,CAACnB,IADd;AACoBD,QAAAA,IAAI,EAAEoB,GAAG,CAACpB,IAD9B;AACoCyC,QAAAA,IAAI,EAAElD,MAAM,CAAC,IAAImD,IAAJ,EAAD,CAAN,CAAmBC,MAAnB,CAA0B,YAA1B,CAD1C;AACmFzC,QAAAA,QAAQ,EAAEkB,GAAG,CAAClB,QADjG;AAEIE,QAAAA,MAAM,EAAEwC,MAAM,CAACxB,GAAG,CAAChB,MAAL,CAAN,CAAmByC,OAAnB,CAA2B,CAA3B,CAFZ;AAE2C1C,QAAAA,KAAK,EAAEyC,MAAM,CAACxB,GAAG,CAACjB,KAAL,CAAN,CAAkB0C,OAAlB,CAA0B,CAA1B,CAFlD;AAEgFxC,QAAAA,OAAO,EAAEe,GAAG,CAACf,OAF7F;AAEsGM,QAAAA;AAFtG,OADJ,EAIO2B,IAJP,CAIY,MAAM;AACV,YAAIlB,GAAG,CAACZ,SAAR,EACI,KAAKS,QAAL,CAAc;AAAElB,UAAAA,YAAY,EAAE;AAAhB,SAAd;AACP,OAPL;AAQH,KAhE4C;;AAAA,SAkE7C+C,kBAlE6C,GAkExB,MAAM;AACvBtD,MAAAA,KAAK,CAACgD,GAAN,CAAU,gCAAV,EACI;AACIH,QAAAA,EAAE,EAAE,KAAKxB,KAAL,CAAWb,IADnB;AACyB+C,QAAAA,YAAY,EAAE,KAAKlC,KAAL,CAAWH,WADlD;AAC+DD,QAAAA,YAAY,EAAE,KAAKI,KAAL,CAAWJ,YADxF;AAEIF,QAAAA,MAAM,EAAE,KAAKM,KAAL,CAAWN;AAFvB,OADJ;AAKH,KAxE4C;;AAAA,SA0E7CyC,KA1E6C,GA0ErC,MAAM;AACV,UAAI,KAAKnC,KAAL,CAAWhB,KAAf,EAAsB;AAClBoD,QAAAA,KAAK,CAAC,kDAAD,CAAL;AACA;AACH;;AACD,UAAIC,aAAa,GAAGC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,SAAvD;AACA,UAAIC,gBAAgB,GAAGH,QAAQ,CAACI,IAAT,CAAcF,SAArC;AACAF,MAAAA,QAAQ,CAACI,IAAT,CAAcF,SAAd,GAA0BH,aAA1B;AACAM,MAAAA,MAAM,CAACR,KAAP;AACAG,MAAAA,QAAQ,CAACI,IAAT,CAAcF,SAAd,GAA0BC,gBAA1B;AACH,KApF4C;;AAAA,SAsF7CG,OAtF6C,GAsFnC,MAAM;AACZ,WAAKX,kBAAL;AACA,WAAK9B,UAAL;AACH,KAzF4C;AAAA;;AA2F7C0C,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI,QAAC,WAAD;AAAa,QAAA,UAAU,EAAC,eAAxB;AAAwC,QAAA,QAAQ,EAAE,KAAK1B,MAAL,EAAlD;AAAiE,QAAA,IAAI,EAAE1C,KAAvE;AAA8E,QAAA,SAAS,EAAC,OAAxF;AACI,QAAA,MAAM,EAAE;AAAEqE,UAAAA,KAAK,EAAE,UAAT;AAAqBC,UAAAA,IAAI,EAAE,KAAKZ,KAAhC;AAAuCa,UAAAA,IAAI,EAAE,CAAC,CAACV,QAAQ,CAACC,cAAT,CAAwB,WAAxB;AAA/C,SADZ;AAEI,QAAA,KAAK,EAAC,kBAFV;AAE6B,QAAA,IAAI,EAAE,KAAKhB,IAFxC;AAE8C,QAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWhB;AAFhE;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI,QAAC,cAAD;AAAgB,QAAA,KAAK,EAAC,WAAtB;AAAkC,QAAA,IAAI,EAAE,KAAKgB,KAAL,CAAWd,YAAnD;AAAiE,QAAA,IAAI,EAAE,KAAK0D,OAA5E;AAAqF,QAAA,WAAW,EAAE,KAAKA,OAAvG;AAAA,+BACI;AAAA,kCACI,QAAC,OAAD;AAAS,YAAA,MAAM,EAAC,aAAhB;AAA8B,YAAA,QAAQ,EAAGnC,CAAD,IAAO,KAAKL,QAAL,CAAc;AAAEP,cAAAA,WAAW,EAAEY,CAAC,CAACO,MAAF,CAASK;AAAxB,aAAd;AAA/C;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,OAAD;AAAS,YAAA,MAAM,EAAC,cAAhB;AAA+B,YAAA,QAAQ,EAAGZ,CAAD,IAAO,KAAKL,QAAL,CAAc;AAAER,cAAAA,YAAY,EAAEa,CAAC,CAACO,MAAF,CAASK;AAAzB,aAAd;AAAhD;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA,oBADJ;AAeH;;AA3G4C;AA8GjD,OAAO,MAAM4B,KAAK,GAAG,QAAwB;AAAA;;AAAA,MAAvB;AAAEC,IAAAA,QAAF;AAAY9D,IAAAA;AAAZ,GAAuB;AAEzC,QAAM,CAAC+D,KAAD,EAAQC,QAAR,IAAoBjF,QAAQ,CAAC,cAAD,CAAlC,CAFyC,CAEW;;AACpD,QAAM,CAACkF,KAAD,EAAQC,QAAR,IAAoBnF,QAAQ,CAAC,EAAD,CAAlC,CAHyC,CAGF;;AACvC,QAAM,CAACoF,KAAD,EAAQC,QAAR,IAAoBrF,QAAQ,CAAC,EAAD,CAAlC,CAJyC,CAIF;;AACvC,QAAM,CAACsF,KAAD,EAAQC,QAAR,IAAoBvF,QAAQ,CAAC;AAAEkB,IAAAA,QAAQ,EAAE,CAAZ;AAAeE,IAAAA,MAAM,EAAE,CAAvB;AAA0BD,IAAAA,KAAK,EAAE,CAAjC;AAAoCE,IAAAA,OAAO,EAAE;AAA7C,GAAD,CAAlC,CALyC,CAK4C;;AACrF,QAAM,CAACmE,YAAD,EAAeC,eAAf,IAAkCzF,QAAQ,CAAC,EAAD,CAAhD,CANyC,CAMY;;AACrD,QAAM,CAAC0F,MAAD,EAASC,SAAT,IAAsB3F,QAAQ,CAAC,KAAD,CAApC,CAPyC,CAOG;;AAC5C,QAAM,CAACwB,SAAD,EAAYoE,YAAZ,IAA4B5F,QAAQ,CAAC,KAAD,CAA1C,CARyC,CAQS;;AAClD,QAAM,CAAC6F,OAAD,EAAUC,UAAV,IAAwB9F,QAAQ,CAAC,EAAD,CAAtC,CATyC,CASE;;AAC3C,QAAM,CAAC+F,cAAD,EAAiBC,iBAAjB,IAAsChG,QAAQ,CAAC,EAAD,CAApD,CAVyC,CAUgB;;AAEzDC,EAAAA,SAAS,CAAC,MAAM;AAAC;AACbsF,IAAAA,QAAQ,CAAC;AAAErE,MAAAA,QAAQ,EAAE,CAAZ;AAAeE,MAAAA,MAAM,EAAE,CAAvB;AAA0BD,MAAAA,KAAK,EAAE,CAAjC;AAAoCE,MAAAA,OAAO,EAAE;AAA7C,KAAD,CAAR,CADY,CAC+C;;AAC3Db,IAAAA,KAAK,CAAC4C,IAAN,CAAW,gCAAX,EAA6C;AAAEpC,MAAAA,IAAI,EAAEwE,YAAY,CAACnC;AAArB,KAA7C,EAAwEC,IAAxE,CAA6EC,QAAQ,IAAI8B,QAAQ,CAAC9B,QAAQ,CAACJ,IAAV,CAAjG,EAFY,CAEsG;;AAClH,QAAIlC,IAAJ,EAAS;AACLT,MAAAA,KAAK,CAAC4C,IAAN,CAAW,kCAAX,EAA+C;AAAEnC,QAAAA;AAAF,OAA/C,EAAyDqC,IAAzD,CAA8DC,QAAQ,IAAI;AAAC;AACvE,YAAI0C,UAAU,GAAGT,YAAY,CAACtE,QAAb,GAAwBsE,YAAY,CAAClE,KAAtD;AAAA,YAA6D4E,GAAG,GAAG3C,QAAQ,CAACJ,IAAT,CAAc,CAAd,EAAiBhC,KAApF,CADsE,CACoB;;AAC1F2E,QAAAA,UAAU,CAAEG,UAAU,GAAGC,GAAd,GAAoBD,UAApB,GAAiCC,GAAlC,CAAV,CAFsE,CAErB;;AACjD1F,QAAAA,KAAK,CAACgD,GAAN,CAAU,kCAAV,EAA8C;AAAC2C,UAAAA,QAAQ,EAAIF,UAAU,GAAGC,GAAd,GAAqBA,GAAG,GAAGD,UAA3B,GAAwC,CAApD;AAAwDhF,UAAAA;AAAxD,SAA9C,EAHsE,CAGsC;AAC/G,OAJD;AAKP,GATQ,EASN,CAACuE,YAAD,CATM,CAAT;AAWAvF,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAImG,SAAS,GAAGd,KAAK,CAACpE,QAAtB;AAAA,QAAgC+E,UAAU,GAAGT,YAAY,CAACtE,QAAb,GAAwBsE,YAAY,CAAClE,KAAlF,CADY,CAC4E;;AACxF8D,IAAAA,KAAK,CAAC/C,GAAN,CAAUgE,IAAI,IAAID,SAAS,IAAIC,IAAI,CAACnF,QAApC,EAFY,CAEkC;;AAE9C,QAAI6E,cAAc,KAAKT,KAAK,CAACpE,QAA7B,EAAuC;AAAC;AACpCoE,MAAAA,KAAK,CAACnE,KAAN,GAAcmE,KAAK,CAACpE,QAAN,GAAiBsE,YAAY,CAAClE,KAA9B,GAAsCuE,OAApD,CADmC,CACyB;;AAC5D,UAAIP,KAAK,CAACnE,KAAN,GAAc8E,UAAlB,EAA6B;AACzBX,QAAAA,KAAK,CAACnE,KAAN,GAAc8E,UAAd,CAH+B,CAGN;;AAC7BD,MAAAA,iBAAiB,CAACV,KAAK,CAACpE,QAAP,CAAjB,CAJmC,CAID;AACrC;;AACD6D,IAAAA,QAAQ,CAACO,KAAD,EAAQE,YAAY,CAAClE,KAArB,EAA4BkE,YAAY,CAACtE,QAAb,GAAwBkF,SAApD,EAA+DZ,YAAY,CAACnC,EAA5E,EAA+E;AAClF+C,IAAAA,SAAS,KAAKZ,YAAY,CAACtE,QAA5B,IAAyCM,SADrC,EACgDyE,UAAU,GAAGX,KAAK,CAACpE,QAAnB,GAA8B,CAD9E,CAAR,CAVY,CAYZ;AACH,GAbQ,EAaN,CAACoE,KAAD,EAAQ9D,SAAR,EAAmBkE,MAAnB,CAbM,CAAT,CAvByC,CAoCT;;AAEhC,QAAMY,UAAU,GAAG,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAAC;AACrC;AACA,wBACI,QAAC,WAAD;AAAa,MAAA,KAAK,EAAElB,KAAK,CAACiB,QAAD,CAAzB,CAAoC;AAApC;AACI,MAAA,QAAQ,EAAGjE,CAAD,IAAO;AAAC;AACd,YAAImE,KAAK,CAACnE,CAAC,CAACO,MAAF,CAASK,KAAV,CAAL,IAA0BsD,KAAK,CAACD,QAAD,CAAL,GAAkBjE,CAAC,CAACO,MAAF,CAASK,KAA3B,IAAoCqD,QAAQ,KAAK,OAA/E,EAAwF;AACpF,iBAFS,CAEF;;AACX,YAAInE,GAAG,GAAG,EAAE,GAAGkD;AAAL,SAAV;AACAlD,QAAAA,GAAG,CAACmE,QAAD,CAAH,GAAgBjE,CAAC,CAACO,MAAF,CAASK,KAAzB;AACAd,QAAAA,GAAG,CAACmE,QAAD,CAAH,GAAiBb,MAAD,GAAU;AACtB,SAACgB,IAAI,CAACC,GAAL,CAASvE,GAAG,CAACmE,QAAD,CAAZ,CADW,GACc;AACzBnE,QAAAA,GAAG,CAACmE,QAAD,CAAH,GAAgB,CAAjB,GAAsB,CAAtB,GAA0BnE,GAAG,CAACmE,QAAD,CAFjC,CALa,CAO+B;;AAC5C,YAAIA,QAAQ,KAAK,UAAb,IAA2BA,QAAQ,KAAK,SAA5C,EAAsD;AAClDnE,UAAAA,GAAG,CAACmE,QAAD,CAAH,GAAgBG,IAAI,CAACE,KAAL,CAAWxE,GAAG,CAACmE,QAAD,CAAd,CAAhB,CATS,CASiC;;AAC9ChB,QAAAA,QAAQ,CAAC,EAAE,GAAGnD;AAAL,SAAD,CAAR;AACH;AAZL;AAAA;AAAA;AAAA;AAAA,YADJ;AAeH,GAjBD;;AAmBA,QAAMyE,QAAQ,GAAG,MAAM;AAEnB,QAAIL,KAAK,GAAG;AACRtF,MAAAA,QAAQ,EAAEsE,YAAY,CAACtE,QADf;AAERE,MAAAA,MAAM,EAAEoE,YAAY,CAACpE,MAFb;AAGRD,MAAAA,KAAK,EAAEqE,YAAY,CAACtE,QAAb,GAAwBsE,YAAY,CAAClE,KAArC,GAA6CuE,OAH5C;AAIRxE,MAAAA,OAAO,EAAEmE,YAAY,CAACnE;AAJd,KAAZ;AAOA,wBACI;AAAA,iBACK+D,KAAK,CAAC/C,GAAN,CAAU,CAACgE,IAAD,EAAOlE,KAAP,KAAiB;AACxBqE,QAAAA,KAAK,GAAG;AACJtF,UAAAA,QAAQ,EAAEsF,KAAK,CAACtF,QAAN,GAAiBmF,IAAI,CAACnF,QAD5B;AAEJE,UAAAA,MAAM,EAAEoF,KAAK,CAACpF,MAAN,GAAeiF,IAAI,CAACjF,MAFxB;AAGJD,UAAAA,KAAK,EAAEqF,KAAK,CAACrF,KAAN,GAAckF,IAAI,CAAClF,KAHtB;AAIJE,UAAAA,OAAO,EAAEmF,KAAK,CAACnF,OAAN,GAAgBgF,IAAI,CAAChF;AAJ1B,SAAR;AAMA,4BACI;AAAA,kCACI;AAAA,sBAAKgF,IAAI,CAAC5C;AAAV;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBAAK4C,IAAI,CAACnF;AAAV;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,sBAAKsF,KAAK,CAACtF;AAAX;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA,sBAAK0C,MAAM,CAACyC,IAAI,CAACjF,MAAN,CAAN,CAAoByC,OAApB,CAA4B,CAA5B;AAAL;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAA,sBAAKD,MAAM,CAAC4C,KAAK,CAACpF,MAAP,CAAN,CAAqByC,OAArB,CAA6B,CAA7B;AAAL;AAAA;AAAA;AAAA;AAAA,kBALJ,eAMI;AAAA,sBAAKwC,IAAI,CAAChF;AAAV;AAAA;AAAA;AAAA;AAAA,kBANJ,eAOI;AAAA,sBAAKmF,KAAK,CAACnF;AAAX;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAQI;AAAA,sBAAK,MAAMuC,MAAM,CAACyC,IAAI,CAAClF,KAAN,CAAN,CAAmB0C,OAAnB,CAA2B,CAA3B;AAAX;AAAA;AAAA;AAAA;AAAA,kBARJ,eASI;AAAA,sBAAK,MAAMD,MAAM,CAACyC,IAAI,CAACR,OAAN,CAAN,CAAqBhC,OAArB,CAA6B,CAA7B;AAAX;AAAA;AAAA;AAAA;AAAA,kBATJ,0BAUI;AAAA,sBAAK,MAAMD,MAAM,CAAC4C,KAAK,CAACrF,KAAP,CAAN,CAAoB0C,OAApB,CAA4B,CAA5B;AAAX;AAAA;AAAA;AAAA;AAAA,kBAVJ;AAAA,WAAS1B,KAAT;AAAA;AAAA;AAAA;AAAA,gBADJ;AAcH,OArBA,CADL,eAuBI;AAAA,gCACI;AAAA,oBAAK5B,MAAM,CAAC,IAAImD,IAAJ,EAAD,CAAN,CAAmBC,MAAnB,CAA0B,YAA1B;AAAL;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAK2C,UAAU,CAAC,UAAD,EAAaE,KAAb;AAAf;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA,oBAAKA,KAAK,CAACtF,QAAN,GAAiBoE,KAAK,CAACpE;AAA5B;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA,oBAAKoF,UAAU,CAAC,QAAD,EAAWE,KAAX;AAAf;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAA,oBAAK,CAACA,KAAK,CAACpF,MAAN,GAAekE,KAAK,CAAClE,MAAtB,EAA8ByC,OAA9B,CAAsC,CAAtC;AAAL;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI;AAAA,oBAAKyC,UAAU,CAAC,SAAD,EAAYE,KAAZ;AAAf;AAAA;AAAA;AAAA;AAAA,gBANJ,eAOI;AAAA,oBAAKA,KAAK,CAACnF,OAAN,GAAgBiE,KAAK,CAACjE;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAQI;AAAA,oBAAKiF,UAAU,CAAC,OAAD,EAAUE,KAAV;AAAf;AAAA;AAAA;AAAA;AAAA,gBARJ,eASI;AAAA,oBAAK,MAAMX;AAAX;AAAA;AAAA;AAAA;AAAA,gBATJ,eAUI;AAAA,oBAAK,MAAM,CAACW,KAAK,CAACrF,KAAN,GAAcmE,KAAK,CAACnE,KAApB,GAA4B0E,OAA7B,EAAsChC,OAAtC,CAA8C,CAA9C;AAAX;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBJ;AAAA,oBADJ;AAsCH,GA/CD;;AAiDA,QAAMiD,WAAW,GAAG,MAAM;AAAC;AACvB,QAAI,CAACtB,YAAY,CAACuB,QAAlB,EACI;AACJ,QAAIC,KAAK,GAAG,IAAItD,IAAJ,EAAZ;AACAsD,IAAAA,KAAK,CAACC,QAAN,CAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB;AACA,QAAIC,SAAS,GAAG1B,YAAY,CAACuB,QAAb,CAAsBI,KAAtB,CAA4B,GAA5B,CAAhB;AACA,QAAIJ,QAAQ,GAAG,IAAIrD,IAAJ,CAAS,CAACwD,SAAS,CAAC,CAAD,CAAnB,EAAwBA,SAAS,CAAC,CAAD,CAAT,GAAe,CAAvC,EAA0C,CAACA,SAAS,CAAC,CAAD,CAApD,CAAf;AACA,WAAOF,KAAK,GAAGD,QAAf;AACH,GARD;;AAUA,MAAI9F,IAAI,KAAK,EAAb,EAAiB;AACbT,IAAAA,KAAK,CAAC4C,IAAN,CAAW,sCAAX,EAAmD;AAAEnC,MAAAA;AAAF,KAAnD,EAA6DqC,IAA7D,CAAmEC,QAAD,IAAc;AAC5E,UAAIA,QAAQ,CAACJ,IAAT,CAAciE,MAAd,KAAyB,CAA7B,EACI;AACJjC,MAAAA,QAAQ,CAAC5B,QAAQ,CAACJ,IAAV,CAAR;AACH,KAJD;AAKH;;AAED,sBACI;AAAA,4BACI;AAAK,MAAA,KAAK,EAAE;AAAE,0BAAkB,eAApB;AAAqC,mBAAW,MAAhD;AAAwD,sBAAc;AAAtE,OAAZ;AAAA,8BACI,QAAC,WAAD;AAAa,QAAA,eAAe,EAAEsC,eAA9B;AAA+C,QAAA,KAAK,EAAEP,KAAtD;AAA6D,QAAA,KAAK,EAAEF,KAApE;AAA2E,QAAA,QAAQ,EAAEC;AAArF;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAI,QAAA,KAAK,EAAE;AAAE,mBAAS6B,WAAW,KAAK,KAAL,GAAa;AAAnC,SAAX;AAAA,kBACMtB,YAAY,KAAK,EAAlB,GAAwB,IAAxB,GAA+BA,YAAY,CAACuB;AADjD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAOK/B,KAAK,KAAK,cAAV,gBAA2B,qCAA3B,gBACG;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,QAAQ,EAAE,MAAM;AACxBW,UAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACAJ,UAAAA,KAAK,CAACnE,KAAN,GAAc,CAACmE,KAAK,CAACnE,KAArB;AACAmE,UAAAA,KAAK,CAACpE,QAAN,GAAiB,CAACoE,KAAK,CAACpE,QAAxB;AACAoE,UAAAA,KAAK,CAACjE,OAAN,GAAgB,CAACiE,KAAK,CAACjE,OAAvB;AACAiE,UAAAA,KAAK,CAAClE,MAAN,GAAe,CAACkE,KAAK,CAAClE,MAAtB;AACH,SAND;AAMG,QAAA,KAAK,EAAC;AANT;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,QAAQ,EAAE,MAAMwE,YAAY,CAAC,CAACpE,SAAF,CAAxC;AAAsD,QAAA,KAAK,EAAC;AAA5D;AAAA;AAAA;AAAA;AAAA,cARJ,eASI,QAAC,KAAD;AAAO,QAAA,OAAO,MAAd;AAAe,QAAA,QAAQ,MAAvB;AAAwB,QAAA,EAAE,EAAC,WAA3B;AAAA,gCACI;AAAA,iCACI;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAeI;AAAA,kCACI;AAAI,YAAA,KAAK,EAAE;AAAE,iCAAmB;AAArB,aAAX;AAAA,oCACI;AAAA,wBAAKgE,YAAY,CAAC6B;AAAlB;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA,wBAAK7B,YAAY,CAACtE;AAAlB;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI;AAAA,wBAAKsE,YAAY,CAACpE;AAAlB;AAAA;AAAA;AAAA;AAAA,oBALJ,eAMI;AAAA;AAAA;AAAA;AAAA,oBANJ,eAOI;AAAA,wBAAKoE,YAAY,CAACnE;AAAlB;AAAA;AAAA;AAAA;AAAA,oBAPJ,eAQI;AAAA;AAAA;AAAA;AAAA,oBARJ,eASI;AAAA,wBAAK,MAAMwE;AAAX;AAAA;AAAA;AAAA;AAAA,oBATJ,eAUI;AAAA,wBAAK,MAAML,YAAY,CAAClE,KAAb,GAAqBkE,YAAY,CAACtE;AAA7C;AAAA;AAAA;AAAA;AAAA,oBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAaK2F,QAAQ,EAbb;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA,oBARR;AAAA,kBADJ;AAqDH,CAjLM;;GAAM/B,K;;KAAAA,K","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\r\nimport { ModalOpener } from '../modalOpener';\r\nimport { Request, TaskRequest } from '../textInputs';\r\nimport Form from 'react-bootstrap/Form';\r\nimport image from './Images/DeliverTask.svg';\r\nimport moment from 'moment';\r\nimport Axios from 'axios';\r\nimport Table from 'react-bootstrap/Table';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport { ModalPrototype } from '../modal';\r\n\r\nconst initialState = {\r\n    error: true,\r\n    errors: [true, true],\r\n    showObsModal: false,\r\n    task: '',\r\n    name: '',\r\n    quantity: '',\r\n    money: '',\r\n    weight: '',\r\n    threads: '',\r\n    price: '',\r\n    faulty: '',\r\n    completed: false,\r\n    calification: '',\r\n    observation: '',\r\n    paid: false\r\n}\r\n\r\nexport class DeliverTaskButton extends Component {\r\n    state = initialState;\r\n    form = React.createRef();\r\n\r\n    resetState = () => {\r\n        this.setState(initialState);\r\n    }\r\n\r\n    updateError = (index, error) => {\r\n        let errors = [...this.state.errors];\r\n        errors[index] = error;\r\n        this.setState({ errors });\r\n\r\n        let aux = false;\r\n        errors.map((e, key) => \r\n            aux = aux && (key === index) ? error : e\r\n        );\r\n        this.setState({ error: aux });\r\n    }\r\n\r\n    handleEnter = (event) => {\r\n        if (event.key.toLowerCase() !== 'enter')\r\n            return;\r\n        const form = this.form.current;\r\n        const index = [...form].indexOf(event.target);\r\n        if (form.elements[index + 1])\r\n            form.elements[index + 1].focus();\r\n    };\r\n\r\n    myForm = () => {\r\n        return (\r\n            <Form id='toPrint' ref={this.form} onSubmit={e => e.preventDefault()}>\r\n                <Request toShow='name' handleEnter={this.handleEnter} onChange={(value, error) => {\r\n                    this.setState({ name: value });\r\n                    this.updateError(0, error);\r\n                }} />\r\n                <Input name={this.state.name} onChange={(data, price, faulty, task, completed, paid) => {\r\n                    this.setState({\r\n                        task, quantity: data.quantity, money: data.money, weight: data.weight,\r\n                        threads: data.threads, completed, price, faulty, paid\r\n                    });\r\n                    this.updateError(1, false);\r\n                }} />\r\n            </Form>\r\n        );\r\n    }\r\n\r\n    post = () => {\r\n        let aux = this.state;\r\n        let paid = false;//TODO: Debe ser true si y sólo si se pagó por completo a la tarea\r\n        if (!aux.completed)\r\n            this.resetState();\r\n        Axios.post('http://localhost:3307/getTasks', { id: aux.task }).then((response) => {\r\n            Axios.put('http://localhost:3307/payWorkshop',\r\n                { name: response.data[0].name, money: aux.money - aux.quantity * aux.price })\r\n        });\r\n        Axios.post('http://localhost:3307/newPart',\r\n            {\r\n                name: aux.name, task: aux.task, date: moment(new Date()).format('DD/MM/YYYY'), quantity: aux.quantity,\r\n                weight: Number(aux.weight).toFixed(1), money: Number(aux.money).toFixed(1), threads: aux.threads, paid\r\n            }).then(() => {\r\n                if (aux.completed)\r\n                    this.setState({ showObsModal: true });\r\n            });\r\n    }\r\n\r\n    completelyReturned = () => {\r\n        Axios.put('http://localhost:3307/printObs',\r\n            {\r\n                id: this.state.task, observations: this.state.observation, calification: this.state.calification,\r\n                faulty: this.state.faulty\r\n            });\r\n    }\r\n\r\n    print = () => {\r\n        if (this.state.error) {\r\n            alert('Error. No se puede imprimir una boleta inválida.');\r\n            return;\r\n        }\r\n        var printContents = document.getElementById('toPrint').innerHTML;\r\n        var originalContents = document.body.innerHTML;\r\n        document.body.innerHTML = printContents;\r\n        window.print();\r\n        document.body.innerHTML = originalContents;\r\n    }\r\n\r\n    sendObs = () => {\r\n        this.completelyReturned();\r\n        this.resetState();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <ModalOpener buttonText=\"Recibir tarea\" children={this.myForm()} logo={image} className=\"title\"\r\n                    footer={{ label: 'Imprimir', func: this.print, show: !!document.getElementById(\"taskTable\") }}\r\n                    title=\"Ingreso de tarea\" post={this.post} error={this.state.error} />\r\n                {/*Crea un botón que abre a un modal en el que aparecerá lo devuelto en this.myForm*/}\r\n\r\n                <ModalPrototype title=\"Calificar\" show={this.state.showObsModal} post={this.sendObs} handleClose={this.sendObs}>\r\n                    <>\r\n                        <Request toShow=\"observation\" onChange={(e) => this.setState({ observation: e.target.value })} />\r\n                        <Request toShow=\"calification\" onChange={(e) => this.setState({ calification: e.target.value })} />\r\n                    </>\r\n                </ModalPrototype>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport const Input = ({ onChange, name }) => {\r\n\r\n    const [title, setTitle] = useState('Elegir tarea'); //Título del selectBox. Primero va a ser 'Elegir tarea' pero luego va a mostrar la tarea elegida\r\n    const [tasks, setTasks] = useState([]);//Todas las tareas que no se le pagaron por completo al taller\r\n    const [parts, setParts] = useState([]);//Todas las entregas parciales de la tarea elegida\r\n    const [input, setInput] = useState({ quantity: 0, weight: 0, money: 0, threads: 0 });//Lo ingresado por el usuario en la tabla\r\n    const [selectedTask, setSelectedTask] = useState('');//La tarea elegida\r\n    const [refund, setRefund] = useState(false);//Está cargando una devolución?\r\n    const [completed, setCompleted] = useState(false);//El taller entregó el total de la mercadería?\r\n    const [account, setAccount] = useState('');//Dinero que le fue pagado al taller anteriormente (la cuenta corriente) y que ahora se utilizará para pagar la tarea\r\n    const [quantityBackUp, setQuantityBackUp] = useState('');//Una variable auxiliar para recordar la cantidad\r\n\r\n    useEffect(() => {//Cuando selectedTask cambia...\r\n        setInput({ quantity: 0, weight: 0, money: 0, threads: 0 });//Resetear los valores de Input (porque el usuario no ingresó nada)\r\n        Axios.post('http://localhost:3307/getParts', { task: selectedTask.id }).then(response => setParts(response.data));//Recuperar partes desde la BD y asignarselas a parts\r\n        if (name)//Si se sabe el nombre del taller...\r\n            Axios.post('http://localhost:3307/getAccount', { name }).then(response => {//Recuperar de la BD la cuenta corriente del taller\r\n                let totalMoney = selectedTask.quantity * selectedTask.price, res = response.data[0].money;//totalMoney es lo que se deberá pagar por la tarea entera y res es la cuenta corriente del taller\r\n                setAccount((totalMoney < res)? totalMoney : res);//account debe ser el menor de totalMoney y res, ya que si totalMoney es mayor a res, no alcanza a pagar todo, mientras que si totalMoney es menor a res, el taller va a tener un resto de cuenta corriente\r\n                Axios.put('http://localhost:3307/setAccount', {leftover: ((totalMoney < res) ? res - totalMoney : 0), name})//Actualizar el dinero que posee a cuenta el taller\r\n            });\r\n    }, [selectedTask]);\r\n\r\n    useEffect(() => {\r\n        let delivered = input.quantity, totalMoney = selectedTask.quantity * selectedTask.price;//delivered es la cantidad total devuelta por el taller (en todas las partes) y totalMoney es lo que se deberá pagar por la tarea entera\r\n        parts.map(part => delivered += part.quantity);//Sumar a delivered todas las cantidades entregadas en cada parte\r\n\r\n        if (quantityBackUp !== input.quantity) {//???\r\n            input.money = input.quantity * selectedTask.price - account;//Le recomienda al usuario pagar todo lo que debe pagar (lo entregado en esta parte * el precio acordado - la cuenta corriente de esta parte)\r\n            if (input.money > totalMoney)//Si lo ingresado por el usuario excede lo total a pagar...\r\n                input.money = totalMoney;//Asignar lo ingresado por el usuario lo total a pagar ???\r\n            setQuantityBackUp(input.quantity);//???\r\n        }\r\n        onChange(input, selectedTask.price, selectedTask.quantity - delivered, selectedTask.id,//Se envían los cambios\r\n            (delivered === selectedTask.quantity) || completed, totalMoney - input.quantity < 0);\r\n        //onChange(data, price, faulty, task, completed, paid)//objeto con todo lo ingresado, precio, artículos fallados, id de tarea, si se entregaron todos los artículos y si se pagó la totalidad de la tarea\r\n    }, [input, completed, refund]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const inputField = (property, total) => {//Función que devuelve un inputbox para ingresar datos al objeto input. propery\r\n        //property es la propiedad de input que se quiere modificar con el inputbox y total es el objeto que contiene todos los totales\r\n        return (\r\n            <FormControl value={input[property]}//Asignar al inputbox la variable input[property], es decir que cada vez que el inputbox se modifica, la variable también y vice versa\r\n                onChange={(e) => {//Cuando cambia el inputbox...\r\n                    if (isNaN(e.target.value) || (total[property] < e.target.value && property !== 'money'))//Si el valor es inválido...\r\n                        return;//Cancelar\r\n                    let aux = { ...input };\r\n                    aux[property] = e.target.value;\r\n                    aux[property] = (refund) ?//Si se está haciendo una devolución de mercadería o se contó mal la mercadería en una parte anterior\r\n                        -Math.abs(aux[property]) ://Poner en negativo lo ingresado (así se suma y no se resta al total)\r\n                        (aux[property] < 0) ? 0 : aux[property];//Si la propiedad es negativa, convertir en 0\r\n                    if (property === 'quantity' || property === 'threads')//Si la propiedad es cantidad o hilos...\r\n                        aux[property] = Math.round(aux[property]);//No puede ser decimal\r\n                    setInput({ ...aux });\r\n                }} />\r\n        );\r\n    }\r\n\r\n    const getTable = () => {\r\n\r\n        let total = {\r\n            quantity: selectedTask.quantity,\r\n            weight: selectedTask.weight,\r\n            money: selectedTask.quantity * selectedTask.price - account,\r\n            threads: selectedTask.threads\r\n        };\r\n        \r\n        return (\r\n            <>\r\n                {parts.map((part, index) => {\r\n                    total = {\r\n                        quantity: total.quantity - part.quantity,\r\n                        weight: total.weight - part.weight,\r\n                        money: total.money - part.money,\r\n                        threads: total.threads - part.threads,\r\n                    };\r\n                    return (\r\n                        <tr key={index}>{/*Muestra el medio*/}\r\n                            <td>{part.date}</td>\r\n                            <td>{part.quantity}</td>\r\n                            <td>{total.quantity}</td>\r\n                            <td>{Number(part.weight).toFixed(1)}</td>\r\n                            <td>{Number(total.weight).toFixed(1)}</td>\r\n                            <td>{part.threads}</td>\r\n                            <td>{total.threads}</td>\r\n                            <td>{'$' + Number(part.money).toFixed(1)}</td>\r\n                            <td>{'$' + Number(part.account).toFixed(1)}</td>//TODO:\r\n                            <td>{'$' + Number(total.money).toFixed(1)}</td>\r\n                        </tr>\r\n                    );\r\n                })}\r\n                <tr>{/*Muestra la última fila*/}\r\n                    <td>{moment(new Date()).format('DD/MM/YYYY')}</td>\r\n                    <td>{inputField('quantity', total)}</td>\r\n                    <td>{total.quantity - input.quantity}</td>\r\n                    <td>{inputField('weight', total)}</td>\r\n                    <td>{(total.weight - input.weight).toFixed(1)}</td>\r\n                    <td>{inputField('threads', total)}</td>\r\n                    <td>{total.threads - input.threads}</td>\r\n                    <td>{inputField('money', total)}</td>\r\n                    <td>{'$' + account}</td>\r\n                    <td>{'$' + (total.money - input.money - account).toFixed(1)}</td>\r\n                </tr>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const getExceeded = () => {//Devuelve true si se excedió la fecha de entrega\r\n        if (!selectedTask.deadline)\r\n            return;\r\n        let today = new Date();\r\n        today.setHours(0, 0, 0, 0);\r\n        var dateParts = selectedTask.deadline.split('/');\r\n        var deadline = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        return today > deadline;\r\n    }\r\n\r\n    if (name !== '') {\r\n        Axios.post('http://localhost:3307/getUnpaidTasks', { name }).then((response) => {\r\n            if (response.data.length === 0)\r\n                return;\r\n            setTasks(response.data);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={{ 'justifyContent': 'space-between', 'display': 'flex', 'alignItems': 'baseline' }}>\r\n                <TaskRequest setSelectedTask={setSelectedTask} tasks={tasks} title={title} setTitle={setTitle} />\r\n                <h4 style={{ 'color': getExceeded() ? 'red' : 'green' }}>\r\n                    {(selectedTask === '') ? null : selectedTask.deadline}\r\n                </h4>\r\n            </div>\r\n            {title === 'Elegir tarea' ? <></> :\r\n                <>\r\n                    <Form.Check onChange={() => {\r\n                        setRefund(!refund);\r\n                        input.money = -input.money;\r\n                        input.quantity = -input.quantity;\r\n                        input.threads = -input.threads;\r\n                        input.weight = -input.weight;\r\n                    }} label=\"Devolución o corrección\" />\r\n                    <Form.Check onChange={() => setCompleted(!completed)} label=\"Tarea cerrada\" />\r\n                    <Table striped bordered id=\"taskTable\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Fecha</th>\r\n                                <th>Cantidad entregada por el taller</th>\r\n                                <th>Cantidad total de la tarea</th>\r\n                                <th>Peso entregado por el taller</th>\r\n                                <th>Peso total</th>\r\n                                <th>Hilos devueltos</th>\r\n                                <th>Hilos totales</th>\r\n                                <th>Dinero entregado</th>\r\n                                <th>Dinero a cuenta</th>\r\n                                <th>Dinero total</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr style={{ 'backgroundColor': 'green' }}>{/*Muestra el primero*/}\r\n                                <td>{selectedTask.exitDate}</td>\r\n                                <td></td>\r\n                                <td>{selectedTask.quantity}</td>\r\n                                <td></td>\r\n                                <td>{selectedTask.weight}</td>\r\n                                <td></td>\r\n                                <td>{selectedTask.threads}</td>\r\n                                <td></td>\r\n                                <td>{'$' + account}</td>\r\n                                <td>{'$' + selectedTask.price * selectedTask.quantity}</td>\r\n                            </tr>\r\n                            {getTable()}\r\n                        </tbody>\r\n                    </Table>\r\n                </>\r\n            }\r\n        </>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}
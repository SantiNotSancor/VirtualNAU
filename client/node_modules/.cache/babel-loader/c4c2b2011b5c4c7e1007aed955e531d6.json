{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\OneDrive\\\\Escritorio\\\\fabrica\\\\client\\\\src\\\\Menu\\\\deliverTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from 'react';\nimport { ModalOpener } from './modalOpener';\nimport { Request, TaskRequest } from '../textInputs';\nimport Form from 'react-bootstrap/Form';\nimport image from './Images/DeliverTask.svg';\nimport moment from 'moment';\nimport Axios from 'axios';\nimport Table from 'react-bootstrap/Table';\nimport FormControl from 'react-bootstrap/FormControl';\nimport { ModalPrototype } from '../modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class DeliverTaskButton extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      task: '',\n      quantity: '',\n      money: '',\n      weight: '',\n      threads: '',\n      price: '',\n      faulty: '',\n      completed: false,\n      error: false,\n      showObsModal: false,\n      calification: '',\n      observation: ''\n    };\n\n    this.myForm = () => {\n      return /*#__PURE__*/_jsxDEV(Form, {\n        className: \"toPrint\",\n        children: [/*#__PURE__*/_jsxDEV(Request, {\n          toShow: \"name\",\n          onChange: element => {\n            this.setState({\n              name: element\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: this.state.name,\n          onChange: (data, price, faulty, task, error, completed) => {\n            this.setState({\n              task,\n              quantity: data.quantity,\n              money: data.money,\n              weight: data.weight,\n              threads: data.threads,\n              error,\n              completed,\n              price,\n              faulty\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.post = () => {\n      Axios.post('http://localhost:3001/getTasks', {\n        id: this.state.task\n      }).then(response => {\n        Axios.put('http://localhost:3001/payWorkshop', {\n          name: response.data[0].name,\n          money: this.state.money - this.state.quantity * this.state.price\n        });\n      });\n      Axios.post('http://localhost:3001/newPart', {\n        task: this.state.task,\n        date: moment(new Date()).format('DD/MM/YYYY'),\n        quantity: this.state.quantity,\n        weight: Number(this.state.weight).toFixed(1),\n        money: Number(this.state.money).toFixed(1),\n        threads: this.state.threads\n      }).then(() => {\n        if (this.state.completed) this.setState({\n          showObsModal: true\n        });\n      });\n    };\n\n    this.completelyReturned = () => {\n      let aux = this.state;\n      Axios.put(\"http://localhost:3001/printObs\", {\n        id: aux.task,\n        observations: aux.observation,\n        calification: aux.calification,\n        faulty: aux.faulty\n      });\n      this.setState({\n        showObsModal: false\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ModalOpener, {\n        buttonText: \"Recibir tarea\",\n        children: this.myForm(),\n        logo: image,\n        className: \"title\",\n        footer: {\n          label: 'Imprimir',\n          func: () => {\n            window.print();\n          },\n          show: document.getElementById(\"taskTable\")\n        },\n        title: \"Ingreso de tarea\",\n        post: this.post,\n        error: this.state.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalPrototype, {\n        show: this.state.showObsModal,\n        post: this.completelyReturned,\n        title: \"Calificar\",\n        handleClose: () => {\n          this.completelyReturned();\n          this.setState({\n            showObsModal: false\n          });\n        },\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Request, {\n            toShow: \"observation\",\n            onChange: e => this.setState({\n              observation: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Request, {\n            toShow: \"calification\",\n            onChange: e => this.setState({\n              calification: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\nexport const Input = _ref => {\n  _s();\n\n  let {\n    onChange,\n    name\n  } = _ref;\n  const [title, setTitle] = useState('Elegir tarea');\n  const [tasks, setTasks] = useState([]);\n  const [parts, setParts] = useState([]);\n  const [input, setInput] = useState({\n    quantity: 0,\n    weight: 0,\n    money: 0,\n    threads: 0\n  });\n  const [selectedTask, setSelectedTask] = useState('');\n  const [refund, setRefund] = useState(false);\n  const [completed, setCompleted] = useState(false);\n  const [account, setAccount] = useState('');\n  useEffect(() => {\n    setInput({\n      quantity: 0,\n      weight: 0,\n      money: 0,\n      threads: 0\n    });\n    Axios.post('http://localhost:3001/getParts', {\n      task: selectedTask.id\n    }).then(response => setParts(response.data));\n    Axios.post('http://localhost:3001/getAccount', {\n      name\n    }).then(response => console.log(response.data[0])); //setAccount(response.data[0])\n  }, [selectedTask]);\n  useEffect(() => {\n    let delivered = input.quantity;\n    parts.map(part => delivered += part.quantity);\n    onChange(input, selectedTask.price, selectedTask.quantity - delivered, selectedTask.id, input.quantity > 0 && input.weight > 0 && input.money >= 0 && input.threads >= 0, delivered === selectedTask.quantity || completed);\n  }, [input, completed, refund]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const inputField = (property, total) => {\n    return /*#__PURE__*/_jsxDEV(FormControl, {\n      value: input[property],\n      onChange: e => {\n        if (isNaN(e.target.value) || total[property] < e.target.value && property !== 'money') return;\n        let aux = { ...input\n        };\n        aux[property] = e.target.value;\n        aux[property] = refund ? -Math.abs(aux[property]) : aux[property] < 0 ? 0 : aux[property];\n        if (property === 'quantity' || property === 'threads') aux[property] = Math.round(aux[property]);\n        setInput({ ...aux\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this);\n  };\n\n  const getTable = () => {\n    let total = {\n      quantity: selectedTask.quantity,\n      weight: selectedTask.weight,\n      money: selectedTask.quantity * selectedTask.price,\n      threads: selectedTask.threads\n    };\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [parts.map((part, index) => {\n        total = {\n          quantity: total.quantity - part.quantity,\n          weight: total.weight - part.weight,\n          money: total.money - part.money,\n          threads: total.threads - part.threads\n        };\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: part.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: part.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: total.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: Number(part.weight).toFixed(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: Number(total.weight).toFixed(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: part.threads\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: total.threads\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: '$' + Number(part.money).toFixed(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: '$' + Number(total.money).toFixed(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: moment(new Date()).format('DD/MM/YYYY')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: inputField('quantity', total)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: total.quantity - input.quantity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: inputField('weight', total)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: (total.weight - input.weight).toFixed(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: inputField('threads', total)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: total.threads - input.threads\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: inputField('money', total)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: '$' + (total.money - input.money).toFixed(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  };\n\n  const getExceeded = () => {\n    //Devuelve true si se excedió la fecha de entrega\n    if (!selectedTask.deadline) return;\n    let today = new Date();\n    var dateParts = selectedTask.deadline.split('/');\n    var deadline = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\n    return today > deadline ? true : false;\n  };\n\n  if (name !== '') {\n    Axios.post('http://localhost:3001/getTasks', {\n      name,\n      state: 'asigned'\n    }).then(response => {\n      if (response.data.length === 0) return;\n      setTasks(response.data);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        'justifyContent': 'space-between',\n        'display': 'flex',\n        'alignItems': 'baseline'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TaskRequest, {\n        setSelectedTask: setSelectedTask,\n        tasks: tasks,\n        title: title,\n        setTitle: setTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          'color': getExceeded() ? 'red' : 'green'\n        },\n        children: selectedTask === '' ? null : selectedTask.deadline\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }, this), title === 'Elegir tarea' ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n        onChange: () => {\n          setRefund(!refund);\n          input.money = -input.money;\n          input.quantity = -input.quantity;\n          input.threads = -input.threads;\n          input.weight = -input.weight;\n        },\n        label: \"Devoluci\\xF3n o correcci\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n        onChange: () => setCompleted(!completed),\n        label: \"Tarea cerrada\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        id: \"taskTable\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Fecha\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Cantidad entregada\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Cantidad total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Peso entregado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Peso total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Hilos entregados\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Hilos totales\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Dinero entregado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Dinero total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: selectedTask.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: selectedTask.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: selectedTask.weight\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: selectedTask.threads\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: '$' + selectedTask.price * selectedTask.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 29\n          }, this), getTable()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_s(Input, \"eDJr8qW16pNCjoctqcwaNnbboZQ=\");\n\n_c = Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["C:/Users/PC/OneDrive/Escritorio/fabrica/client/src/Menu/deliverTask.js"],"names":["React","Component","useState","useEffect","ModalOpener","Request","TaskRequest","Form","image","moment","Axios","Table","FormControl","ModalPrototype","DeliverTaskButton","state","task","quantity","money","weight","threads","price","faulty","completed","error","showObsModal","calification","observation","myForm","element","setState","name","data","post","id","then","response","put","date","Date","format","Number","toFixed","completelyReturned","aux","observations","render","label","func","window","print","show","document","getElementById","e","target","value","Input","onChange","title","setTitle","tasks","setTasks","parts","setParts","input","setInput","selectedTask","setSelectedTask","refund","setRefund","setCompleted","account","setAccount","console","log","delivered","map","part","inputField","property","total","isNaN","Math","abs","round","getTable","index","getExceeded","deadline","today","dateParts","split","length"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\r\nimport { ModalOpener } from './modalOpener';\r\nimport { Request, TaskRequest } from '../textInputs';\r\nimport Form from 'react-bootstrap/Form';\r\nimport image from './Images/DeliverTask.svg';\r\nimport moment from 'moment';\r\nimport Axios from 'axios';\r\nimport Table from 'react-bootstrap/Table';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\n\r\nimport { ModalPrototype } from '../modal';\r\n\r\n\r\nexport class DeliverTaskButton extends Component {\r\n    state = {\r\n        task: '',\r\n        quantity: '',\r\n        money: '',\r\n        weight: '',\r\n        threads: '',\r\n        price: '',\r\n        faulty: '',\r\n        completed: false,\r\n        error: false,\r\n        showObsModal: false,\r\n        calification: '',\r\n        observation: ''\r\n    }\r\n\r\n    myForm = () => {\r\n        return (\r\n            <Form className=\"toPrint\">\r\n                <Request toShow=\"name\" onChange={(element) => {\r\n                    this.setState({ name: element });\r\n                }} />\r\n                <Input name={this.state.name} onChange={(data, price, faulty, task, error, completed) => {\r\n                    this.setState({\r\n                        task, quantity: data.quantity, money: data.money, weight: data.weight,\r\n                        threads: data.threads, error, completed, price, faulty\r\n                    });\r\n                }} />\r\n            </Form>\r\n        );\r\n    }\r\n\r\n    post = () => {\r\n        Axios.post('http://localhost:3001/getTasks', { id: this.state.task }).then((response) => {\r\n            Axios.put('http://localhost:3001/payWorkshop',\r\n                { name: response.data[0].name, money: this.state.money - this.state.quantity * this.state.price })\r\n        });\r\n        Axios.post('http://localhost:3001/newPart',\r\n            {\r\n                task: this.state.task, date: moment(new Date()).format('DD/MM/YYYY'), quantity: this.state.quantity,\r\n                weight: Number(this.state.weight).toFixed(1), money: Number(this.state.money).toFixed(1), threads: this.state.threads\r\n            }).then(() => {\r\n                if (this.state.completed)\r\n                    this.setState({ showObsModal: true });\r\n            });\r\n    }\r\n\r\n    completelyReturned = () => {\r\n        let aux = this.state;\r\n        Axios.put(\"http://localhost:3001/printObs\",\r\n            { id: aux.task, observations: aux.observation, calification: aux.calification, faulty: aux.faulty });\r\n        this.setState({ showObsModal: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <ModalOpener buttonText=\"Recibir tarea\" children={this.myForm()} logo={image} className=\"title\"\r\n                    footer={{ label: 'Imprimir', func: () => { window.print() }, show: document.getElementById(\"taskTable\") }}\r\n                    title=\"Ingreso de tarea\" post={this.post} error={this.state.error} />\r\n                {/*Crea un botón que abre a un modal en el que aparecerá lo devuelto en this.myForm*/}\r\n\r\n                <ModalPrototype show={this.state.showObsModal} post={this.completelyReturned} title=\"Calificar\"\r\n                    handleClose={() => {\r\n                        this.completelyReturned();\r\n                        this.setState({ showObsModal: false });\r\n                    }}>\r\n                    <>\r\n                        <Request toShow=\"observation\" onChange={(e) => this.setState({ observation: e.target.value })} />\r\n                        <Request toShow=\"calification\" onChange={(e) => this.setState({ calification: e.target.value })} />\r\n                    </>\r\n                </ModalPrototype>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport const Input = ({ onChange, name }) => {\r\n\r\n    const [title, setTitle] = useState('Elegir tarea');\r\n    const [tasks, setTasks] = useState([]);\r\n    const [parts, setParts] = useState([]);\r\n    const [input, setInput] = useState({ quantity: 0, weight: 0, money: 0, threads: 0 });\r\n    const [selectedTask, setSelectedTask] = useState('');\r\n    const [refund, setRefund] = useState(false);\r\n    const [completed, setCompleted] = useState(false);\r\n    const [account, setAccount] = useState('');\r\n\r\n    useEffect(() => {\r\n        setInput({ quantity: 0, weight: 0, money: 0, threads: 0 });\r\n        Axios.post('http://localhost:3001/getParts', { task: selectedTask.id }).then(response => setParts(response.data));\r\n        Axios.post('http://localhost:3001/getAccount', { name }).then(response => console.log(response.data[0]));//setAccount(response.data[0])\r\n    }, [selectedTask]);\r\n\r\n    useEffect(() => {\r\n        let delivered = input.quantity;\r\n        parts.map(part => delivered += part.quantity);\r\n        onChange(input, selectedTask.price, selectedTask.quantity - delivered, selectedTask.id,\r\n            (input.quantity > 0 && input.weight > 0 && input.money >= 0 && input.threads >= 0), (delivered === selectedTask.quantity || completed));\r\n    }, [input, completed, refund]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const inputField = (property, total) => {\r\n        return (\r\n            <FormControl value={input[property]}\r\n                onChange={(e) => {\r\n                    if (isNaN(e.target.value) || (total[property] < e.target.value && property !== 'money'))\r\n                        return;\r\n                    let aux = { ...input };\r\n                    aux[property] = e.target.value;\r\n                    aux[property] = (refund) ?\r\n                        -Math.abs(aux[property]) :\r\n                        (aux[property] < 0) ? 0 : aux[property];\r\n                    if (property === 'quantity' || property === 'threads')\r\n                        aux[property] = Math.round(aux[property]);\r\n                    setInput({ ...aux });\r\n                }} />\r\n        );\r\n    }\r\n\r\n    const getTable = () => {\r\n\r\n        let total = {\r\n            quantity: selectedTask.quantity,\r\n            weight: selectedTask.weight,\r\n            money: selectedTask.quantity * selectedTask.price,\r\n            threads: selectedTask.threads\r\n        };\r\n        return (\r\n            <>\r\n                {parts.map((part, index) => {\r\n                    total = {\r\n                        quantity: total.quantity - part.quantity,\r\n                        weight: total.weight - part.weight,\r\n                        money: total.money - part.money,\r\n                        threads: total.threads - part.threads,\r\n                    };\r\n                    return (\r\n                        <tr key={index}>{/*Muestra el medio*/}\r\n                            <td>{part.date}</td>\r\n                            <td>{part.quantity}</td>\r\n                            <td>{total.quantity}</td>\r\n                            <td>{Number(part.weight).toFixed(1)}</td>\r\n                            <td>{Number(total.weight).toFixed(1)}</td>\r\n                            <td>{part.threads}</td>\r\n                            <td>{total.threads}</td>\r\n                            <td>{'$' + Number(part.money).toFixed(1)}</td>\r\n                            <td>{'$' + Number(total.money).toFixed(1)}</td>\r\n                        </tr>\r\n                    );\r\n                })}\r\n                <tr>{/*Muestra la última fila*/}\r\n                    <td>{moment(new Date()).format('DD/MM/YYYY')}</td>\r\n                    <td>{inputField('quantity', total)}</td>\r\n                    <td>{total.quantity - input.quantity}</td>\r\n                    <td>{inputField('weight', total)}</td>\r\n                    <td>{(total.weight - input.weight).toFixed(1)}</td>\r\n                    <td>{inputField('threads', total)}</td>\r\n                    <td>{total.threads - input.threads}</td>\r\n                    <td>{inputField('money', total)}</td>\r\n                    <td>{'$' + (total.money - input.money).toFixed(1)}</td>\r\n                </tr>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const getExceeded = () => {//Devuelve true si se excedió la fecha de entrega\r\n        if (!selectedTask.deadline)\r\n            return;\r\n        let today = new Date();\r\n        var dateParts = selectedTask.deadline.split('/');\r\n        var deadline = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        return (today > deadline) ? true : false;\r\n    }\r\n\r\n    if (name !== '') {\r\n        Axios.post('http://localhost:3001/getTasks', { name, state: 'asigned' }).then((response) => {\r\n            if (response.data.length === 0)\r\n                return;\r\n            setTasks(response.data);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={{ 'justifyContent': 'space-between', 'display': 'flex', 'alignItems': 'baseline' }}>\r\n                <TaskRequest setSelectedTask={setSelectedTask} tasks={tasks} title={title} setTitle={setTitle} />\r\n                <h4 style={{ 'color': getExceeded() ? 'red' : 'green' }}>\r\n                    {(selectedTask === '') ? null : selectedTask.deadline}\r\n                </h4>\r\n            </div>\r\n            {title === 'Elegir tarea' ? <></> :\r\n                <>\r\n                    <Form.Check onChange={() => {\r\n                        setRefund(!refund);\r\n                        input.money = -input.money;\r\n                        input.quantity = -input.quantity;\r\n                        input.threads = -input.threads;\r\n                        input.weight = -input.weight;\r\n                    }} label=\"Devolución o corrección\" />\r\n                    <Form.Check onChange={() => setCompleted(!completed)} label=\"Tarea cerrada\" />\r\n                    <Table striped bordered id=\"taskTable\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Fecha</th>\r\n                                <th>Cantidad entregada</th>\r\n                                <th>Cantidad total</th>\r\n                                <th>Peso entregado</th>\r\n                                <th>Peso total</th>\r\n                                <th>Hilos entregados</th>\r\n                                <th>Hilos totales</th>\r\n                                <th>Dinero entregado</th>\r\n                                <th>Dinero total</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>{/*Muestra el primero*/}\r\n                                <td>{selectedTask.date}</td>\r\n                                <td></td>\r\n                                <td>{selectedTask.quantity}</td>\r\n                                <td></td>\r\n                                <td>{selectedTask.weight}</td>\r\n                                <td></td>\r\n                                <td>{selectedTask.threads}</td>\r\n                                <td></td>\r\n                                <td>{'$' + selectedTask.price * selectedTask.quantity}</td>\r\n                            </tr>\r\n                            {getTable()}\r\n                        </tbody>\r\n                    </Table>\r\n                </>\r\n            }\r\n        </>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\santi\\\\OneDrive\\\\Escritorio\\\\Proyecto 2022\\\\VirtualNAU\\\\client\\\\src\\\\modalOpener.js\";\nimport React from 'react';\nimport { ModalController, ModalPrototype } from './modal';\nimport PropTypes from 'prop-types'; //Crea un botón que abre un modal\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ModalOpener extends ModalController {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: this.props.imageClassName,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: this.props.imageClassName,\n        alt: \"\",\n        src: this.props.logo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: this.props.cardClassName,\n        onClick: this.showModal,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: this.props.buttonClassName,\n          children: this.props.buttonText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalPrototype, {\n        show: this.state.showModal,\n        handleClose: () => {\n          this.hideModal();\n          if (this.props.handleClose) this.props.handleClose();\n        },\n        footer: this.props.footer,\n        children: this.props.children,\n        title: this.props.title,\n        post: () => {\n          if (!this.props.error) {\n            this.props.post();\n            this.hideModal();\n          } else alert('Error');\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nModalOpener.propTypes = {\n  post: PropTypes.func.isRequired,\n  //Enviará los datos al back-end\n  title: PropTypes.string.isRequired,\n  //Título del modal\n  cardClassName: PropTypes.string,\n  //Texto que le dará clase a el div\n  buttonClassName: PropTypes.string,\n  //Texto que le dará clase a el div\n  imageClassName: PropTypes.string,\n  //Texto que le dará clase a el div\n  logo: PropTypes.string.isRequired,\n  //Dirección relativa donde se encuentra el logo\n  buttonText: PropTypes.string.isRequired,\n  //Texto que aparecerá en el botón\n  children: PropTypes.element.isRequired,\n  //Hijo que aparecerá en el modal\n  footer: PropTypes.object,\n  error: PropTypes.bool,\n  handleClose: PropTypes.func\n};\nModalOpener.defaultProps = {\n  error: false\n};","map":{"version":3,"sources":["C:/Users/santi/OneDrive/Escritorio/Proyecto 2022/VirtualNAU/client/src/modalOpener.js"],"names":["React","ModalController","ModalPrototype","PropTypes","ModalOpener","render","props","imageClassName","logo","cardClassName","showModal","buttonClassName","buttonText","state","hideModal","handleClose","footer","children","title","error","post","alert","propTypes","func","isRequired","string","element","object","bool","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,EAA0BC,cAA1B,QAAgD,SAAhD;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;;AAEA,OAAO,MAAMC,WAAN,SAA0BH,eAA1B,CAA0C;AAE7CI,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAE,KAAKC,KAAL,CAAWC,cAA3B;AAAA,8BACQ;AAAK,QAAA,SAAS,EAAE,KAAKD,KAAL,CAAWC,cAA3B;AAA2C,QAAA,GAAG,EAAC,EAA/C;AAAkD,QAAA,GAAG,EAAE,KAAKD,KAAL,CAAWE;AAAlE;AAAA;AAAA;AAAA;AAAA,cADR,eAEI;AAAQ,QAAA,SAAS,EAAE,KAAKF,KAAL,CAAWG,aAA9B;AAA6C,QAAA,OAAO,EAAE,KAAKC,SAA3D;AAAA,+BACI;AAAK,UAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWK,eAA3B;AAAA,oBAA6C,KAAKL,KAAL,CAAWM;AAAxD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAKI,QAAC,cAAD;AAAgB,QAAA,IAAI,EAAE,KAAKC,KAAL,CAAWH,SAAjC;AAA4C,QAAA,WAAW,EAAE,MAAM;AAC3D,eAAKI,SAAL;AACA,cAAG,KAAKR,KAAL,CAAWS,WAAd,EACI,KAAKT,KAAL,CAAWS,WAAX;AACP,SAJD;AAIG,QAAA,MAAM,EAAE,KAAKT,KAAL,CAAWU,MAJtB;AAKI,QAAA,QAAQ,EAAE,KAAKV,KAAL,CAAWW,QALzB;AAKmC,QAAA,KAAK,EAAE,KAAKX,KAAL,CAAWY,KALrD;AAK4D,QAAA,IAAI,EAAE,MAAM;AAChE,cAAI,CAAC,KAAKZ,KAAL,CAAWa,KAAhB,EAAuB;AACnB,iBAAKb,KAAL,CAAWc,IAAX;AACA,iBAAKN,SAAL;AACH,WAHD,MAKIO,KAAK,CAAC,OAAD,CAAL;AACP;AAZL;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAsBH;;AAzB4C;AA6BjDjB,WAAW,CAACkB,SAAZ,GAAwB;AACpBF,EAAAA,IAAI,EAAEjB,SAAS,CAACoB,IAAV,CAAeC,UADD;AACY;AAChCN,EAAAA,KAAK,EAAEf,SAAS,CAACsB,MAAV,CAAiBD,UAFJ;AAEe;AACnCf,EAAAA,aAAa,EAAEN,SAAS,CAACsB,MAHL;AAGY;AAChCd,EAAAA,eAAe,EAAER,SAAS,CAACsB,MAJP;AAIc;AAClClB,EAAAA,cAAc,EAAEJ,SAAS,CAACsB,MALN;AAKa;AACjCjB,EAAAA,IAAI,EAAEL,SAAS,CAACsB,MAAV,CAAiBD,UANH;AAMc;AAClCZ,EAAAA,UAAU,EAAET,SAAS,CAACsB,MAAV,CAAiBD,UAPT;AAOoB;AACxCP,EAAAA,QAAQ,EAAEd,SAAS,CAACuB,OAAV,CAAkBF,UARR;AAQmB;AACvCR,EAAAA,MAAM,EAAEb,SAAS,CAACwB,MATE;AAUpBR,EAAAA,KAAK,EAAEhB,SAAS,CAACyB,IAVG;AAWpBb,EAAAA,WAAW,EAAEZ,SAAS,CAACoB;AAXH,CAAxB;AAcAnB,WAAW,CAACyB,YAAZ,GAA2B;AACvBV,EAAAA,KAAK,EAAE;AADgB,CAA3B","sourcesContent":["import React from 'react';\r\nimport { ModalController, ModalPrototype } from './modal';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Crea un botón que abre un modal\r\n\r\nexport class ModalOpener extends ModalController {\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.props.imageClassName}>\r\n                    <img className={this.props.imageClassName} alt=\"\" src={this.props.logo}/>\r\n                <button className={this.props.cardClassName} onClick={this.showModal}>{/*Hereda la función desde ModalController*/}\r\n                    <div className={this.props.buttonClassName}>{this.props.buttonText}</div>\r\n                </button>\r\n                <ModalPrototype show={this.state.showModal} handleClose={() => {\r\n                    this.hideModal();\r\n                    if(this.props.handleClose)\r\n                        this.props.handleClose();\r\n                }} footer={this.props.footer}\r\n                    children={this.props.children} title={this.props.title} post={() => {\r\n                        if (!this.props.error) {\r\n                            this.props.post();\r\n                            this.hideModal();\r\n                        }\r\n                        else\r\n                            alert('Error');\r\n                    }} />\r\n                {/*Crea un Modal que se muestra si this.state.showModal y con hijo(s) this.props.children*/}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nModalOpener.propTypes = {\r\n    post: PropTypes.func.isRequired,//Enviará los datos al back-end\r\n    title: PropTypes.string.isRequired,//Título del modal\r\n    cardClassName: PropTypes.string,//Texto que le dará clase a el div\r\n    buttonClassName: PropTypes.string,//Texto que le dará clase a el div\r\n    imageClassName: PropTypes.string,//Texto que le dará clase a el div\r\n    logo: PropTypes.string.isRequired,//Dirección relativa donde se encuentra el logo\r\n    buttonText: PropTypes.string.isRequired,//Texto que aparecerá en el botón\r\n    children: PropTypes.element.isRequired,//Hijo que aparecerá en el modal\r\n    footer: PropTypes.object,\r\n    error: PropTypes.bool,\r\n    handleClose: PropTypes.func\r\n}\r\n\r\nModalOpener.defaultProps = {\r\n    error: false\r\n}"]},"metadata":{},"sourceType":"module"}
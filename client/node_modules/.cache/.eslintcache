[{"C:\\Users\\PC\\OneDrive\\Escritorio\\fabrica\\client\\src\\index.js":"1","C:\\Users\\PC\\OneDrive\\Escritorio\\fabrica\\client\\src\\Menu\\index.js":"2","C:\\Users\\PC\\OneDrive\\Escritorio\\fabrica\\client\\src\\Menu\\deliverTask.js":"3","C:\\Users\\PC\\OneDrive\\Escritorio\\fabrica\\client\\src\\Menu\\newTask.js":"4","C:\\Users\\PC\\OneDrive\\Escritorio\\fabrica\\client\\src\\Menu\\navegation.js":"5","C:\\Users\\PC\\OneDrive\\Escritorio\\fabrica\\client\\src\\Menu\\RegistrationDrop\\registrationDrop.js":"6","C:\\Users\\PC\\OneDrive\\Escritorio\\fabrica\\client\\src\\Menu\\modalOpener.js":"7","C:\\Users\\PC\\OneDrive\\Escritorio\\fabrica\\client\\src\\modal.js":"8","C:\\Users\\PC\\OneDrive\\Escritorio\\fabrica\\client\\src\\Menu\\RegistrationDrop\\modals.js":"9","C:\\Users\\PC\\OneDrive\\Escritorio\\fabrica\\client\\src\\Menu\\modifyData.js":"10","C:\\Users\\PC\\OneDrive\\Escritorio\\fabrica\\client\\src\\textInputs.js":"11","C:\\Users\\PC\\OneDrive\\Escritorio\\fabrica\\client\\src\\Menu\\asignTask.js":"12","C:\\Users\\PC\\OneDrive\\Escritorio\\fabrica\\client\\src\\tables.js":"13","C:\\Users\\PC\\OneDrive\\Escritorio\\fabrica\\client\\src\\Menu\\showData.js":"14","D:\\Users\\PC\\VirtualNAU\\client\\src\\index.js":"15","D:\\Users\\PC\\VirtualNAU\\client\\src\\Menu\\index.js":"16","D:\\Users\\PC\\VirtualNAU\\client\\src\\Menu\\deliverTask.js":"17","D:\\Users\\PC\\VirtualNAU\\client\\src\\Menu\\newTask.js":"18","D:\\Users\\PC\\VirtualNAU\\client\\src\\Menu\\modifyData.js":"19","D:\\Users\\PC\\VirtualNAU\\client\\src\\Menu\\asignTask.js":"20","D:\\Users\\PC\\VirtualNAU\\client\\src\\Menu\\showData.js":"21","D:\\Users\\PC\\VirtualNAU\\client\\src\\Menu\\RegistrationDrop\\registrationDrop.js":"22","D:\\Users\\PC\\VirtualNAU\\client\\src\\modal.js":"23","D:\\Users\\PC\\VirtualNAU\\client\\src\\Menu\\modalOpener.js":"24","D:\\Users\\PC\\VirtualNAU\\client\\src\\textInputs.js":"25","D:\\Users\\PC\\VirtualNAU\\client\\src\\Menu\\RegistrationDrop\\modals.js":"26"},{"size":206,"mtime":1646908013527,"results":"27","hashOfConfig":"28"},{"size":922,"mtime":1650815198458,"results":"29","hashOfConfig":"28"},{"size":12822,"mtime":1650815126183,"results":"30","hashOfConfig":"28"},{"size":5085,"mtime":1650731231735,"results":"31","hashOfConfig":"28"},{"size":979,"mtime":1644125118156,"results":"32","hashOfConfig":"28"},{"size":2067,"mtime":1643895659625,"results":"33","hashOfConfig":"28"},{"size":2068,"mtime":1649072832153,"results":"34","hashOfConfig":"28"},{"size":2333,"mtime":1650813873719,"results":"35","hashOfConfig":"28"},{"size":4965,"mtime":1648550757344,"results":"36","hashOfConfig":"28"},{"size":4444,"mtime":1648550816755,"results":"37","hashOfConfig":"28"},{"size":17940,"mtime":1650730842033,"results":"38","hashOfConfig":"28"},{"size":5765,"mtime":1650731389168,"results":"39","hashOfConfig":"28"},{"size":0,"mtime":1650815186912,"results":"40","hashOfConfig":"28"},{"size":2082,"mtime":1650831065350,"results":"41","hashOfConfig":"28"},{"size":206,"mtime":1646908013527,"results":"42","hashOfConfig":"43"},{"size":890,"mtime":1651234888340,"results":"44","hashOfConfig":"43"},{"size":12822,"mtime":1650815126183,"results":"45","hashOfConfig":"43"},{"size":5085,"mtime":1650731231735,"results":"46","hashOfConfig":"43"},{"size":4444,"mtime":1648550816755,"results":"47","hashOfConfig":"43"},{"size":5765,"mtime":1650731389168,"results":"48","hashOfConfig":"43"},{"size":2284,"mtime":1651236947071,"results":"49","hashOfConfig":"43"},{"size":2067,"mtime":1643895659625,"results":"50","hashOfConfig":"43"},{"size":2333,"mtime":1650813873719,"results":"51","hashOfConfig":"43"},{"size":2068,"mtime":1649072832153,"results":"52","hashOfConfig":"43"},{"size":17940,"mtime":1650730842033,"results":"53","hashOfConfig":"43"},{"size":4965,"mtime":1648550757344,"results":"54","hashOfConfig":"43"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pgvg48",{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ce3qgk",{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\PC\\OneDrive\\Escritorio\\fabrica\\client\\src\\index.js",[],"C:\\Users\\PC\\OneDrive\\Escritorio\\fabrica\\client\\src\\Menu\\index.js",[],"C:\\Users\\PC\\OneDrive\\Escritorio\\fabrica\\client\\src\\Menu\\deliverTask.js",["111"],"import React, { Component, useState, useEffect } from 'react';\r\nimport { ModalOpener } from './modalOpener';\r\nimport { Request, TaskRequest } from '../textInputs';\r\nimport Form from 'react-bootstrap/Form';\r\nimport image from './Images/DeliverTask.svg';\r\nimport moment from 'moment';\r\nimport Axios from 'axios';\r\nimport Table from 'react-bootstrap/Table';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport { ModalPrototype } from '../modal';\r\n\r\nconst initialState = {\r\n    error: true,\r\n    errors: [true, true],\r\n    showObsModal: false,\r\n    task: '',\r\n    name: '',\r\n    quantity: '',\r\n    money: '',\r\n    weight: '',\r\n    threads: '',\r\n    price: '',\r\n    faulty: '',\r\n    completed: false,\r\n    calification: '',\r\n    observation: ''\r\n}\r\n\r\nexport class DeliverTaskButton extends Component {\r\n\r\n    state = initialState;\r\n    form = React.createRef();\r\n\r\n    resetState = () => {\r\n        this.setState(initialState);\r\n    }\r\n\r\n    updateError = (index, error) => {\r\n        let errors = [...this.state.errors];\r\n        errors[index] = error;\r\n        this.setState({ errors });\r\n\r\n        let aux = false;\r\n        errors.map((e, key) => \r\n            aux = aux && (key === index) ? error : e\r\n        );\r\n        this.setState({ error: aux });\r\n    }\r\n\r\n    handleEnter = (event) => {\r\n        if (event.key.toLowerCase() !== 'enter')\r\n            return;\r\n        const form = this.form.current;\r\n        const index = [...form].indexOf(event.target);\r\n        if (form.elements[index + 1])\r\n            form.elements[index + 1].focus();\r\n    };\r\n\r\n    myForm = () => {\r\n        return (\r\n            <Form id='toPrint' ref={this.form} onSubmit={e => e.preventDefault()}>\r\n                <Request toShow='name' handleEnter={this.handleEnter} onChange={(value, error) => {\r\n                    this.setState({ name: value });\r\n                    this.updateError(0, error);\r\n                }} />\r\n                <Input name={this.state.name} onChange={(data, price, faulty, task, completed) => {\r\n                    this.setState({\r\n                        task, quantity: data.quantity, money: data.money, weight: data.weight,\r\n                        threads: data.threads, completed, price, faulty\r\n                    });\r\n                    this.updateError(1, false);\r\n                }} />\r\n            </Form>\r\n        );\r\n    }\r\n\r\n    post = () => {\r\n        let aux = this.state;\r\n        if (!aux.completed)\r\n            this.resetState();\r\n        Axios.post('http://localhost:3001/getTasks', { id: aux.task }).then((response) => {\r\n            Axios.put('http://localhost:3001/payWorkshop',\r\n                { name: response.data[0].name, money: aux.money - aux.quantity * aux.price })\r\n        });\r\n        Axios.post('http://localhost:3001/newPart',\r\n            {\r\n                name: aux.name, task: aux.task, date: moment(new Date()).format('DD/MM/YYYY'), quantity: aux.quantity,\r\n                weight: Number(aux.weight).toFixed(1), money: Number(aux.money).toFixed(1), threads: aux.threads\r\n            }).then(() => {\r\n                if (aux.completed)\r\n                    this.setState({ showObsModal: true });\r\n            });\r\n    }\r\n\r\n    completelyReturned = () => {\r\n        console.log(this.state);\r\n        Axios.put('http://localhost:3001/printObs',\r\n            {\r\n                id: this.state.task, observations: this.state.observation, calification: this.state.calification,\r\n                faulty: this.state.faulty\r\n            });\r\n    }\r\n\r\n    print = () => {\r\n        if (this.state.error) {\r\n            alert('Error. No se puede imprimir una boleta inválida.');\r\n            return;\r\n        }\r\n        var printContents = document.getElementById('toPrint').innerHTML;\r\n        var originalContents = document.body.innerHTML;\r\n        document.body.innerHTML = printContents;\r\n        window.print();\r\n        document.body.innerHTML = originalContents;\r\n    }\r\n\r\n    sendObs = () => {\r\n        this.completelyReturned();\r\n        this.resetState();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <ModalOpener buttonText=\"Recibir tarea\" children={this.myForm()} logo={image} className=\"title\"\r\n                    footer={{ label: 'Imprimir', func: this.print, show: !!document.getElementById(\"taskTable\") }}\r\n                    title=\"Ingreso de tarea\" post={this.post} error={this.state.error} />\r\n                {/*Crea un botón que abre a un modal en el que aparecerá lo devuelto en this.myForm*/}\r\n\r\n                <ModalPrototype title=\"Calificar\" show={this.state.showObsModal} post={this.sendObs} handleClose={this.sendObs}>\r\n                    <>\r\n                        <Request toShow=\"observation\" onChange={(e) => this.setState({ observation: e.target.value })} />\r\n                        <Request toShow=\"calification\" onChange={(e) => this.setState({ calification: e.target.value })} />\r\n                    </>\r\n                </ModalPrototype>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport const Input = ({ onChange, name }) => {\r\n\r\n    const [title, setTitle] = useState('Elegir tarea');\r\n    const [tasks, setTasks] = useState([]);\r\n    const [parts, setParts] = useState([]);\r\n    const [input, setInput] = useState({ quantity: 0, weight: 0, money: 0, threads: 0 });\r\n    const [selectedTask, setSelectedTask] = useState('');\r\n    const [refund, setRefund] = useState(false);\r\n    const [completed, setCompleted] = useState(false);\r\n    const [account, setAccount] = useState('');\r\n    const [quantityBackUp, setQuantityBackUp] = useState('');\r\n\r\n    useEffect(() => {\r\n        setInput({ quantity: 0, weight: 0, money: 0, threads: 0 });\r\n        Axios.post('http://localhost:3001/getParts', { task: selectedTask.id }).then(response => setParts(response.data));\r\n        if (name)\r\n            Axios.post('http://localhost:3001/getAccount', { name }).then(response => setAccount(response.data[0].money));\r\n    }, [selectedTask]);\r\n\r\n    useEffect(() => {\r\n        let delivered = input.quantity;\r\n        let totalMoney = selectedTask.quantity * selectedTask.price - account;\r\n        parts.map(part => delivered += part.quantity);\r\n\r\n        if (quantityBackUp !== input.quantity) {\r\n            input.money = input.quantity * selectedTask.price;\r\n            if (input.money > totalMoney)\r\n                input.money = totalMoney;\r\n            setQuantityBackUp(input.quantity);\r\n        }\r\n        onChange(input, selectedTask.price, selectedTask.quantity - delivered, selectedTask.id, (delivered === selectedTask.quantity || completed));\r\n    }, [input, completed, refund]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const inputField = (property, total) => {\r\n        return (\r\n            <FormControl value={input[property]}\r\n                onChange={(e) => {\r\n                    if (isNaN(e.target.value) || (total[property] < e.target.value && property !== 'money'))\r\n                        return;\r\n                    let aux = { ...input };\r\n                    aux[property] = e.target.value;\r\n                    aux[property] = (refund) ?\r\n                        -Math.abs(aux[property]) :\r\n                        (aux[property] < 0) ? 0 : aux[property];\r\n                    if (property === 'quantity' || property === 'threads')\r\n                        aux[property] = Math.round(aux[property]);\r\n                    setInput({ ...aux });\r\n                }} />\r\n        );\r\n    }\r\n\r\n    const getTable = () => {\r\n\r\n        let total = {\r\n            quantity: selectedTask.quantity,\r\n            weight: selectedTask.weight,\r\n            money: selectedTask.quantity * selectedTask.price - account,\r\n            threads: selectedTask.threads\r\n        };\r\n        return (\r\n            <>\r\n                {parts.map((part, index) => {\r\n                    total = {\r\n                        quantity: total.quantity - part.quantity,\r\n                        weight: total.weight - part.weight,\r\n                        money: total.money - part.money,\r\n                        threads: total.threads - part.threads,\r\n                    };\r\n                    return (\r\n                        <tr key={index}>{/*Muestra el medio*/}\r\n                            <td>{part.date}</td>\r\n                            <td>{part.quantity}</td>\r\n                            <td>{total.quantity}</td>\r\n                            <td>{Number(part.weight).toFixed(1)}</td>\r\n                            <td>{Number(total.weight).toFixed(1)}</td>\r\n                            <td>{part.threads}</td>\r\n                            <td>{total.threads}</td>\r\n                            <td>{'$' + Number(part.money).toFixed(1)}</td>\r\n                            <td>{'$' + Number(total.money).toFixed(1)}</td>\r\n                        </tr>\r\n                    );\r\n                })}\r\n                <tr>{/*Muestra la última fila*/}\r\n                    <td>{moment(new Date()).format('DD/MM/YYYY')}</td>\r\n                    <td>{inputField('quantity', total)}</td>\r\n                    <td>{total.quantity - input.quantity}</td>\r\n                    <td>{inputField('weight', total)}</td>\r\n                    <td>{(total.weight - input.weight).toFixed(1)}</td>\r\n                    <td>{inputField('threads', total)}</td>\r\n                    <td>{total.threads - input.threads}</td>\r\n                    <td>{inputField('money', total)}</td>\r\n                    <td>{'$' + (total.money - input.money).toFixed(1)}</td>\r\n                </tr>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const getExceeded = () => {//Devuelve true si se excedió la fecha de entrega\r\n        if (!selectedTask.deadline)\r\n            return;\r\n        let today = new Date();\r\n        today.setHours(0, 0, 0, 0);\r\n        var dateParts = selectedTask.deadline.split('/');\r\n        var deadline = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        return today > deadline;\r\n    }\r\n\r\n    if (name !== '') {\r\n        Axios.post('http://localhost:3001/getTasks', { name, state: 'asigned' }).then((response) => {\r\n            if (response.data.length === 0)\r\n                return;\r\n            setTasks(response.data);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={{ 'justifyContent': 'space-between', 'display': 'flex', 'alignItems': 'baseline' }}>\r\n                <TaskRequest setSelectedTask={setSelectedTask} tasks={tasks} title={title} setTitle={setTitle} />\r\n                <h4 style={{ 'color': getExceeded() ? 'red' : 'green' }}>\r\n                    {(selectedTask === '') ? null : selectedTask.deadline}\r\n                </h4>\r\n            </div>\r\n            {title === 'Elegir tarea' ? <></> :\r\n                <>\r\n                    <Form.Check onChange={() => {\r\n                        setRefund(!refund);\r\n                        input.money = -input.money;\r\n                        input.quantity = -input.quantity;\r\n                        input.threads = -input.threads;\r\n                        input.weight = -input.weight;\r\n                    }} label=\"Devolución o corrección\" />\r\n                    <Form.Check onChange={() => setCompleted(!completed)} label=\"Tarea cerrada\" />\r\n                    <Table striped bordered id=\"taskTable\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Fecha</th>\r\n                                <th>Cantidad entregada por el taller</th>\r\n                                <th>Cantidad total de la tarea</th>\r\n                                <th>Peso entregado por el taller</th>\r\n                                <th>Peso total</th>\r\n                                <th>Hilos devueltos</th>\r\n                                <th>Hilos totales</th>\r\n                                <th>Dinero entregado</th>\r\n                                <th>Dinero total</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr style={{ 'backgroundColor': 'green' }}>{/*Muestra el primero*/}\r\n                                <td>{selectedTask.exitDate}</td>\r\n                                <td></td>\r\n                                <td>{selectedTask.quantity}</td>\r\n                                <td></td>\r\n                                <td>{selectedTask.weight}</td>\r\n                                <td></td>\r\n                                <td>{selectedTask.threads}</td>\r\n                                <td>{'$' + account + ' (A CTA)'}</td>\r\n                                <td>{'$' + selectedTask.price * selectedTask.quantity}</td>\r\n                            </tr>\r\n                            {getTable()}\r\n                        </tbody>\r\n                    </Table>\r\n                </>\r\n            }\r\n        </>\r\n    );\r\n}",["112","113"],"C:\\Users\\PC\\OneDrive\\Escritorio\\fabrica\\client\\src\\Menu\\newTask.js",["114"],"C:\\Users\\PC\\OneDrive\\Escritorio\\fabrica\\client\\src\\Menu\\navegation.js",[],["115","116"],"C:\\Users\\PC\\OneDrive\\Escritorio\\fabrica\\client\\src\\Menu\\RegistrationDrop\\registrationDrop.js",[],"C:\\Users\\PC\\OneDrive\\Escritorio\\fabrica\\client\\src\\Menu\\modalOpener.js",[],"C:\\Users\\PC\\OneDrive\\Escritorio\\fabrica\\client\\src\\modal.js",[],"C:\\Users\\PC\\OneDrive\\Escritorio\\fabrica\\client\\src\\Menu\\RegistrationDrop\\modals.js",[],"C:\\Users\\PC\\OneDrive\\Escritorio\\fabrica\\client\\src\\Menu\\modifyData.js",[],["117","118"],"C:\\Users\\PC\\OneDrive\\Escritorio\\fabrica\\client\\src\\textInputs.js",["119","120","121","122","123"],"C:\\Users\\PC\\OneDrive\\Escritorio\\fabrica\\client\\src\\Menu\\asignTask.js",["124","125"],"C:\\Users\\PC\\OneDrive\\Escritorio\\fabrica\\client\\src\\tables.js",[],"C:\\Users\\PC\\OneDrive\\Escritorio\\fabrica\\client\\src\\Menu\\showData.js",["126","127"],"D:\\Users\\PC\\VirtualNAU\\client\\src\\index.js",[],"D:\\Users\\PC\\VirtualNAU\\client\\src\\Menu\\index.js",[],"D:\\Users\\PC\\VirtualNAU\\client\\src\\Menu\\deliverTask.js",["128"],"D:\\Users\\PC\\VirtualNAU\\client\\src\\Menu\\newTask.js",["129"],"D:\\Users\\PC\\VirtualNAU\\client\\src\\Menu\\modifyData.js",[],"D:\\Users\\PC\\VirtualNAU\\client\\src\\Menu\\asignTask.js",["130","131"],"D:\\Users\\PC\\VirtualNAU\\client\\src\\Menu\\showData.js",[],"D:\\Users\\PC\\VirtualNAU\\client\\src\\Menu\\RegistrationDrop\\registrationDrop.js",[],"D:\\Users\\PC\\VirtualNAU\\client\\src\\modal.js",[],"D:\\Users\\PC\\VirtualNAU\\client\\src\\Menu\\modalOpener.js",[],"D:\\Users\\PC\\VirtualNAU\\client\\src\\textInputs.js",["132","133","134","135","136"],"D:\\Users\\PC\\VirtualNAU\\client\\src\\Menu\\RegistrationDrop\\modals.js",[],{"ruleId":"137","severity":1,"message":"138","line":157,"column":8,"nodeType":"139","endLine":157,"endColumn":22,"suggestions":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":39,"column":29,"nodeType":"147","messageId":"148","endLine":39,"endColumn":31},{"ruleId":"141","replacedBy":"149"},{"ruleId":"143","replacedBy":"150"},{"ruleId":"141","replacedBy":"151"},{"ruleId":"143","replacedBy":"152"},{"ruleId":"153","severity":1,"message":"154","line":6,"column":8,"nodeType":"155","messageId":"156","endLine":6,"endColumn":15},{"ruleId":"153","severity":1,"message":"157","line":7,"column":8,"nodeType":"155","messageId":"156","endLine":7,"endColumn":22},{"ruleId":"153","severity":1,"message":"158","line":12,"column":10,"nodeType":"155","messageId":"156","endLine":12,"endColumn":18},{"ruleId":"145","severity":1,"message":"146","line":81,"column":29,"nodeType":"147","messageId":"148","endLine":81,"endColumn":31},{"ruleId":"153","severity":1,"message":"159","line":371,"column":12,"nodeType":"155","messageId":"156","endLine":371,"endColumn":17},{"ruleId":"145","severity":1,"message":"146","line":42,"column":29,"nodeType":"147","messageId":"148","endLine":42,"endColumn":31},{"ruleId":"145","severity":1,"message":"146","line":60,"column":42,"nodeType":"147","messageId":"148","endLine":60,"endColumn":44},{"ruleId":"160","severity":2,"message":"161","line":36,"column":40,"nodeType":"155","messageId":"162","endLine":36,"endColumn":45},{"ruleId":"160","severity":2,"message":"161","line":38,"column":21,"nodeType":"155","messageId":"162","endLine":38,"endColumn":26},{"ruleId":"137","severity":1,"message":"138","line":157,"column":8,"nodeType":"139","endLine":157,"endColumn":22,"suggestions":"163"},{"ruleId":"145","severity":1,"message":"146","line":39,"column":29,"nodeType":"147","messageId":"148","endLine":39,"endColumn":31},{"ruleId":"145","severity":1,"message":"146","line":42,"column":29,"nodeType":"147","messageId":"148","endLine":42,"endColumn":31},{"ruleId":"145","severity":1,"message":"146","line":60,"column":42,"nodeType":"147","messageId":"148","endLine":60,"endColumn":44},{"ruleId":"153","severity":1,"message":"154","line":6,"column":8,"nodeType":"155","messageId":"156","endLine":6,"endColumn":15},{"ruleId":"153","severity":1,"message":"157","line":7,"column":8,"nodeType":"155","messageId":"156","endLine":7,"endColumn":22},{"ruleId":"153","severity":1,"message":"158","line":12,"column":10,"nodeType":"155","messageId":"156","endLine":12,"endColumn":18},{"ruleId":"145","severity":1,"message":"146","line":81,"column":29,"nodeType":"147","messageId":"148","endLine":81,"endColumn":31},{"ruleId":"153","severity":1,"message":"159","line":371,"column":12,"nodeType":"155","messageId":"156","endLine":371,"endColumn":17},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'name'. Either include it or remove the dependency array.","ArrayExpression",["164"],"no-native-reassign",["165"],"no-negated-in-lhs",["166"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["165"],["166"],["165"],["166"],"no-unused-vars","'Popover' is defined but never used.","Identifier","unusedVar","'OverlayTrigger' is defined but never used.","'ModalArt' is defined but never used.","'shown' is assigned a value but never used.","no-undef","'title' is not defined.","undef",["167"],{"desc":"168","fix":"169"},"no-global-assign","no-unsafe-negation",{"desc":"168","fix":"170"},"Update the dependencies array to be: [name, selectedTask]",{"range":"171","text":"172"},{"range":"173","text":"172"},[5947,5961],"[name, selectedTask]",[5947,5961]]
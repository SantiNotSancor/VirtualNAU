[{"D:\\Users\\PC\\VirtualNAU\\client\\src\\index.js":"1","D:\\Users\\PC\\VirtualNAU\\client\\src\\WorkshopsAdm\\index.js":"2","D:\\Users\\PC\\VirtualNAU\\client\\src\\Login\\index.js":"3","D:\\Users\\PC\\VirtualNAU\\client\\src\\Vendor\\index.js":"4","D:\\Users\\PC\\VirtualNAU\\client\\src\\showData.js":"5","D:\\Users\\PC\\VirtualNAU\\client\\src\\WorkshopsAdm\\newTask.js":"6","D:\\Users\\PC\\VirtualNAU\\client\\src\\WorkshopsAdm\\assignTask.js":"7","D:\\Users\\PC\\VirtualNAU\\client\\src\\WorkshopsAdm\\deliverTask.js":"8","D:\\Users\\PC\\VirtualNAU\\client\\src\\WorkshopsAdm\\newPayment.js":"9","D:\\Users\\PC\\VirtualNAU\\client\\src\\Vendor\\addStock.js":"10","D:\\Users\\PC\\VirtualNAU\\client\\src\\Vendor\\newQuery.js":"11","D:\\Users\\PC\\VirtualNAU\\client\\src\\WorkshopsAdm\\RegistrationDrop\\registrationDrop.js":"12","D:\\Users\\PC\\VirtualNAU\\client\\src\\modalOpener.js":"13","D:\\Users\\PC\\VirtualNAU\\client\\src\\modal.js":"14","D:\\Users\\PC\\VirtualNAU\\client\\src\\textInputs.js":"15","D:\\Users\\PC\\VirtualNAU\\client\\src\\WorkshopsAdm\\RegistrationDrop\\modals.js":"16"},{"size":344,"mtime":1652777970814,"results":"17","hashOfConfig":"18"},{"size":794,"mtime":1652648890393,"results":"19","hashOfConfig":"18"},{"size":2028,"mtime":1652814515573,"results":"20","hashOfConfig":"18"},{"size":504,"mtime":1652777895304,"results":"21","hashOfConfig":"18"},{"size":6034,"mtime":1652814532698,"results":"22","hashOfConfig":"18"},{"size":4980,"mtime":1653033626759,"results":"23","hashOfConfig":"18"},{"size":7678,"mtime":1653039965129,"results":"24","hashOfConfig":"18"},{"size":16128,"mtime":1653034420647,"results":"25","hashOfConfig":"18"},{"size":2503,"mtime":1652777895322,"results":"26","hashOfConfig":"18"},{"size":7398,"mtime":1652585389174,"results":"27","hashOfConfig":"18"},{"size":1162,"mtime":1652777895305,"results":"28","hashOfConfig":"18"},{"size":2165,"mtime":1652815014602,"results":"29","hashOfConfig":"18"},{"size":2067,"mtime":1652435674365,"results":"30","hashOfConfig":"18"},{"size":2357,"mtime":1653035504579,"results":"31","hashOfConfig":"18"},{"size":17981,"mtime":1652835630968,"results":"32","hashOfConfig":"18"},{"size":7122,"mtime":1652777895317,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"ce3qgk",{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"37"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"37"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"D:\\Users\\PC\\VirtualNAU\\client\\src\\index.js",["71","72"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Login from './Login/index';\r\nimport Vendor from './Vendor/index';\r\nimport WorkshopsAdm from './WorkshopsAdm/index';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\n\r\nReactDOM.render(\r\n  //<Login />,\r\n  //<Vendor />,\r\n  <WorkshopsAdm />,\r\n  document.getElementById('root')\r\n);",["73","74"],"D:\\Users\\PC\\VirtualNAU\\client\\src\\WorkshopsAdm\\index.js",[],"D:\\Users\\PC\\VirtualNAU\\client\\src\\Login\\index.js",[],"D:\\Users\\PC\\VirtualNAU\\client\\src\\Vendor\\index.js",[],"D:\\Users\\PC\\VirtualNAU\\client\\src\\showData.js",["75","76","77","78"],"D:\\Users\\PC\\VirtualNAU\\client\\src\\WorkshopsAdm\\newTask.js",["79"],"D:\\Users\\PC\\VirtualNAU\\client\\src\\WorkshopsAdm\\assignTask.js",["80","81","82"],"import React, { Component } from 'react';\r\nimport { ModalOpener } from '../modalOpener';\r\nimport { Request, TaskRequest } from '../textInputs';\r\nimport image from './Images/AssignTask.svg';\r\nimport Axios from 'axios';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Table from 'react-bootstrap/Table';\r\nimport moment from 'moment';\r\n\r\nconst initialState = {\r\n    name: '',\r\n    task: '',\r\n    deadline: '',\r\n    weight: '',\r\n    threads: '',\r\n    price: 0,\r\n    //Auto-asignar\r\n    packages: '',\r\n    description: '',\r\n    quantity: '',\r\n    //Otros\r\n    error: true,\r\n    errors: [true, true, true, true, true, true],\r\n    selectedTask: null,\r\n    tasks: [],\r\n    title: 'Elegir Tarea',\r\n    showPrint: false\r\n};\r\n\r\nexport class AssignTaskButton extends Component {\r\n    state = initialState;\r\n    form = React.createRef();\r\n\r\n    resetState = () => {\r\n        this.setState(initialState);\r\n    }\r\n\r\n    updateError = (index, error) => {\r\n        let errors = [...this.state.errors];\r\n        errors[index] = error;\r\n        this.setState({ errors });\r\n\r\n        let aux = false;\r\n        errors.map((e, key) => {\r\n            aux = aux && (key === index) ? error : e;\r\n        });\r\n        this.setState({ error: aux });\r\n    }\r\n\r\n    componentDidUpdate(prevState) {\r\n        if (this.state.selectedTask === prevState.selectedTask && this.state.name === prevState.name)\r\n            return;\r\n        if (!this.state.name || !this.state.selectedTask || this.state.price)\r\n            return;\r\n        Axios.post('http://localhost:3307/getPrices',\r\n            { name: this.state.name, article: this.state.selectedTask.article_id }).then((response) => {\r\n                //Se debe encontrar el mayor de los id que sean menores a selectedTask.id o el mayor, si no tiene menores\r\n                if (response.data.length === 0)\r\n                    return;\r\n                let currentId = this.state.selectedTask.id, aux = response.data[0];\r\n                response.data.map((task) => {\r\n                    if ((task.id > aux.id && task.id < currentId) || (task.id > currentId && (aux.id === 0 || aux.id > currentId)))\r\n                        aux = task;\r\n                })\r\n                this.setState({ price: aux.price });\r\n            });\r\n    }\r\n\r\n    handleEnter = (event) => {\r\n        if (event.key.toLowerCase() !== 'enter')\r\n            return;\r\n        const form = this.form.current;\r\n        const index = [...form].indexOf(event.target);\r\n        if (form.elements[index + 1])\r\n            form.elements[(index === -1) ? 1 : index + 1].focus();\r\n        if (event.keyCode) //Si el evento es artificial ({key = 'enter'}), no se prevendrá el evento porque no existe\r\n            event.preventDefault();\r\n    };\r\n\r\n    myForm = () => {\r\n        Axios.post('http://localhost:3307/getTasks', { state: 'toAssign' }).then((response) => {\r\n            this.setState({ tasks: response.data });\r\n        });\r\n        return (\r\n            <Form ref={this.form}>\r\n                {this.state.selectedTask ?\r\n                    <>\r\n                        <h3>Bultos: {this.state.selectedTask.packages}</h3>\r\n                        <h3>Descripción: {this.state.selectedTask.article_description}</h3>\r\n                        <h3>Cantidad: {this.state.selectedTask.quantity}</h3>\r\n                    </>\r\n                    : null}\r\n\r\n                <TaskRequest setSelectedTask={(e) => {\r\n                    this.setState({ selectedTask: e });\r\n                    this.updateError(0, !!e);\r\n                    this.handleEnter({ key: 'enter' });\r\n                }} tasks={this.state.tasks} handleEnter={this.handleEnter}\r\n                    title={this.state.title} setTitle={(e) => { this.setState({ title: e }) }} />\r\n\r\n                <Request toShow=\"workshopName\" handleEnter={this.handleEnter} onChange={(event, error) => {\r\n                    this.setState({ name: event });\r\n                    this.updateError(1, error);\r\n                }} />\r\n\r\n                <Request toShow=\"price\" value={this.state.price.toString()} handleEnter={this.handleEnter} onChange={(event, error) => {\r\n                    this.setState({ price: event.target.value });\r\n                    this.updateError(2, error);\r\n                }} />\r\n\r\n                <Request toShow=\"deadline\" handleEnter={this.handleEnter} onChange={(event, error) => {\r\n                    this.setState({ deadline: event.target.value });\r\n                    this.updateError(3, error);\r\n                }} />\r\n\r\n                <Request toShow=\"weight\" handleEnter={this.handleEnter} onChange={(event, error) => {\r\n                    this.setState({ weight: event.target.value });\r\n                    this.updateError(4, error);\r\n                }} />\r\n\r\n                <Request toShow=\"threads\" handleEnter={this.handleEnter} onChange={(event, error) => {\r\n                    this.setState({ threads: event.target.value });\r\n                    this.updateError(5, error);\r\n                }} />\r\n            </Form>\r\n        );\r\n    }\r\n\r\n    toPrint = () => {\r\n        const { showPrint, date, quantity, weight, threads, price } = this.state;\r\n        if (!showPrint)\r\n            return null;\r\n        return (\r\n            <div id=\"toPrint\">\r\n                <Table striped bordered>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Fecha</th>\r\n                            <th>Cantidad</th>\r\n                            <th>Peso</th>\r\n                            <th>Hilos</th>\r\n                            <th>Precio por unidad</th>\r\n                            <th>Dinero</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr style={{ 'backgroundColor': 'green' }}>{/*Muestra el primero*/}\r\n                            <td>{date}</td>\r\n                            <td>{quantity}</td>\r\n                            <td>{weight}</td>\r\n                            <td>{threads}</td>\r\n                            <td>{'$' + price}</td>\r\n                            <td>{'$' + price * quantity}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    print = () => {\r\n        if (this.state.error) {\r\n            alert('Error. No se puede imprimir una boleta inválida.');\r\n            return;\r\n        }\r\n        this.setState({ showPrint: true });\r\n        var printContents = document.getElementById('toPrint').innerHTML;\r\n        var originalContents = document.body.innerHTML;\r\n        document.body.innerHTML = printContents;\r\n        window.print();\r\n        document.body.innerHTML = originalContents;\r\n        this.setState({ showPrint: false });\r\n    }\r\n\r\n    post = () => {\r\n        let aux = this.state;\r\n        this.resetState();\r\n        Axios.put('http://localhost:3307/assignTask', {\r\n            name: aux.name, task: this.state.selectedTask.id, deadline: aux.deadline, weight: aux.weight, threads: aux.threads,\r\n            price: aux.price, exitDate: moment(new Date()).format(\"DD/MM/YYYY\")\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <ModalOpener buttonText='Remito' handleClose={this.resetState}\r\n                    footer={{ label: 'Imprimir', func: this.print, show: true/*!this.state.error*/ }} error={this.state.error}\r\n                    className={'title'} logo={image} title={'Asignar Tarea'} post={this.post} children={this.myForm()} />\r\n            //Crea un botón que abre a un modal en el que aparecerá lo devuelto en this.myForm\r\n                {this.toPrint()}\r\n            </>\r\n        );\r\n    }\r\n}","D:\\Users\\PC\\VirtualNAU\\client\\src\\WorkshopsAdm\\deliverTask.js",["83"],"D:\\Users\\PC\\VirtualNAU\\client\\src\\WorkshopsAdm\\newPayment.js",[],"D:\\Users\\PC\\VirtualNAU\\client\\src\\Vendor\\addStock.js",["84","85","86","87"],"import React, { Component, useEffect, useState } from 'react';\r\nimport { ModalOpener } from '../modalOpener';\r\nimport { Request, TaskRequest } from '../textInputs';\r\nimport Axios from 'axios';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Table from 'react-bootstrap/Table';\r\nimport moment from 'moment';\r\n//import image from './Images/addStock.svg';\r\n\r\nconst initialState = {\r\n    responsable: '',\r\n    date: moment(new Date()).format(\"DD/MM/YYYY\"),\r\n    materials: [{id: '', quantity: ''}]\r\n    //Una lista que tendrá objetos de la forma {id, quantity} (descripción y nombre están guardados en una tabla)\r\n}\r\n\r\nexport class AddStock extends Component {\r\n    state = initialState;\r\n\r\n    addMaterial() {\r\n        this.setState({materials: [...this.state.materials, { id: '', quantity: '' }]})\r\n    }\r\n\r\n    removeMaterial(i) {\r\n        let materials = this.state.materials;\r\n        materials.splice(i, 1);\r\n        this.setState({ materials });\r\n    }\r\n\r\n    changeMaterial(i, e, property) {\r\n        let materials = this.state.materials;\r\n        materials[i][property] = e.target.value;\r\n        this.setState({ materials });\r\n    }\r\n    \r\n\r\n    myForm() {\r\n        return (\r\n            <Form onSubmit={e => e.preventDefault()}>\r\n                {/* Se hará un formulario para que el usuario complete los datos de la materia prima; fecha actual, responsable, nombre, descripción y cantidad  */}\r\n                <Request toShow=\"responsable\" onChange={(event) => {\r\n                    this.setState({ responsable: event.target.value });\r\n                }} />\r\n                <Table striped bordered id=\"taskTable\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Nombre</th>\r\n                            <th>Descripción</th>\r\n                            <th>Cantidad</th>\r\n                            <th>Peso</th>\r\n                            <th>Metros</th>\r\n                            <th></th>{/* Botón de eliminar fila */}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {!this.state.materials? null :\r\n                        this.state.materials.map((material, index) => {\r\n//Debería tomar la fila dada por Row y agregarsela a la lista de materias primas que posee el componente. De estar esta\r\n//ya ingresada (en caso de una modificación), reemplazarle. En caso de eliminarse una fila, aparecerá la cantidad como -1\r\n                        <Row onRemove={this.removeMaterial(index)} onChange={(e, property) => {\r\n                            this.changeMaterial(index, e, property);\r\n                            this.addMaterial();\r\n                        }} /> })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n            </Form>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ModalOpener buttonText='Añadir stock' handleClose={this.resetState}\r\n                className={'title'} /*logo={image}*/ title={'Añadir stock'} post={this.post} children={this.myForm()} />\r\n        );\r\n    }\r\n}\r\n\r\nexport const Row = ({ onChange, onRemove }) => {\r\n\r\n    const [input, setInput] = useState({ id: '', name: '', description: '', quantity: '', weight: '', meters: '' });\r\n\r\n    useEffect(() => {\r\n        onChange(input.id, 'id');\r\n        onChange(input.id, 'quantity');\r\n    }, [input]);\r\n\r\n    return (\r\n        <tr style={{ 'backgroundColor': 'green' }}>{/*Muestra el primero*/}\r\n            <td><FormControl value={input.id}//ID\r\n                onChange={(e) => {\r\n                    let aux = { ...input };\r\n                    aux.id = e.target.value;\r\n                    setInput({ ...aux });\r\n                }} />\r\n            </td>\r\n            <td><FormControl value={input.name}//Nombre\r\n                onChange={(e) => {\r\n                    let aux = { ...input };\r\n                    aux.name = e.target.value;\r\n                    setInput({ ...aux });\r\n                }} /></td>\r\n            <td><FormControl value={input.description}//Descripción\r\n                onChange={(e) => {\r\n                    let aux = { ...input };\r\n                    aux.description = e.target.value;\r\n                    setInput({ ...aux });\r\n                }} /></td>\r\n            <td><FormControl value={input.quantity}//Cantidad\r\n                onChange={(e) => {\r\n                    if (isNaN(e.target.value) || e.target.value < 0)\r\n                        return;\r\n                    let aux = { ...input };\r\n                    aux.quantity = e.target.value;\r\n                    setInput({ ...aux });\r\n                }} /></td>\r\n            <td><FormControl value={input.weight}//Peso\r\n                onChange={(e) => {\r\n                    let aux = { ...input };\r\n                    aux.weight = e.target.value;\r\n                    setInput({ ...aux });\r\n                }} /></td>\r\n            <td><FormControl value={input.meters}//Metros\r\n                onChange={(e) => {\r\n                    let aux = { ...input };\r\n                    aux.meters = e.target.value;\r\n                    setInput({ ...aux });\r\n                }} /></td>\r\n            <td><Button onClick={onRemove}>X</Button></td>\r\n        </tr>\r\n    );\r\n}\r\n\r\n// import React from \"react\";\r\n// import './styles.css'\r\n\r\n// class App extends React.Component {\r\n//   constructor(props) {\r\n//     super(props)\r\n//     this.state = { \r\n//        materials: [{ name: \"\", email : \"\" }]\r\n//      };\r\n//     this.handleSubmit = this.handleSubmit.bind(this)\r\n//   }\r\n  \r\n//   handleChange(i, e) {\r\n//     let materials = this.state.materials;\r\n//     materials[i][e.target.name] = e.target.value;\r\n//     this.setState({ materials });\r\n//   }\r\n\r\n//   addFormFields() {\r\n//     this.setState(({\r\n//       materials: [...this.state.materials, { name: \"\", email: \"\" }]\r\n//     }))\r\n//   }\r\n\r\n//   removeFormFields(i) {\r\n//     let materials = this.state.materials;\r\n//     materials.splice(i, 1);\r\n//     this.setState({ materials });\r\n//   }\r\n\r\n//   handleSubmit(event) {\r\n//     event.preventDefault();\r\n//     alert(JSON.stringify(this.state.materials));\r\n//   }\r\n\r\n//   render() {\r\n\r\n//     return (\r\n//         <form  onSubmit={this.handleSubmit}>\r\n//           {this.state.materials.map((element, index) => (\r\n//             <div className=\"form-inline\" key={index}>\r\n//               <label>Name</label>\r\n//               <input type=\"text\" name=\"name\" value={element.name || \"\"} onChange={e => this.handleChange(index, e)} />\r\n//               <label>Email</label>\r\n//               <input type=\"text\" name=\"email\" value={element.email || \"\"} onChange={e => this.handleChange(index, e)} />\r\n//               {\r\n//                 index ? \r\n//                   <button type=\"button\"  className=\"button remove\" onClick={() => this.removeFormFields(index)}>Remove</button> \r\n//                 : null\r\n//               }\r\n//             </div>\r\n//           ))}\r\n//           <div className=\"button-section\">\r\n//               <button className=\"button add\" type=\"button\" onClick={() => this.addFormFields()}>Add</button>\r\n//               <button className=\"button submit\" type=\"submit\">Submit</button>\r\n//           </div>\r\n//       </form>\r\n//     );\r\n//   }\r\n// }","D:\\Users\\PC\\VirtualNAU\\client\\src\\Vendor\\newQuery.js",["88","89","90"],"import React, { Component } from 'react';\r\nimport { ModalOpener } from '../modalOpener';\r\nimport { Request, TaskRequest } from '../textInputs';\r\nimport Axios from 'axios';\r\nimport Form from 'react-bootstrap/Form';\r\n//import image from './Images/newQuery.svg';\r\n\r\nconst initialState = {\r\n    customer : \" \", //Añade cliente  \r\n    observation : \" \",\r\n}\r\n\r\nexport class NewQuery extends Component {\r\n    state = initialState;\r\n\r\n    resetState = () => {\r\n        this.setState(initialState);\r\n    }\r\n\r\n    myForm = () => {\r\n        return(\r\n            <>\r\n                <Request toShow=\"customerName\" onChange={(e) => {\r\n                    this.setState({customer: e.target.value});\r\n                }}/>\r\n                <Request toShow=\"observation\" onChange={(e) => {\r\n                    this.setState({observation: e.target.value});\r\n                }}/>\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <ModalOpener buttonText='Nuevo pedido' handleClose={this.resetState}\r\n                className={'title'} /*logo={image}*/ title={'Nuevo pedido'} post={this.post} children={this.myForm()} />\r\n        );\r\n    }\r\n}","D:\\Users\\PC\\VirtualNAU\\client\\src\\WorkshopsAdm\\RegistrationDrop\\registrationDrop.js",[],"D:\\Users\\PC\\VirtualNAU\\client\\src\\modalOpener.js",[],"D:\\Users\\PC\\VirtualNAU\\client\\src\\modal.js",[],"D:\\Users\\PC\\VirtualNAU\\client\\src\\textInputs.js",["91","92","93","94","95"],"D:\\Users\\PC\\VirtualNAU\\client\\src\\WorkshopsAdm\\RegistrationDrop\\modals.js",[],{"ruleId":"96","severity":1,"message":"97","line":3,"column":8,"nodeType":"98","messageId":"99","endLine":3,"endColumn":13},{"ruleId":"96","severity":1,"message":"100","line":4,"column":8,"nodeType":"98","messageId":"99","endLine":4,"endColumn":14},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":27,"column":61,"nodeType":"107","messageId":"108","endLine":27,"endColumn":63},{"ruleId":"109","severity":1,"message":"110","line":29,"column":17,"nodeType":"111","messageId":"112","endLine":102,"endColumn":18},{"ruleId":"96","severity":1,"message":"113","line":114,"column":17,"nodeType":"98","messageId":"99","endLine":114,"endColumn":22},{"ruleId":"109","severity":1,"message":"110","line":123,"column":18,"nodeType":"111","messageId":"112","endLine":127,"endColumn":14},{"ruleId":"105","severity":1,"message":"106","line":39,"column":29,"nodeType":"107","messageId":"108","endLine":39,"endColumn":31},{"ruleId":"105","severity":1,"message":"106","line":44,"column":29,"nodeType":"107","messageId":"108","endLine":44,"endColumn":31},{"ruleId":"105","severity":1,"message":"106","line":61,"column":42,"nodeType":"107","messageId":"108","endLine":61,"endColumn":44},{"ruleId":"114","severity":1,"message":"115","line":189,"column":122,"nodeType":"116","messageId":"117","endLine":191,"endColumn":17},{"ruleId":"118","severity":1,"message":"119","line":165,"column":8,"nodeType":"120","endLine":165,"endColumn":22,"suggestions":"121"},{"ruleId":"96","severity":1,"message":"122","line":3,"column":19,"nodeType":"98","messageId":"99","endLine":3,"endColumn":30},{"ruleId":"96","severity":1,"message":"123","line":4,"column":8,"nodeType":"98","messageId":"99","endLine":4,"endColumn":13},{"ruleId":"105","severity":1,"message":"106","line":60,"column":68,"nodeType":"107","messageId":"108","endLine":60,"endColumn":70},{"ruleId":"118","severity":1,"message":"124","line":89,"column":8,"nodeType":"120","endLine":89,"endColumn":15,"suggestions":"125"},{"ruleId":"96","severity":1,"message":"122","line":3,"column":19,"nodeType":"98","messageId":"99","endLine":3,"endColumn":30},{"ruleId":"96","severity":1,"message":"123","line":4,"column":8,"nodeType":"98","messageId":"99","endLine":4,"endColumn":13},{"ruleId":"96","severity":1,"message":"126","line":5,"column":8,"nodeType":"98","messageId":"99","endLine":5,"endColumn":12},{"ruleId":"96","severity":1,"message":"127","line":6,"column":8,"nodeType":"98","messageId":"99","endLine":6,"endColumn":15},{"ruleId":"96","severity":1,"message":"128","line":7,"column":8,"nodeType":"98","messageId":"99","endLine":7,"endColumn":22},{"ruleId":"96","severity":1,"message":"129","line":12,"column":10,"nodeType":"98","messageId":"99","endLine":12,"endColumn":18},{"ruleId":"105","severity":1,"message":"106","line":89,"column":29,"nodeType":"107","messageId":"108","endLine":89,"endColumn":31},{"ruleId":"96","severity":1,"message":"130","line":377,"column":12,"nodeType":"98","messageId":"99","endLine":377,"endColumn":17},"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'Vendor' is defined but never used.","no-native-reassign",["131"],"no-negated-in-lhs",["132"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'table' is assigned a value but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","JSXText","putCommentInBraces","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'input.money' and 'name'. Either include them or remove the dependency array.","ArrayExpression",["133"],"'TaskRequest' is defined but never used.","'Axios' is defined but never used.","React Hook useEffect has a missing dependency: 'onChange'. Either include it or remove the dependency array. If 'onChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["134"],"'Form' is defined but never used.","'Popover' is defined but never used.","'OverlayTrigger' is defined but never used.","'ModalArt' is defined but never used.","'shown' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},"Update the dependencies array to be: [input.money, name, selectedTask]",{"range":"139","text":"140"},"Update the dependencies array to be: [input, onChange]",{"range":"141","text":"142"},[7317,7331],"[input.money, name, selectedTask]",[3507,3514],"[input, onChange]"]